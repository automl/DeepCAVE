Search.setIndex({"alltitles": {"## Modules": [[1, "modules"], [3, "modules"], [16, "modules"], [18, "modules"], [25, "modules"], [27, "modules"], [32, "modules"], [48, "modules"]], "AMLTK": [[68, null]], "API": [[78, null], [82, "api"]], "API References": [[0, null]], "Ablation Paths": [[76, null], [95, null]], "Adding a Converter": [[70, null], [73, "adding-a-converter"]], "Adding a Plugin": [[101, null], [103, "adding-a-plugin"]], "Adjustment 1: Activate run selection": [[101, "adjustment-1-activate-run-selection"]], "Adjustment 2: Icon": [[101, "adjustment-2-icon"]], "BOHB": [[69, null]], "Broad Optimizer Support": [[93, "broad-optimizer-support"]], "Budget Correlation": [[96, null]], "Citation": [[93, "citation"]], "Code": [[99, "code"]], "Comprehensive Analysis Tools": [[93, "comprehensive-analysis-tools"]], "Computation times": [[81, null], [87, null], [88, null], [110, null]], "Configuration": [[99, "configuration"]], "Configuration Cube": [[97, null]], "Configuration Footprint": [[98, null]], "Configuration Space": [[104, "configuration-space"]], "Configurations": [[99, null]], "Converters": [[73, "converters"]], "Correlation Interpretation": [[96, "correlation-interpretation"]], "Cost Over Time": [[100, null]], "Coverage plot": [[98, "coverage-plot"]], "Create Pull Request": [[92, "create-pull-request"]], "DeepCAVE": [[72, null]], "Developer and API Features": [[93, "developer-and-api-features"]], "Displaying Data with Plugins": [[103, null]], "Examples": [[82, null]], "Extend Unit Tests": [[92, "extend-unit-tests"]], "Features": [[93, "features"]], "Flexible and Modular Architecture": [[93, "flexible-and-modular-architecture"]], "Frequently Asked Questions": [[89, null]], "Getting Started": [[90, null]], "Glossary": [[91, null]], "Home": [[93, null]], "How to Contribute": [[92, null]], "Importance Methods": [[102, "importance-methods"]], "Importances": [[77, null], [102, null]], "Install Redis Server": [[109, null]], "Installation": [[94, null]], "Interactive Interface": [[93, "interactive-interface"]], "Interpretation": [[100, "interpretation"]], "Introduction": [[70, "introduction"], [101, "introduction"]], "Mac Related": [[94, "mac-related"]], "Meta": [[104, "meta"]], "More Options": [[90, "more-options"]], "Multi-Layer Perceptron via PyTorch": [[86, null]], "Multi-Layer Perceptron via Sklearn": [[83, null]], "Objectives": [[99, "objectives"], [104, "objectives"]], "Options": [[95, "options"], [96, "options"], [97, "options"], [98, "options"], [100, "options"], [102, "options"], [105, "options"], [106, "options"], [107, "options"], [108, "options"]], "Optuna": [[74, null]], "Overview": [[99, "overview"], [104, null]], "Pandas DataFrame": [[71, null]], "Parallel Coordinates": [[79, null], [105, null]], "Pareto Front": [[106, null]], "Partial Dependencies": [[80, null], [107, null]], "Performance plot": [[98, "performance-plot"]], "Plugin Structure": [[103, "plugin-structure"]], "Plugin Types": [[103, "plugin-types"]], "Pre-Commit Hook": [[92, "pre-commit-hook"]], "Properties": [[2, "properties"], [4, "properties"], [8, "properties"], [9, "properties"], [10, "properties"], [11, "properties"], [13, "properties"], [14, "properties"], [15, "properties"], [17, "properties"], [26, "properties"], [31, "properties"], [33, "properties"], [34, "properties"], [35, "properties"], [36, "properties"], [37, "properties"], [38, "properties"], [39, "properties"], [41, "properties"], [42, "properties"], [43, "properties"], [44, "properties"], [45, "properties"], [46, "properties"], [47, "properties"], [63, "properties"]], "Quick Information": [[104, "quick-information"]], "Record": [[82, "record"], [84, null]], "Record Minimal Run": [[85, null]], "Redis Server": [[94, "id1"]], "Runs and Converters": [[73, null]], "SMAC": [[75, null]], "Setup Development Workflow": [[92, "setup-development-workflow"]], "Statuses": [[104, "statuses"]], "Step 1: Create the converter class": [[70, "step-1-create-the-converter-class"]], "Step 1: Create the plugin class": [[101, "step-1-create-the-plugin-class"]], "Step 2: Register your converter": [[70, "step-2-register-your-converter"]], "Step 2: Register your plugin": [[101, "step-2-register-your-plugin"]], "Step 3: Decide on your plugin type": [[101, "step-3-decide-on-your-plugin-type"]], "Step 3: Implement the methods": [[70, "step-3-implement-the-methods"]], "Step 4: Adjust the functions of your plugin": [[101, "step-4-adjust-the-functions-of-your-plugin"]], "Step 4: Document your converter": [[70, "step-4-document-your-converter"]], "Step 5: Congratulate yourself": [[70, "step-5-congratulate-yourself"]], "Step 5: Fit the plugin to your needs": [[101, "step-5-fit-the-plugin-to-your-needs"]], "Step 6: Document your plugin": [[101, "step-6-document-your-plugin"]], "Step 7: Congratulate yourself": [[101, "step-7-congratulate-yourself"]], "Symbolic Explanations": [[108, null]], "The Run Object": [[73, "the-run-object"]], "Understand the structure of the layout": [[101, "understand-the-structure-of-the-layout"]], "Update Documentation": [[92, "update-documentation"]], "Using the plot": [[105, "using-the-plot"]], "deepcave.evaluators": [[1, null]], "deepcave.evaluators.ablation": [[2, null]], "deepcave.evaluators.epm": [[3, null]], "deepcave.evaluators.epm.fanova_forest": [[4, null]], "deepcave.evaluators.epm.random_forest": [[5, null]], "deepcave.evaluators.epm.random_forest_surrogate": [[6, null]], "deepcave.evaluators.epm.utils": [[7, null]], "deepcave.evaluators.fanova": [[8, null]], "deepcave.evaluators.footprint": [[9, null]], "deepcave.evaluators.lpi": [[10, null]], "deepcave.layouts": [[11, null]], "deepcave.layouts.header": [[12, null]], "deepcave.layouts.not_found": [[13, null]], "deepcave.layouts.sidebar": [[14, null]], "deepcave.plugins": [[15, null]], "deepcave.plugins.budget": [[16, null]], "deepcave.plugins.dynamic": [[17, null]], "deepcave.plugins.hyperparameter": [[18, null]], "deepcave.plugins.hyperparameter.ablation_paths": [[19, null]], "deepcave.plugins.hyperparameter.configuration_cube": [[20, null]], "deepcave.plugins.hyperparameter.importances": [[21, null]], "deepcave.plugins.hyperparameter.parallel_coordinates": [[22, null]], "deepcave.plugins.hyperparameter.pdp": [[23, null]], "deepcave.plugins.hyperparameter.symbolic_explanations": [[24, null]], "deepcave.plugins.objective": [[25, null]], "deepcave.plugins.static": [[26, null]], "deepcave.plugins.summary": [[27, null]], "deepcave.plugins.summary.configurations": [[28, null]], "deepcave.plugins.summary.footprint": [[29, null]], "deepcave.plugins.summary.overview": [[30, null]], "deepcave.runs": [[31, null]], "deepcave.runs.converters": [[32, null]], "deepcave.runs.converters.amltk": [[33, null]], "deepcave.runs.converters.bohb": [[34, null]], "deepcave.runs.converters.dataframe": [[35, null]], "deepcave.runs.converters.deepcave": [[36, null]], "deepcave.runs.converters.optuna": [[37, null]], "deepcave.runs.converters.smac3v1": [[38, null]], "deepcave.runs.converters.smac3v2": [[39, null]], "deepcave.runs.exceptions": [[40, null]], "deepcave.runs.group": [[41, null]], "deepcave.runs.handler": [[42, null]], "deepcave.runs.objective": [[43, null]], "deepcave.runs.recorder": [[44, null]], "deepcave.runs.run": [[45, null]], "deepcave.runs.status": [[46, null]], "deepcave.runs.trial": [[47, null]], "deepcave.utils": [[48, null]], "deepcave.utils.cache": [[49, null]], "deepcave.utils.cast": [[50, null]], "deepcave.utils.compression": [[51, null]], "deepcave.utils.configs": [[52, null]], "deepcave.utils.configspace": [[53, null]], "deepcave.utils.converters": [[54, null]], "deepcave.utils.dash": [[55, null]], "deepcave.utils.data_structures": [[56, null]], "deepcave.utils.docs": [[57, null]], "deepcave.utils.files": [[58, null]], "deepcave.utils.hash": [[59, null]], "deepcave.utils.layout": [[60, null]], "deepcave.utils.logs": [[61, null]], "deepcave.utils.notification": [[62, null]], "deepcave.utils.run_caches": [[63, null]], "deepcave.utils.styled_plotty": [[64, null]], "deepcave.utils.symbolic_regression": [[65, null]], "deepcave.utils.url": [[66, null]], "deepcave.utils.util": [[67, null]]}, "docnames": ["api", "api/deepcave.evaluators", "api/deepcave.evaluators.ablation", "api/deepcave.evaluators.epm", "api/deepcave.evaluators.epm.fanova_forest", "api/deepcave.evaluators.epm.random_forest", "api/deepcave.evaluators.epm.random_forest_surrogate", "api/deepcave.evaluators.epm.utils", "api/deepcave.evaluators.fanova", "api/deepcave.evaluators.footprint", "api/deepcave.evaluators.lpi", "api/deepcave.layouts", "api/deepcave.layouts.header", "api/deepcave.layouts.not_found", "api/deepcave.layouts.sidebar", "api/deepcave.plugins", "api/deepcave.plugins.budget", "api/deepcave.plugins.dynamic", "api/deepcave.plugins.hyperparameter", "api/deepcave.plugins.hyperparameter.ablation_paths", "api/deepcave.plugins.hyperparameter.configuration_cube", "api/deepcave.plugins.hyperparameter.importances", "api/deepcave.plugins.hyperparameter.parallel_coordinates", "api/deepcave.plugins.hyperparameter.pdp", "api/deepcave.plugins.hyperparameter.symbolic_explanations", "api/deepcave.plugins.objective", "api/deepcave.plugins.static", "api/deepcave.plugins.summary", "api/deepcave.plugins.summary.configurations", "api/deepcave.plugins.summary.footprint", "api/deepcave.plugins.summary.overview", "api/deepcave.runs", "api/deepcave.runs.converters", "api/deepcave.runs.converters.amltk", "api/deepcave.runs.converters.bohb", "api/deepcave.runs.converters.dataframe", "api/deepcave.runs.converters.deepcave", "api/deepcave.runs.converters.optuna", "api/deepcave.runs.converters.smac3v1", "api/deepcave.runs.converters.smac3v2", "api/deepcave.runs.exceptions", "api/deepcave.runs.group", "api/deepcave.runs.handler", "api/deepcave.runs.objective", "api/deepcave.runs.recorder", "api/deepcave.runs.run", "api/deepcave.runs.status", "api/deepcave.runs.trial", "api/deepcave.utils", "api/deepcave.utils.cache", "api/deepcave.utils.cast", "api/deepcave.utils.compression", "api/deepcave.utils.configs", "api/deepcave.utils.configspace", "api/deepcave.utils.converters", "api/deepcave.utils.dash", "api/deepcave.utils.data_structures", "api/deepcave.utils.docs", "api/deepcave.utils.files", "api/deepcave.utils.hash", "api/deepcave.utils.layout", "api/deepcave.utils.logs", "api/deepcave.utils.notification", "api/deepcave.utils.run_caches", "api/deepcave.utils.styled_plotty", "api/deepcave.utils.symbolic_regression", "api/deepcave.utils.url", "api/deepcave.utils.util", "converters/amltk", "converters/bohb", "converters/custom_converters", "converters/dataframe", "converters/deepcave", "converters/index", "converters/optuna", "converters/smac", "examples/api/ablation_paths", "examples/api/importances", "examples/api/index", "examples/api/parallel_coordinates", "examples/api/pdp", "examples/api/sg_execution_times", "examples/index", "examples/record/digits_sklearn", "examples/record/index", "examples/record/minimal", "examples/record/mnist_pytorch", "examples/record/sg_execution_times", "examples/sg_execution_times", "faq", "getting_started", "glossary", "how_to_contribute", "index", "installation", "plugins/ablation_paths", "plugins/budget_correlation", "plugins/configuration_cube", "plugins/configuration_footprint", "plugins/configurations", "plugins/cost_over_time", "plugins/custom_plugins", "plugins/importances", "plugins/index", "plugins/overview", "plugins/parallel_coordinates", "plugins/pareto_front", "plugins/partial_dependencies", "plugins/symbolic_explanations", "redis", "sg_execution_times"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api.rst", "api/deepcave.evaluators.rst", "api/deepcave.evaluators.ablation.rst", "api/deepcave.evaluators.epm.rst", "api/deepcave.evaluators.epm.fanova_forest.rst", "api/deepcave.evaluators.epm.random_forest.rst", "api/deepcave.evaluators.epm.random_forest_surrogate.rst", "api/deepcave.evaluators.epm.utils.rst", "api/deepcave.evaluators.fanova.rst", "api/deepcave.evaluators.footprint.rst", "api/deepcave.evaluators.lpi.rst", "api/deepcave.layouts.rst", "api/deepcave.layouts.header.rst", "api/deepcave.layouts.not_found.rst", "api/deepcave.layouts.sidebar.rst", "api/deepcave.plugins.rst", "api/deepcave.plugins.budget.rst", "api/deepcave.plugins.dynamic.rst", "api/deepcave.plugins.hyperparameter.rst", "api/deepcave.plugins.hyperparameter.ablation_paths.rst", "api/deepcave.plugins.hyperparameter.configuration_cube.rst", "api/deepcave.plugins.hyperparameter.importances.rst", "api/deepcave.plugins.hyperparameter.parallel_coordinates.rst", "api/deepcave.plugins.hyperparameter.pdp.rst", "api/deepcave.plugins.hyperparameter.symbolic_explanations.rst", "api/deepcave.plugins.objective.rst", "api/deepcave.plugins.static.rst", "api/deepcave.plugins.summary.rst", "api/deepcave.plugins.summary.configurations.rst", "api/deepcave.plugins.summary.footprint.rst", "api/deepcave.plugins.summary.overview.rst", "api/deepcave.runs.rst", "api/deepcave.runs.converters.rst", "api/deepcave.runs.converters.amltk.rst", "api/deepcave.runs.converters.bohb.rst", "api/deepcave.runs.converters.dataframe.rst", "api/deepcave.runs.converters.deepcave.rst", "api/deepcave.runs.converters.optuna.rst", "api/deepcave.runs.converters.smac3v1.rst", "api/deepcave.runs.converters.smac3v2.rst", "api/deepcave.runs.exceptions.rst", "api/deepcave.runs.group.rst", "api/deepcave.runs.handler.rst", "api/deepcave.runs.objective.rst", "api/deepcave.runs.recorder.rst", "api/deepcave.runs.run.rst", "api/deepcave.runs.status.rst", "api/deepcave.runs.trial.rst", "api/deepcave.utils.rst", "api/deepcave.utils.cache.rst", "api/deepcave.utils.cast.rst", "api/deepcave.utils.compression.rst", "api/deepcave.utils.configs.rst", "api/deepcave.utils.configspace.rst", "api/deepcave.utils.converters.rst", "api/deepcave.utils.dash.rst", "api/deepcave.utils.data_structures.rst", "api/deepcave.utils.docs.rst", "api/deepcave.utils.files.rst", "api/deepcave.utils.hash.rst", "api/deepcave.utils.layout.rst", "api/deepcave.utils.logs.rst", "api/deepcave.utils.notification.rst", "api/deepcave.utils.run_caches.rst", "api/deepcave.utils.styled_plotty.rst", "api/deepcave.utils.symbolic_regression.rst", "api/deepcave.utils.url.rst", "api/deepcave.utils.util.rst", "converters/amltk.rst", "converters/bohb.rst", "converters/custom_converters.rst", "converters/dataframe.rst", "converters/deepcave.rst", "converters/index.rst", "converters/optuna.rst", "converters/smac.rst", "examples/api/ablation_paths.rst", "examples/api/importances.rst", "examples/api/index.rst", "examples/api/parallel_coordinates.rst", "examples/api/pdp.rst", "examples/api/sg_execution_times.rst", "examples/index.rst", "examples/record/digits_sklearn.rst", "examples/record/index.rst", "examples/record/minimal.rst", "examples/record/mnist_pytorch.rst", "examples/record/sg_execution_times.rst", "examples/sg_execution_times.rst", "faq.rst", "getting_started.rst", "glossary.rst", "how_to_contribute.rst", "index.rst", "installation.rst", "plugins/ablation_paths.rst", "plugins/budget_correlation.rst", "plugins/configuration_cube.rst", "plugins/configuration_footprint.rst", "plugins/configurations.rst", "plugins/cost_over_time.rst", "plugins/custom_plugins.rst", "plugins/importances.rst", "plugins/index.rst", "plugins/overview.rst", "plugins/parallel_coordinates.rst", "plugins/pareto_front.rst", "plugins/partial_dependencies.rst", "plugins/symbolic_explanations.rst", "redis.rst", "sg_execution_times.rst"], "indexentries": {"__call__() (deepcave.layouts.header.headerlayout method)": [[12, "deepcave.layouts.header.HeaderLayout.__call__", false]], "__call__() (deepcave.layouts.layout method)": [[11, "deepcave.layouts.Layout.__call__", false]], "__call__() (deepcave.layouts.not_found.notfoundlayout method)": [[13, "deepcave.layouts.not_found.NotFoundLayout.__call__", false]], "__call__() (deepcave.layouts.sidebar.sidebarlayout method)": [[14, "deepcave.layouts.sidebar.SidebarLayout.__call__", false]], "__call__() (deepcave.plugins.dynamic.dynamicplugin method)": [[17, "deepcave.plugins.dynamic.DynamicPlugin.__call__", false]], "__call__() (deepcave.plugins.plugin method)": [[15, "deepcave.plugins.Plugin.__call__", false]], "__call__() (deepcave.plugins.static.staticplugin method)": [[26, "deepcave.plugins.static.StaticPlugin.__call__", false]], "__eq__() (deepcave.runs.objective.objective method)": [[43, "deepcave.runs.objective.Objective.__eq__", false]], "__iter__() (deepcave.runs.group.group method)": [[41, "deepcave.runs.group.Group.__iter__", false]], "__post_init__() (deepcave.runs.objective.objective method)": [[43, "deepcave.runs.objective.Objective.__post_init__", false]], "__post_init__() (deepcave.runs.trial.trial method)": [[47, "deepcave.runs.trial.Trial.__post_init__", false]], "ablation (class in deepcave.evaluators.ablation)": [[2, "deepcave.evaluators.ablation.Ablation", false]], "ablationpaths (class in deepcave.plugins.hyperparameter.ablation_paths)": [[19, "deepcave.plugins.hyperparameter.ablation_paths.AblationPaths", false]], "abstractrun (class in deepcave.runs)": [[31, "deepcave.runs.AbstractRun", false]], "add() (deepcave.runs.run.run method)": [[45, "deepcave.runs.run.Run.add", false]], "add_run() (deepcave.runs.handler.runhandler method)": [[42, "deepcave.runs.handler.RunHandler.add_run", false]], "alert() (in module deepcave.utils.dash)": [[55, "deepcave.utils.dash.alert", false]], "all_runs (deepcave.plugins.plugin property)": [[15, "deepcave.plugins.Plugin.all_runs", false]], "amltkrun (class in deepcave.runs.converters.amltk)": [[33, "deepcave.runs.converters.amltk.AMLTKRun", false]], "bo (bayesian optimization)": [[91, "term-BO-Bayesian-Optimization", true]], "bohbrun (class in deepcave.runs.converters.bohb)": [[34, "deepcave.runs.converters.bohb.BOHBRun", false]], "budget": [[91, "term-Budget", true]], "cache (class in deepcave.utils.cache)": [[49, "deepcave.utils.cache.Cache", false]], "calculate() (deepcave.evaluators.ablation.ablation method)": [[2, "deepcave.evaluators.ablation.Ablation.calculate", false]], "calculate() (deepcave.evaluators.fanova.fanova method)": [[8, "deepcave.evaluators.fanova.fANOVA.calculate", false]], "calculate() (deepcave.evaluators.footprint.footprint method)": [[9, "deepcave.evaluators.footprint.Footprint.calculate", false]], "calculate() (deepcave.evaluators.lpi.lpi method)": [[10, "deepcave.evaluators.lpi.LPI.calculate", false]], "check_equality() (in module deepcave.runs)": [[31, "deepcave.runs.check_equality", false]], "check_run_compatibility() (deepcave.plugins.plugin static method)": [[15, "deepcave.plugins.Plugin.check_run_compatibility", false]], "check_runs_compatibility() (deepcave.plugins.plugin method)": [[15, "deepcave.plugins.Plugin.check_runs_compatibility", false]], "clear() (deepcave.utils.cache.cache method)": [[49, "deepcave.utils.cache.Cache.clear", false]], "clear() (deepcave.utils.run_caches.runcaches method)": [[63, "deepcave.utils.run_caches.RunCaches.clear", false]], "clear_run() (deepcave.utils.run_caches.runcaches method)": [[63, "deepcave.utils.run_caches.RunCaches.clear_run", false]], "compute_marginals() (deepcave.evaluators.epm.fanova_forest.fanovaforest method)": [[4, "deepcave.evaluators.epm.fanova_forest.FanovaForest.compute_marginals", false]], "config_to_tuple() (in module deepcave.utils.util)": [[67, "deepcave.utils.util.config_to_tuple", false]], "configuration": [[91, "term-Configuration", true]], "configurationcube (class in deepcave.plugins.hyperparameter.configuration_cube)": [[20, "deepcave.plugins.hyperparameter.configuration_cube.ConfigurationCube", false]], "configurations (class in deepcave.plugins.summary.configurations)": [[28, "deepcave.plugins.summary.configurations.Configurations", false]], "convert_symb() (in module deepcave.utils.symbolic_regression)": [[65, "deepcave.utils.symbolic_regression.convert_symb", false]], "create_table() (in module deepcave.utils.layout)": [[60, "deepcave.utils.layout.create_table", false]], "create_url() (in module deepcave.utils.url)": [[66, "deepcave.utils.url.create_url", false]], "custom_round() (in module deepcave.utils.util)": [[67, "deepcave.utils.util.custom_round", false]], "dataframerun (class in deepcave.runs.converters.dataframe)": [[35, "deepcave.runs.converters.dataframe.DataFrameRun", false]], "deepcave.evaluators": [[1, "module-deepcave.evaluators", false]], "deepcave.evaluators.ablation": [[2, "module-deepcave.evaluators.ablation", false]], "deepcave.evaluators.epm": [[3, "module-deepcave.evaluators.epm", false]], "deepcave.evaluators.epm.fanova_forest": [[4, "module-deepcave.evaluators.epm.fanova_forest", false]], "deepcave.evaluators.epm.random_forest": [[5, "module-deepcave.evaluators.epm.random_forest", false]], "deepcave.evaluators.epm.random_forest_surrogate": [[6, "module-deepcave.evaluators.epm.random_forest_surrogate", false]], "deepcave.evaluators.epm.utils": [[7, "module-deepcave.evaluators.epm.utils", false]], "deepcave.evaluators.fanova": [[8, "module-deepcave.evaluators.fanova", false]], "deepcave.evaluators.footprint": [[9, "module-deepcave.evaluators.footprint", false]], "deepcave.evaluators.lpi": [[10, "module-deepcave.evaluators.lpi", false]], "deepcave.layouts": [[11, "module-deepcave.layouts", false]], "deepcave.layouts.header": [[12, "module-deepcave.layouts.header", false]], "deepcave.layouts.not_found": [[13, "module-deepcave.layouts.not_found", false]], "deepcave.layouts.sidebar": [[14, "module-deepcave.layouts.sidebar", false]], "deepcave.plugins": [[15, "module-deepcave.plugins", false]], "deepcave.plugins.budget": [[16, "module-deepcave.plugins.budget", false]], "deepcave.plugins.dynamic": [[17, "module-deepcave.plugins.dynamic", false]], "deepcave.plugins.hyperparameter": [[18, "module-deepcave.plugins.hyperparameter", false]], "deepcave.plugins.hyperparameter.ablation_paths": [[19, "module-deepcave.plugins.hyperparameter.ablation_paths", false]], "deepcave.plugins.hyperparameter.configuration_cube": [[20, "module-deepcave.plugins.hyperparameter.configuration_cube", false]], "deepcave.plugins.hyperparameter.importances": [[21, "module-deepcave.plugins.hyperparameter.importances", false]], "deepcave.plugins.hyperparameter.parallel_coordinates": [[22, "module-deepcave.plugins.hyperparameter.parallel_coordinates", false]], "deepcave.plugins.hyperparameter.pdp": [[23, "module-deepcave.plugins.hyperparameter.pdp", false]], "deepcave.plugins.hyperparameter.symbolic_explanations": [[24, "module-deepcave.plugins.hyperparameter.symbolic_explanations", false]], "deepcave.plugins.objective": [[25, "module-deepcave.plugins.objective", false]], "deepcave.plugins.static": [[26, "module-deepcave.plugins.static", false]], "deepcave.plugins.summary": [[27, "module-deepcave.plugins.summary", false]], "deepcave.plugins.summary.configurations": [[28, "module-deepcave.plugins.summary.configurations", false]], "deepcave.plugins.summary.footprint": [[29, "module-deepcave.plugins.summary.footprint", false]], "deepcave.plugins.summary.overview": [[30, "module-deepcave.plugins.summary.overview", false]], "deepcave.runs": [[31, "module-deepcave.runs", false]], "deepcave.runs.converters": [[32, "module-deepcave.runs.converters", false]], "deepcave.runs.converters.amltk": [[33, "module-deepcave.runs.converters.amltk", false]], "deepcave.runs.converters.bohb": [[34, "module-deepcave.runs.converters.bohb", false]], "deepcave.runs.converters.dataframe": [[35, "module-deepcave.runs.converters.dataframe", false]], "deepcave.runs.converters.deepcave": [[36, "module-deepcave.runs.converters.deepcave", false]], "deepcave.runs.converters.optuna": [[37, "module-deepcave.runs.converters.optuna", false]], "deepcave.runs.converters.smac3v1": [[38, "module-deepcave.runs.converters.smac3v1", false]], "deepcave.runs.converters.smac3v2": [[39, "module-deepcave.runs.converters.smac3v2", false]], "deepcave.runs.exceptions": [[40, "module-deepcave.runs.exceptions", false]], "deepcave.runs.group": [[41, "module-deepcave.runs.group", false]], "deepcave.runs.handler": [[42, "module-deepcave.runs.handler", false]], "deepcave.runs.objective": [[43, "module-deepcave.runs.objective", false]], "deepcave.runs.recorder": [[44, "module-deepcave.runs.recorder", false]], "deepcave.runs.run": [[45, "module-deepcave.runs.run", false]], "deepcave.runs.status": [[46, "module-deepcave.runs.status", false]], "deepcave.runs.trial": [[47, "module-deepcave.runs.trial", false]], "deepcave.utils": [[48, "module-deepcave.utils", false]], "deepcave.utils.cache": [[49, "module-deepcave.utils.cache", false]], "deepcave.utils.cast": [[50, "module-deepcave.utils.cast", false]], "deepcave.utils.compression": [[51, "module-deepcave.utils.compression", false]], "deepcave.utils.configs": [[52, "module-deepcave.utils.configs", false]], "deepcave.utils.configspace": [[53, "module-deepcave.utils.configspace", false]], "deepcave.utils.converters": [[54, "module-deepcave.utils.converters", false]], "deepcave.utils.dash": [[55, "module-deepcave.utils.dash", false]], "deepcave.utils.data_structures": [[56, "module-deepcave.utils.data_structures", false]], "deepcave.utils.docs": [[57, "module-deepcave.utils.docs", false]], "deepcave.utils.files": [[58, "module-deepcave.utils.files", false]], "deepcave.utils.hash": [[59, "module-deepcave.utils.hash", false]], "deepcave.utils.layout": [[60, "module-deepcave.utils.layout", false]], "deepcave.utils.logs": [[61, "module-deepcave.utils.logs", false]], "deepcave.utils.notification": [[62, "module-deepcave.utils.notification", false]], "deepcave.utils.run_caches": [[63, "module-deepcave.utils.run_caches", false]], "deepcave.utils.styled_plotty": [[64, "module-deepcave.utils.styled_plotty", false]], "deepcave.utils.symbolic_regression": [[65, "module-deepcave.utils.symbolic_regression", false]], "deepcave.utils.url": [[66, "module-deepcave.utils.url", false]], "deepcave.utils.util": [[67, "module-deepcave.utils.util", false]], "deepcaverun (class in deepcave.runs.converters.deepcave)": [[36, "deepcave.runs.converters.deepcave.DeepCAVERun", false]], "default() (deepcave.utils.compression.encoder method)": [[51, "deepcave.utils.compression.Encoder.default", false]], "deserialize() (in module deepcave.utils.compression)": [[51, "deepcave.utils.compression.deserialize", false]], "dynamicplugin (class in deepcave.plugins.dynamic)": [[17, "deepcave.plugins.dynamic.DynamicPlugin", false]], "empty() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.empty", false]], "encode_config() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.encode_config", false]], "encode_configs() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.encode_configs", false]], "encoder (class in deepcave.utils.compression)": [[51, "deepcave.utils.compression.Encoder", false]], "end() (deepcave.runs.recorder.recorder method)": [[44, "deepcave.runs.recorder.Recorder.end", false]], "exists() (deepcave.runs.run.run method)": [[45, "deepcave.runs.run.Run.exists", false]], "exp() (in module deepcave.utils.symbolic_regression)": [[65, "deepcave.utils.symbolic_regression.exp", false]], "extract_config() (in module deepcave.utils.converters)": [[54, "deepcave.utils.converters.extract_config", false]], "extract_costs() (in module deepcave.utils.converters)": [[54, "deepcave.utils.converters.extract_costs", false]], "extract_value() (in module deepcave.utils.converters)": [[54, "deepcave.utils.converters.extract_value", false]], "fanova (class in deepcave.evaluators.fanova)": [[8, "deepcave.evaluators.fanova.fANOVA", false]], "fanovaforest (class in deepcave.evaluators.epm.fanova_forest)": [[4, "deepcave.evaluators.epm.fanova_forest.FanovaForest", false]], "file_to_hash() (in module deepcave.utils.hash)": [[59, "deepcave.utils.hash.file_to_hash", false]], "flash() (in module deepcave.utils.dash)": [[55, "deepcave.utils.dash.flash", false]], "footprint (class in deepcave.evaluators.footprint)": [[9, "deepcave.evaluators.footprint.Footprint", false]], "footprint (class in deepcave.plugins.summary.footprint)": [[29, "deepcave.plugins.summary.footprint.FootPrint", false]], "from_json() (deepcave.runs.objective.objective static method)": [[43, "deepcave.runs.objective.Objective.from_json", false]], "from_path() (deepcave.runs.converters.amltk.amltkrun class method)": [[33, "deepcave.runs.converters.amltk.AMLTKRun.from_path", false]], "from_path() (deepcave.runs.converters.bohb.bohbrun class method)": [[34, "deepcave.runs.converters.bohb.BOHBRun.from_path", false]], "from_path() (deepcave.runs.converters.dataframe.dataframerun class method)": [[35, "deepcave.runs.converters.dataframe.DataFrameRun.from_path", false]], "from_path() (deepcave.runs.converters.deepcave.deepcaverun class method)": [[36, "deepcave.runs.converters.deepcave.DeepCAVERun.from_path", false]], "from_path() (deepcave.runs.converters.optuna.optunarun class method)": [[37, "deepcave.runs.converters.optuna.OptunaRun.from_path", false]], "from_path() (deepcave.runs.converters.smac3v1.smac3v1run class method)": [[38, "deepcave.runs.converters.smac3v1.SMAC3v1Run.from_path", false]], "from_path() (deepcave.runs.converters.smac3v2.smac3v2run class method)": [[39, "deepcave.runs.converters.smac3v2.SMAC3v2Run.from_path", false]], "from_path() (deepcave.runs.run.run class method)": [[45, "deepcave.runs.run.Run.from_path", false]], "generate_config_code() (in module deepcave.utils.styled_plotty)": [[64, "deepcave.utils.styled_plotty.generate_config_code", false]], "generate_inputs() (deepcave.plugins.plugin method)": [[15, "deepcave.plugins.Plugin.generate_inputs", false]], "generate_outputs() (deepcave.plugins.plugin class method)": [[15, "deepcave.plugins.Plugin.generate_outputs", false]], "get() (deepcave.utils.cache.cache method)": [[49, "deepcave.utils.cache.Cache.get", false]], "get() (deepcave.utils.run_caches.runcaches method)": [[63, "deepcave.utils.run_caches.RunCaches.get", false]], "get_ablation_improvements() (deepcave.evaluators.ablation.ablation method)": [[2, "deepcave.evaluators.ablation.Ablation.get_ablation_improvements", false]], "get_ablation_performances() (deepcave.evaluators.ablation.ablation method)": [[2, "deepcave.evaluators.ablation.Ablation.get_ablation_performances", false]], "get_all_costs() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_all_costs", false]], "get_available_run_paths() (deepcave.runs.handler.runhandler method)": [[42, "deepcave.runs.handler.RunHandler.get_available_run_paths", false]], "get_avg_costs() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_avg_costs", false]], "get_base_url() (deepcave.plugins.plugin class method)": [[15, "deepcave.plugins.Plugin.get_base_url", false]], "get_budget() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_budget", false]], "get_budget_ids() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_budget_ids", false]], "get_budgets() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_budgets", false]], "get_checklist_options() (in module deepcave.utils.layout)": [[60, "deepcave.utils.layout.get_checklist_options", false]], "get_color() (in module deepcave.utils.styled_plotty)": [[64, "deepcave.utils.styled_plotty.get_color", false]], "get_config() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_config", false]], "get_config_id() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_config_id", false]], "get_configs() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_configs", false]], "get_discrete_heatmap() (in module deepcave.utils.styled_plotty)": [[64, "deepcave.utils.styled_plotty.get_discrete_heatmap", false]], "get_encoded_data() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_encoded_data", false]], "get_filter_layout() (deepcave.plugins.hyperparameter.ablation_paths.ablationpaths static method)": [[19, "deepcave.plugins.hyperparameter.ablation_paths.AblationPaths.get_filter_layout", false]], "get_filter_layout() (deepcave.plugins.hyperparameter.configuration_cube.configurationcube static method)": [[20, "deepcave.plugins.hyperparameter.configuration_cube.ConfigurationCube.get_filter_layout", false]], "get_filter_layout() (deepcave.plugins.hyperparameter.importances.importances static method)": [[21, "deepcave.plugins.hyperparameter.importances.Importances.get_filter_layout", false]], "get_filter_layout() (deepcave.plugins.hyperparameter.parallel_coordinates.parallelcoordinates static method)": [[22, "deepcave.plugins.hyperparameter.parallel_coordinates.ParallelCoordinates.get_filter_layout", false]], "get_filter_layout() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[23, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.get_filter_layout", false]], "get_filter_layout() (deepcave.plugins.plugin static method)": [[15, "deepcave.plugins.Plugin.get_filter_layout", false]], "get_filter_layout() (deepcave.plugins.summary.footprint.footprint static method)": [[29, "deepcave.plugins.summary.footprint.FootPrint.get_filter_layout", false]], "get_function_set() (in module deepcave.utils.symbolic_regression)": [[65, "deepcave.utils.symbolic_regression.get_function_set", false]], "get_groups() (deepcave.runs.handler.runhandler method)": [[42, "deepcave.runs.handler.RunHandler.get_groups", false]], "get_highest_budget() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_highest_budget", false]], "get_hovertext_from_config() (in module deepcave.utils.styled_plotty)": [[64, "deepcave.utils.styled_plotty.get_hovertext_from_config", false]], "get_hyperparameter_ticks() (in module deepcave.utils.styled_plotty)": [[64, "deepcave.utils.styled_plotty.get_hyperparameter_ticks", false]], "get_hyperparameter_ticks_from_values() (in module deepcave.utils.styled_plotty)": [[64, "deepcave.utils.styled_plotty.get_hyperparameter_ticks_from_values", false]], "get_importances() (deepcave.evaluators.fanova.fanova method)": [[8, "deepcave.evaluators.fanova.fANOVA.get_importances", false]], "get_importances() (deepcave.evaluators.lpi.lpi method)": [[10, "deepcave.evaluators.lpi.LPI.get_importances", false]], "get_incumbent() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_incumbent", false]], "get_input_layout() (deepcave.plugins.hyperparameter.ablation_paths.ablationpaths static method)": [[19, "deepcave.plugins.hyperparameter.ablation_paths.AblationPaths.get_input_layout", false]], "get_input_layout() (deepcave.plugins.hyperparameter.configuration_cube.configurationcube static method)": [[20, "deepcave.plugins.hyperparameter.configuration_cube.ConfigurationCube.get_input_layout", false]], "get_input_layout() (deepcave.plugins.hyperparameter.importances.importances static method)": [[21, "deepcave.plugins.hyperparameter.importances.Importances.get_input_layout", false]], "get_input_layout() (deepcave.plugins.hyperparameter.parallel_coordinates.parallelcoordinates static method)": [[22, "deepcave.plugins.hyperparameter.parallel_coordinates.ParallelCoordinates.get_input_layout", false]], "get_input_layout() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[23, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.get_input_layout", false]], "get_input_layout() (deepcave.plugins.hyperparameter.symbolic_explanations.symbolicexplanations static method)": [[24, "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations.get_input_layout", false]], "get_input_layout() (deepcave.plugins.plugin static method)": [[15, "deepcave.plugins.Plugin.get_input_layout", false]], "get_input_layout() (deepcave.plugins.summary.configurations.configurations static method)": [[28, "deepcave.plugins.summary.configurations.Configurations.get_input_layout", false]], "get_input_layout() (deepcave.plugins.summary.footprint.footprint static method)": [[29, "deepcave.plugins.summary.footprint.FootPrint.get_input_layout", false]], "get_internal_id() (deepcave.plugins.plugin method)": [[15, "deepcave.plugins.Plugin.get_internal_id", false]], "get_internal_input_id() (deepcave.plugins.plugin method)": [[15, "deepcave.plugins.Plugin.get_internal_input_id", false]], "get_internal_output_id() (deepcave.plugins.plugin method)": [[15, "deepcave.plugins.Plugin.get_internal_output_id", false]], "get_key() (deepcave.runs.trial.trial method)": [[47, "deepcave.runs.trial.Trial.get_key", false]], "get_latest() (deepcave.utils.notification.notification method)": [[62, "deepcave.utils.notification.Notification.get_latest", false]], "get_latest_change() (in module deepcave.utils.util)": [[67, "deepcave.utils.util.get_latest_change", false]], "get_leaf_values() (deepcave.evaluators.epm.random_forest.randomforest method)": [[5, "deepcave.evaluators.epm.random_forest.RandomForest.get_leaf_values", false]], "get_link() (deepcave.plugins.summary.configurations.configurations static method)": [[28, "deepcave.plugins.summary.configurations.Configurations.get_link", false]], "get_logger() (in module deepcave.utils.logs)": [[61, "deepcave.utils.logs.get_logger", false]], "get_meta() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_meta", false]], "get_model() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_model", false]], "get_model() (deepcave.runs.group.group method)": [[41, "deepcave.runs.group.Group.get_model", false]], "get_new_config_id() (deepcave.runs.group.group method)": [[41, "deepcave.runs.group.Group.get_new_config_id", false]], "get_num_configs() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_num_configs", false]], "get_objective() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_objective", false]], "get_objective_id() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_objective_id", false]], "get_objective_ids() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_objective_ids", false]], "get_objective_name() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_objective_name", false]], "get_objective_names() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_objective_names", false]], "get_objectives() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_objectives", false]], "get_origin() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_origin", false]], "get_original_config_id() (deepcave.runs.group.group method)": [[41, "deepcave.runs.group.Group.get_original_config_id", false]], "get_original_run() (deepcave.runs.group.group method)": [[41, "deepcave.runs.group.Group.get_original_run", false]], "get_output_layout() (deepcave.plugins.hyperparameter.ablation_paths.ablationpaths static method)": [[19, "deepcave.plugins.hyperparameter.ablation_paths.AblationPaths.get_output_layout", false]], "get_output_layout() (deepcave.plugins.hyperparameter.configuration_cube.configurationcube static method)": [[20, "deepcave.plugins.hyperparameter.configuration_cube.ConfigurationCube.get_output_layout", false]], "get_output_layout() (deepcave.plugins.hyperparameter.importances.importances static method)": [[21, "deepcave.plugins.hyperparameter.importances.Importances.get_output_layout", false]], "get_output_layout() (deepcave.plugins.hyperparameter.parallel_coordinates.parallelcoordinates static method)": [[22, "deepcave.plugins.hyperparameter.parallel_coordinates.ParallelCoordinates.get_output_layout", false]], "get_output_layout() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[23, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.get_output_layout", false]], "get_output_layout() (deepcave.plugins.hyperparameter.symbolic_explanations.symbolicexplanations static method)": [[24, "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations.get_output_layout", false]], "get_output_layout() (deepcave.plugins.plugin static method)": [[15, "deepcave.plugins.Plugin.get_output_layout", false]], "get_output_layout() (deepcave.plugins.summary.configurations.configurations static method)": [[28, "deepcave.plugins.summary.configurations.Configurations.get_output_layout", false]], "get_output_layout() (deepcave.plugins.summary.footprint.footprint static method)": [[29, "deepcave.plugins.summary.footprint.FootPrint.get_output_layout", false]], "get_output_layout() (deepcave.plugins.summary.overview.overview static method)": [[30, "deepcave.plugins.summary.overview.Overview.get_output_layout", false]], "get_pdp_figure() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[23, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.get_pdp_figure", false]], "get_points() (deepcave.evaluators.footprint.footprint method)": [[9, "deepcave.evaluators.footprint.Footprint.get_points", false]], "get_radio_options() (in module deepcave.utils.layout)": [[60, "deepcave.utils.layout.get_radio_options", false]], "get_random_string() (in module deepcave.utils.util)": [[67, "deepcave.utils.util.get_random_string", false]], "get_run() (deepcave.runs.handler.runhandler method)": [[42, "deepcave.runs.handler.RunHandler.get_run", false]], "get_run_input_layout() (deepcave.plugins.plugin static method)": [[15, "deepcave.plugins.Plugin.get_run_input_layout", false]], "get_run_name() (deepcave.runs.handler.runhandler method)": [[42, "deepcave.runs.handler.RunHandler.get_run_name", false]], "get_runs() (deepcave.runs.group.group method)": [[41, "deepcave.runs.group.Group.get_runs", false]], "get_runs() (deepcave.runs.handler.runhandler method)": [[42, "deepcave.runs.handler.RunHandler.get_runs", false]], "get_seeds() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_seeds", false]], "get_select_options() (in module deepcave.utils.layout)": [[60, "deepcave.utils.layout.get_select_options", false]], "get_selected_groups() (deepcave.runs.handler.runhandler method)": [[42, "deepcave.runs.handler.RunHandler.get_selected_groups", false]], "get_selected_run_names() (deepcave.runs.handler.runhandler method)": [[42, "deepcave.runs.handler.RunHandler.get_selected_run_names", false]], "get_selected_run_paths() (deepcave.runs.handler.runhandler method)": [[42, "deepcave.runs.handler.RunHandler.get_selected_run_paths", false]], "get_selected_runs() (deepcave.plugins.plugin method)": [[15, "deepcave.plugins.Plugin.get_selected_runs", false]], "get_slider_marks() (in module deepcave.utils.layout)": [[60, "deepcave.utils.layout.get_slider_marks", false]], "get_status() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_status", false]], "get_surface() (deepcave.evaluators.footprint.footprint method)": [[9, "deepcave.evaluators.footprint.Footprint.get_surface", false]], "get_trajectory() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_trajectory", false]], "get_trajectory() (deepcave.runs.group.group method)": [[41, "deepcave.runs.group.Group.get_trajectory", false]], "get_trial() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_trial", false]], "get_trial_key() (deepcave.runs.abstractrun static method)": [[31, "deepcave.runs.AbstractRun.get_trial_key", false]], "get_trials() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.get_trials", false]], "get_types() (in module deepcave.evaluators.epm.utils)": [[7, "deepcave.evaluators.epm.utils.get_types", false]], "get_working_directory() (deepcave.runs.handler.runhandler method)": [[42, "deepcave.runs.handler.RunHandler.get_working_directory", false]], "get_worst_value() (deepcave.runs.objective.objective method)": [[43, "deepcave.runs.objective.Objective.get_worst_value", false]], "group (class in deepcave.runs.group)": [[41, "deepcave.runs.group.Group", false]], "groups (deepcave.plugins.plugin property)": [[15, "deepcave.plugins.Plugin.groups", false]], "has() (deepcave.utils.cache.cache method)": [[49, "deepcave.utils.cache.Cache.has", false]], "hash (deepcave.runs.abstractrun property)": [[31, "deepcave.runs.AbstractRun.hash", false]], "hash (deepcave.runs.converters.amltk.amltkrun property)": [[33, "deepcave.runs.converters.amltk.AMLTKRun.hash", false]], "hash (deepcave.runs.converters.bohb.bohbrun property)": [[34, "deepcave.runs.converters.bohb.BOHBRun.hash", false]], "hash (deepcave.runs.converters.dataframe.dataframerun property)": [[35, "deepcave.runs.converters.dataframe.DataFrameRun.hash", false]], "hash (deepcave.runs.converters.deepcave.deepcaverun property)": [[36, "deepcave.runs.converters.deepcave.DeepCAVERun.hash", false]], "hash (deepcave.runs.converters.optuna.optunarun property)": [[37, "deepcave.runs.converters.optuna.OptunaRun.hash", false]], "hash (deepcave.runs.converters.smac3v1.smac3v1run property)": [[38, "deepcave.runs.converters.smac3v1.SMAC3v1Run.hash", false]], "hash (deepcave.runs.converters.smac3v2.smac3v2run property)": [[39, "deepcave.runs.converters.smac3v2.SMAC3v2Run.hash", false]], "hash (deepcave.runs.group.group property)": [[41, "deepcave.runs.group.Group.hash", false]], "headerlayout (class in deepcave.layouts.header)": [[12, "deepcave.layouts.header.HeaderLayout", false]], "help_button() (in module deepcave.utils.layout)": [[60, "deepcave.utils.layout.help_button", false]], "hex_to_rgb() (in module deepcave.utils.styled_plotty)": [[64, "deepcave.utils.styled_plotty.hex_to_rgb", false]], "hyperparameter": [[91, "term-Hyperparameter", true]], "id (deepcave.runs.abstractrun property)": [[31, "deepcave.runs.AbstractRun.id", false]], "id (deepcave.runs.group.group property)": [[41, "deepcave.runs.group.Group.id", false]], "id (deepcave.runs.run.run property)": [[45, "deepcave.runs.run.Run.id", false]], "importances (class in deepcave.plugins.hyperparameter.importances)": [[21, "deepcave.plugins.hyperparameter.importances.Importances", false]], "incumbent": [[91, "term-Incumbent", true]], "latest_change (deepcave.runs.abstractrun property)": [[31, "deepcave.runs.AbstractRun.latest_change", false]], "latest_change (deepcave.runs.converters.amltk.amltkrun property)": [[33, "deepcave.runs.converters.amltk.AMLTKRun.latest_change", false]], "latest_change (deepcave.runs.converters.bohb.bohbrun property)": [[34, "deepcave.runs.converters.bohb.BOHBRun.latest_change", false]], "latest_change (deepcave.runs.converters.dataframe.dataframerun property)": [[35, "deepcave.runs.converters.dataframe.DataFrameRun.latest_change", false]], "latest_change (deepcave.runs.converters.deepcave.deepcaverun property)": [[36, "deepcave.runs.converters.deepcave.DeepCAVERun.latest_change", false]], "latest_change (deepcave.runs.converters.optuna.optunarun property)": [[37, "deepcave.runs.converters.optuna.OptunaRun.latest_change", false]], "latest_change (deepcave.runs.converters.smac3v1.smac3v1run property)": [[38, "deepcave.runs.converters.smac3v1.SMAC3v1Run.latest_change", false]], "latest_change (deepcave.runs.converters.smac3v2.smac3v2run property)": [[39, "deepcave.runs.converters.smac3v2.SMAC3v2Run.latest_change", false]], "latest_change (deepcave.runs.group.group property)": [[41, "deepcave.runs.group.Group.latest_change", false]], "layout (class in deepcave.layouts)": [[11, "deepcave.layouts.Layout", false]], "load() (deepcave.runs.run.run method)": [[45, "deepcave.runs.run.Run.load", false]], "load_configspace() (deepcave.runs.converters.dataframe.dataframerun static method)": [[35, "deepcave.runs.converters.dataframe.DataFrameRun.load_configspace", false]], "load_dependency_inputs() (deepcave.plugins.hyperparameter.ablation_paths.ablationpaths method)": [[19, "deepcave.plugins.hyperparameter.ablation_paths.AblationPaths.load_dependency_inputs", false]], "load_dependency_inputs() (deepcave.plugins.hyperparameter.configuration_cube.configurationcube method)": [[20, "deepcave.plugins.hyperparameter.configuration_cube.ConfigurationCube.load_dependency_inputs", false]], "load_dependency_inputs() (deepcave.plugins.hyperparameter.importances.importances method)": [[21, "deepcave.plugins.hyperparameter.importances.Importances.load_dependency_inputs", false]], "load_dependency_inputs() (deepcave.plugins.hyperparameter.parallel_coordinates.parallelcoordinates method)": [[22, "deepcave.plugins.hyperparameter.parallel_coordinates.ParallelCoordinates.load_dependency_inputs", false]], "load_dependency_inputs() (deepcave.plugins.hyperparameter.pdp.partialdependencies method)": [[23, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.load_dependency_inputs", false]], "load_dependency_inputs() (deepcave.plugins.hyperparameter.symbolic_explanations.symbolicexplanations method)": [[24, "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations.load_dependency_inputs", false]], "load_dependency_inputs() (deepcave.plugins.plugin method)": [[15, "deepcave.plugins.Plugin.load_dependency_inputs", false]], "load_dependency_inputs() (deepcave.plugins.summary.configurations.configurations method)": [[28, "deepcave.plugins.summary.configurations.Configurations.load_dependency_inputs", false]], "load_dependency_inputs() (deepcave.plugins.summary.footprint.footprint method)": [[29, "deepcave.plugins.summary.footprint.FootPrint.load_dependency_inputs", false]], "load_inputs() (deepcave.plugins.hyperparameter.ablation_paths.ablationpaths method)": [[19, "deepcave.plugins.hyperparameter.ablation_paths.AblationPaths.load_inputs", false]], "load_inputs() (deepcave.plugins.hyperparameter.configuration_cube.configurationcube method)": [[20, "deepcave.plugins.hyperparameter.configuration_cube.ConfigurationCube.load_inputs", false]], "load_inputs() (deepcave.plugins.hyperparameter.importances.importances method)": [[21, "deepcave.plugins.hyperparameter.importances.Importances.load_inputs", false]], "load_inputs() (deepcave.plugins.hyperparameter.parallel_coordinates.parallelcoordinates method)": [[22, "deepcave.plugins.hyperparameter.parallel_coordinates.ParallelCoordinates.load_inputs", false]], "load_inputs() (deepcave.plugins.hyperparameter.pdp.partialdependencies method)": [[23, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.load_inputs", false]], "load_inputs() (deepcave.plugins.hyperparameter.symbolic_explanations.symbolicexplanations method)": [[24, "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations.load_inputs", false]], "load_inputs() (deepcave.plugins.plugin method)": [[15, "deepcave.plugins.Plugin.load_inputs", false]], "load_inputs() (deepcave.plugins.summary.configurations.configurations method)": [[28, "deepcave.plugins.summary.configurations.Configurations.load_inputs", false]], "load_inputs() (deepcave.plugins.summary.footprint.footprint method)": [[29, "deepcave.plugins.summary.footprint.FootPrint.load_inputs", false]], "load_objectives() (deepcave.runs.converters.dataframe.dataframerun static method)": [[35, "deepcave.runs.converters.dataframe.DataFrameRun.load_objectives", false]], "load_outputs() (deepcave.plugins.hyperparameter.ablation_paths.ablationpaths static method)": [[19, "deepcave.plugins.hyperparameter.ablation_paths.AblationPaths.load_outputs", false]], "load_outputs() (deepcave.plugins.hyperparameter.configuration_cube.configurationcube static method)": [[20, "deepcave.plugins.hyperparameter.configuration_cube.ConfigurationCube.load_outputs", false]], "load_outputs() (deepcave.plugins.hyperparameter.importances.importances static method)": [[21, "deepcave.plugins.hyperparameter.importances.Importances.load_outputs", false]], "load_outputs() (deepcave.plugins.hyperparameter.parallel_coordinates.parallelcoordinates static method)": [[22, "deepcave.plugins.hyperparameter.parallel_coordinates.ParallelCoordinates.load_outputs", false]], "load_outputs() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[23, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.load_outputs", false]], "load_outputs() (deepcave.plugins.hyperparameter.symbolic_explanations.symbolicexplanations static method)": [[24, "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations.load_outputs", false]], "load_outputs() (deepcave.plugins.plugin static method)": [[15, "deepcave.plugins.Plugin.load_outputs", false]], "load_outputs() (deepcave.plugins.summary.configurations.configurations static method)": [[28, "deepcave.plugins.summary.configurations.Configurations.load_outputs", false]], "load_outputs() (deepcave.plugins.summary.footprint.footprint static method)": [[29, "deepcave.plugins.summary.footprint.FootPrint.load_outputs", false]], "load_outputs() (deepcave.plugins.summary.overview.overview static method)": [[30, "deepcave.plugins.summary.overview.Overview.load_outputs", false]], "load_run_inputs() (deepcave.plugins.plugin static method)": [[15, "deepcave.plugins.Plugin.load_run_inputs", false]], "load_trials() (deepcave.runs.converters.dataframe.dataframerun method)": [[35, "deepcave.runs.converters.dataframe.DataFrameRun.load_trials", false]], "lpi (class in deepcave.evaluators.lpi)": [[10, "deepcave.evaluators.lpi.LPI", false]], "make_dirs() (in module deepcave.utils.files)": [[58, "deepcave.utils.files.make_dirs", false]], "merge() (deepcave.runs.objective.objective method)": [[43, "deepcave.runs.objective.Objective.merge", false]], "merge_costs() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.merge_costs", false]], "module": [[1, "module-deepcave.evaluators", false], [2, "module-deepcave.evaluators.ablation", false], [3, "module-deepcave.evaluators.epm", false], [4, "module-deepcave.evaluators.epm.fanova_forest", false], [5, "module-deepcave.evaluators.epm.random_forest", false], [6, "module-deepcave.evaluators.epm.random_forest_surrogate", false], [7, "module-deepcave.evaluators.epm.utils", false], [8, "module-deepcave.evaluators.fanova", false], [9, "module-deepcave.evaluators.footprint", false], [10, "module-deepcave.evaluators.lpi", false], [11, "module-deepcave.layouts", false], [12, "module-deepcave.layouts.header", false], [13, "module-deepcave.layouts.not_found", false], [14, "module-deepcave.layouts.sidebar", false], [15, "module-deepcave.plugins", false], [16, "module-deepcave.plugins.budget", false], [17, "module-deepcave.plugins.dynamic", false], [18, "module-deepcave.plugins.hyperparameter", false], [19, "module-deepcave.plugins.hyperparameter.ablation_paths", false], [20, "module-deepcave.plugins.hyperparameter.configuration_cube", false], [21, "module-deepcave.plugins.hyperparameter.importances", false], [22, "module-deepcave.plugins.hyperparameter.parallel_coordinates", false], [23, "module-deepcave.plugins.hyperparameter.pdp", false], [24, "module-deepcave.plugins.hyperparameter.symbolic_explanations", false], [25, "module-deepcave.plugins.objective", false], [26, "module-deepcave.plugins.static", false], [27, "module-deepcave.plugins.summary", false], [28, "module-deepcave.plugins.summary.configurations", false], [29, "module-deepcave.plugins.summary.footprint", false], [30, "module-deepcave.plugins.summary.overview", false], [31, "module-deepcave.runs", false], [32, "module-deepcave.runs.converters", false], [33, "module-deepcave.runs.converters.amltk", false], [34, "module-deepcave.runs.converters.bohb", false], [35, "module-deepcave.runs.converters.dataframe", false], [36, "module-deepcave.runs.converters.deepcave", false], [37, "module-deepcave.runs.converters.optuna", false], [38, "module-deepcave.runs.converters.smac3v1", false], [39, "module-deepcave.runs.converters.smac3v2", false], [40, "module-deepcave.runs.exceptions", false], [41, "module-deepcave.runs.group", false], [42, "module-deepcave.runs.handler", false], [43, "module-deepcave.runs.objective", false], [44, "module-deepcave.runs.recorder", false], [45, "module-deepcave.runs.run", false], [46, "module-deepcave.runs.status", false], [47, "module-deepcave.runs.trial", false], [48, "module-deepcave.utils", false], [49, "module-deepcave.utils.cache", false], [50, "module-deepcave.utils.cast", false], [51, "module-deepcave.utils.compression", false], [52, "module-deepcave.utils.configs", false], [53, "module-deepcave.utils.configspace", false], [54, "module-deepcave.utils.converters", false], [55, "module-deepcave.utils.dash", false], [56, "module-deepcave.utils.data_structures", false], [57, "module-deepcave.utils.docs", false], [58, "module-deepcave.utils.files", false], [59, "module-deepcave.utils.hash", false], [60, "module-deepcave.utils.layout", false], [61, "module-deepcave.utils.logs", false], [62, "module-deepcave.utils.notification", false], [63, "module-deepcave.utils.run_caches", false], [64, "module-deepcave.utils.styled_plotty", false], [65, "module-deepcave.utils.symbolic_regression", false], [66, "module-deepcave.utils.url", false], [67, "module-deepcave.utils.util", false]], "notfoundlayout (class in deepcave.layouts.not_found)": [[13, "deepcave.layouts.not_found.NotFoundLayout", false]], "notification (class in deepcave.utils.notification)": [[62, "deepcave.utils.notification.Notification", false]], "notmergeableerror": [[40, "deepcave.runs.exceptions.NotMergeableError", false]], "notvalidrunerror": [[40, "deepcave.runs.exceptions.NotValidRunError", false]], "objective": [[91, "term-Objective", true]], "objective (class in deepcave.runs.objective)": [[43, "deepcave.runs.objective.Objective", false]], "optional_int() (in module deepcave.utils.cast)": [[50, "deepcave.utils.cast.optional_int", false]], "optunarun (class in deepcave.runs.converters.optuna)": [[37, "deepcave.runs.converters.optuna.OptunaRun", false]], "overview (class in deepcave.plugins.summary.overview)": [[30, "deepcave.plugins.summary.overview.Overview", false]], "parallelcoordinates (class in deepcave.plugins.hyperparameter.parallel_coordinates)": [[22, "deepcave.plugins.hyperparameter.parallel_coordinates.ParallelCoordinates", false]], "parse_config() (in module deepcave.utils.configs)": [[52, "deepcave.utils.configs.parse_config", false]], "parse_url() (in module deepcave.utils.url)": [[66, "deepcave.utils.url.parse_url", false]], "partialdependencies (class in deepcave.plugins.hyperparameter.pdp)": [[23, "deepcave.plugins.hyperparameter.pdp.PartialDependencies", false]], "path (deepcave.runs.run.run property)": [[45, "deepcave.runs.run.Run.path", false]], "plugin (class in deepcave.plugins)": [[15, "deepcave.plugins.Plugin", false]], "pluginstate (class in deepcave.plugins.static)": [[26, "deepcave.plugins.static.PluginState", false]], "predict() (deepcave.evaluators.epm.random_forest.randomforest method)": [[5, "deepcave.evaluators.epm.random_forest.RandomForest.predict", false]], "predict() (deepcave.evaluators.epm.random_forest_surrogate.randomforestsurrogate method)": [[6, "deepcave.evaluators.epm.random_forest_surrogate.RandomForestSurrogate.predict", false]], "predict_marginalized() (deepcave.evaluators.epm.random_forest.randomforest method)": [[5, "deepcave.evaluators.epm.random_forest.RandomForest.predict_marginalized", false]], "prettify_label() (in module deepcave.utils.styled_plotty)": [[64, "deepcave.utils.styled_plotty.prettify_label", false]], "print_progress_bar() (in module deepcave.utils.util)": [[67, "deepcave.utils.util.print_progress_bar", false]], "process() (deepcave.plugins.hyperparameter.ablation_paths.ablationpaths static method)": [[19, "deepcave.plugins.hyperparameter.ablation_paths.AblationPaths.process", false]], "process() (deepcave.plugins.hyperparameter.configuration_cube.configurationcube static method)": [[20, "deepcave.plugins.hyperparameter.configuration_cube.ConfigurationCube.process", false]], "process() (deepcave.plugins.hyperparameter.importances.importances static method)": [[21, "deepcave.plugins.hyperparameter.importances.Importances.process", false]], "process() (deepcave.plugins.hyperparameter.parallel_coordinates.parallelcoordinates static method)": [[22, "deepcave.plugins.hyperparameter.parallel_coordinates.ParallelCoordinates.process", false]], "process() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[23, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.process", false]], "process() (deepcave.plugins.hyperparameter.symbolic_explanations.symbolicexplanations static method)": [[24, "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations.process", false]], "process() (deepcave.plugins.plugin static method)": [[15, "deepcave.plugins.Plugin.process", false]], "process() (deepcave.plugins.summary.configurations.configurations static method)": [[28, "deepcave.plugins.summary.configurations.Configurations.process", false]], "process() (deepcave.plugins.summary.footprint.footprint static method)": [[29, "deepcave.plugins.summary.footprint.FootPrint.process", false]], "randomforest (class in deepcave.evaluators.epm.random_forest)": [[5, "deepcave.evaluators.epm.random_forest.RandomForest", false]], "randomforestsurrogate (class in deepcave.evaluators.epm.random_forest_surrogate)": [[6, "deepcave.evaluators.epm.random_forest_surrogate.RandomForestSurrogate", false]], "read() (deepcave.utils.cache.cache method)": [[49, "deepcave.utils.cache.Cache.read", false]], "recorder (class in deepcave.runs.recorder)": [[44, "deepcave.runs.recorder.Recorder", false]], "register_callbacks() (deepcave.layouts.header.headerlayout method)": [[12, "deepcave.layouts.header.HeaderLayout.register_callbacks", false]], "register_callbacks() (deepcave.layouts.sidebar.sidebarlayout method)": [[14, "deepcave.layouts.sidebar.SidebarLayout.register_callbacks", false]], "register_callbacks() (deepcave.plugins.dynamic.dynamicplugin method)": [[17, "deepcave.plugins.dynamic.DynamicPlugin.register_callbacks", false]], "register_callbacks() (deepcave.plugins.plugin method)": [[15, "deepcave.plugins.Plugin.register_callbacks", false]], "register_callbacks() (deepcave.plugins.static.staticplugin method)": [[26, "deepcave.plugins.static.StaticPlugin.register_callbacks", false]], "register_input() (deepcave.plugins.plugin method)": [[15, "deepcave.plugins.Plugin.register_input", false]], "register_output() (deepcave.plugins.plugin method)": [[15, "deepcave.plugins.Plugin.register_output", false]], "remove_run() (deepcave.runs.handler.runhandler method)": [[42, "deepcave.runs.handler.RunHandler.remove_run", false]], "reset() (deepcave.runs.abstractrun method)": [[31, "deepcave.runs.AbstractRun.reset", false]], "reset() (deepcave.utils.notification.notification method)": [[62, "deepcave.utils.notification.Notification.reset", false]], "rst_to_md() (in module deepcave.utils.docs)": [[57, "deepcave.utils.docs.rst_to_md", false]], "run (class in deepcave.runs.run)": [[45, "deepcave.runs.run.Run", false]], "run_names (deepcave.runs.group.group property)": [[41, "deepcave.runs.group.Group.run_names", false]], "run_paths (deepcave.runs.group.group property)": [[41, "deepcave.runs.group.Group.run_paths", false]], "runcaches (class in deepcave.utils.run_caches)": [[63, "deepcave.utils.run_caches.RunCaches", false]], "runhandler (class in deepcave.runs.handler)": [[42, "deepcave.runs.handler.RunHandler", false]], "runinequality (class in deepcave.runs.exceptions)": [[40, "deepcave.runs.exceptions.RunInequality", false]], "runs (deepcave.plugins.plugin property)": [[15, "deepcave.plugins.Plugin.runs", false]], "sample_border_config() (in module deepcave.utils.configspace)": [[53, "deepcave.utils.configspace.sample_border_config", false]], "sample_random_config() (in module deepcave.utils.configspace)": [[53, "deepcave.utils.configspace.sample_random_config", false]], "save() (deepcave.runs.run.run method)": [[45, "deepcave.runs.run.Run.save", false]], "save_image() (in module deepcave.utils.styled_plotty)": [[64, "deepcave.utils.styled_plotty.save_image", false]], "serialize() (in module deepcave.utils.compression)": [[51, "deepcave.utils.compression.serialize", false]], "set() (deepcave.utils.cache.cache method)": [[49, "deepcave.utils.cache.Cache.set", false]], "set() (deepcave.utils.run_caches.runcaches method)": [[63, "deepcave.utils.run_caches.RunCaches.set", false]], "set_dict() (deepcave.utils.cache.cache method)": [[49, "deepcave.utils.cache.Cache.set_dict", false]], "set_working_directory() (deepcave.runs.handler.runhandler method)": [[42, "deepcave.runs.handler.RunHandler.set_working_directory", false]], "short_string() (in module deepcave.utils.util)": [[67, "deepcave.utils.util.short_string", false]], "sidebarlayout (class in deepcave.layouts.sidebar)": [[14, "deepcave.layouts.sidebar.SidebarLayout", false]], "smac3v1run (class in deepcave.runs.converters.smac3v1)": [[38, "deepcave.runs.converters.smac3v1.SMAC3v1Run", false]], "smac3v2run (class in deepcave.runs.converters.smac3v2)": [[39, "deepcave.runs.converters.smac3v2.SMAC3v2Run", false]], "start() (deepcave.runs.recorder.recorder method)": [[44, "deepcave.runs.recorder.Recorder.start", false]], "staticplugin (class in deepcave.plugins.static)": [[26, "deepcave.plugins.static.StaticPlugin", false]], "status (class in deepcave.runs.status)": [[46, "deepcave.runs.status.Status", false]], "string_to_hash() (in module deepcave.utils.hash)": [[59, "deepcave.utils.hash.string_to_hash", false]], "symbolicexplanations (class in deepcave.plugins.hyperparameter.symbolic_explanations)": [[24, "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations", false]], "to_json() (deepcave.runs.objective.objective method)": [[43, "deepcave.runs.objective.Objective.to_json", false]], "to_json() (deepcave.runs.trial.trial method)": [[47, "deepcave.runs.trial.Trial.to_json", false]], "to_text() (deepcave.runs.status.status method)": [[46, "deepcave.runs.status.Status.to_text", false]], "train() (deepcave.evaluators.epm.random_forest.randomforest method)": [[5, "deepcave.evaluators.epm.random_forest.RandomForest.train", false]], "trial (class in deepcave.runs.trial)": [[47, "deepcave.runs.trial.Trial", false]], "update() (deepcave.runs.handler.runhandler method)": [[42, "deepcave.runs.handler.RunHandler.update", false]], "update() (deepcave.utils.notification.notification method)": [[62, "deepcave.utils.notification.Notification.update", false]], "update() (deepcave.utils.run_caches.runcaches method)": [[63, "deepcave.utils.run_caches.RunCaches.update", false]], "update_dict() (in module deepcave.utils.data_structures)": [[56, "deepcave.utils.data_structures.update_dict", false]], "update_groups() (deepcave.runs.handler.runhandler method)": [[42, "deepcave.runs.handler.RunHandler.update_groups", false]], "update_run() (deepcave.runs.handler.runhandler method)": [[42, "deepcave.runs.handler.RunHandler.update_run", false]], "update_runs() (deepcave.runs.handler.runhandler method)": [[42, "deepcave.runs.handler.RunHandler.update_runs", false]], "write() (deepcave.utils.cache.cache method)": [[49, "deepcave.utils.cache.Cache.write", false]]}, "objects": {"deepcave": [[1, 0, 0, "-", "evaluators"], [11, 0, 0, "-", "layouts"], [15, 0, 0, "-", "plugins"], [31, 0, 0, "-", "runs"], [48, 0, 0, "-", "utils"]], "deepcave.evaluators": [[2, 0, 0, "-", "ablation"], [3, 0, 0, "-", "epm"], [8, 0, 0, "-", "fanova"], [9, 0, 0, "-", "footprint"], [10, 0, 0, "-", "lpi"]], "deepcave.evaluators.ablation": [[2, 1, 1, "", "Ablation"]], "deepcave.evaluators.ablation.Ablation": [[2, 2, 1, "", "calculate"], [2, 2, 1, "", "get_ablation_improvements"], [2, 2, 1, "", "get_ablation_performances"]], "deepcave.evaluators.epm": [[4, 0, 0, "-", "fanova_forest"], [5, 0, 0, "-", "random_forest"], [6, 0, 0, "-", "random_forest_surrogate"], [7, 0, 0, "-", "utils"]], "deepcave.evaluators.epm.fanova_forest": [[4, 1, 1, "", "FanovaForest"]], "deepcave.evaluators.epm.fanova_forest.FanovaForest": [[4, 2, 1, "", "compute_marginals"]], "deepcave.evaluators.epm.random_forest": [[5, 1, 1, "", "RandomForest"]], "deepcave.evaluators.epm.random_forest.RandomForest": [[5, 2, 1, "", "get_leaf_values"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "predict_marginalized"], [5, 2, 1, "", "train"]], "deepcave.evaluators.epm.random_forest_surrogate": [[6, 1, 1, "", "RandomForestSurrogate"]], "deepcave.evaluators.epm.random_forest_surrogate.RandomForestSurrogate": [[6, 2, 1, "", "predict"]], "deepcave.evaluators.epm.utils": [[7, 3, 1, "", "get_types"]], "deepcave.evaluators.fanova": [[8, 1, 1, "", "fANOVA"]], "deepcave.evaluators.fanova.fANOVA": [[8, 2, 1, "", "calculate"], [8, 2, 1, "", "get_importances"]], "deepcave.evaluators.footprint": [[9, 1, 1, "", "Footprint"]], "deepcave.evaluators.footprint.Footprint": [[9, 2, 1, "", "calculate"], [9, 2, 1, "", "get_points"], [9, 2, 1, "", "get_surface"]], "deepcave.evaluators.lpi": [[10, 1, 1, "", "LPI"]], "deepcave.evaluators.lpi.LPI": [[10, 2, 1, "", "calculate"], [10, 2, 1, "", "get_importances"]], "deepcave.layouts": [[11, 1, 1, "", "Layout"], [12, 0, 0, "-", "header"], [13, 0, 0, "-", "not_found"], [14, 0, 0, "-", "sidebar"]], "deepcave.layouts.Layout": [[11, 2, 1, "", "__call__"]], "deepcave.layouts.header": [[12, 1, 1, "", "HeaderLayout"]], "deepcave.layouts.header.HeaderLayout": [[12, 2, 1, "", "__call__"], [12, 2, 1, "", "register_callbacks"]], "deepcave.layouts.not_found": [[13, 1, 1, "", "NotFoundLayout"]], "deepcave.layouts.not_found.NotFoundLayout": [[13, 2, 1, "", "__call__"]], "deepcave.layouts.sidebar": [[14, 1, 1, "", "SidebarLayout"]], "deepcave.layouts.sidebar.SidebarLayout": [[14, 2, 1, "", "__call__"], [14, 2, 1, "", "register_callbacks"]], "deepcave.plugins": [[15, 1, 1, "", "Plugin"], [16, 0, 0, "-", "budget"], [17, 0, 0, "-", "dynamic"], [18, 0, 0, "-", "hyperparameter"], [25, 0, 0, "-", "objective"], [26, 0, 0, "-", "static"], [27, 0, 0, "-", "summary"]], "deepcave.plugins.Plugin": [[15, 2, 1, "", "__call__"], [15, 4, 1, "", "all_runs"], [15, 2, 1, "", "check_run_compatibility"], [15, 2, 1, "", "check_runs_compatibility"], [15, 2, 1, "", "generate_inputs"], [15, 2, 1, "", "generate_outputs"], [15, 2, 1, "", "get_base_url"], [15, 2, 1, "", "get_filter_layout"], [15, 2, 1, "", "get_input_layout"], [15, 2, 1, "", "get_internal_id"], [15, 2, 1, "", "get_internal_input_id"], [15, 2, 1, "", "get_internal_output_id"], [15, 2, 1, "", "get_output_layout"], [15, 2, 1, "", "get_run_input_layout"], [15, 2, 1, "", "get_selected_runs"], [15, 4, 1, "", "groups"], [15, 2, 1, "", "load_dependency_inputs"], [15, 2, 1, "", "load_inputs"], [15, 2, 1, "", "load_outputs"], [15, 2, 1, "", "load_run_inputs"], [15, 2, 1, "", "process"], [15, 2, 1, "", "register_callbacks"], [15, 2, 1, "", "register_input"], [15, 2, 1, "", "register_output"], [15, 4, 1, "", "runs"]], "deepcave.plugins.dynamic": [[17, 1, 1, "", "DynamicPlugin"]], "deepcave.plugins.dynamic.DynamicPlugin": [[17, 2, 1, "", "__call__"], [17, 2, 1, "", "register_callbacks"]], "deepcave.plugins.hyperparameter": [[19, 0, 0, "-", "ablation_paths"], [20, 0, 0, "-", "configuration_cube"], [21, 0, 0, "-", "importances"], [22, 0, 0, "-", "parallel_coordinates"], [23, 0, 0, "-", "pdp"], [24, 0, 0, "-", "symbolic_explanations"]], "deepcave.plugins.hyperparameter.ablation_paths": [[19, 1, 1, "", "AblationPaths"]], "deepcave.plugins.hyperparameter.ablation_paths.AblationPaths": [[19, 2, 1, "", "get_filter_layout"], [19, 2, 1, "", "get_input_layout"], [19, 2, 1, "", "get_output_layout"], [19, 2, 1, "", "load_dependency_inputs"], [19, 2, 1, "", "load_inputs"], [19, 2, 1, "", "load_outputs"], [19, 2, 1, "", "process"]], "deepcave.plugins.hyperparameter.configuration_cube": [[20, 1, 1, "", "ConfigurationCube"]], "deepcave.plugins.hyperparameter.configuration_cube.ConfigurationCube": [[20, 2, 1, "", "get_filter_layout"], [20, 2, 1, "", "get_input_layout"], [20, 2, 1, "", "get_output_layout"], [20, 2, 1, "", "load_dependency_inputs"], [20, 2, 1, "", "load_inputs"], [20, 2, 1, "", "load_outputs"], [20, 2, 1, "", "process"]], "deepcave.plugins.hyperparameter.importances": [[21, 1, 1, "", "Importances"]], "deepcave.plugins.hyperparameter.importances.Importances": [[21, 2, 1, "", "get_filter_layout"], [21, 2, 1, "", "get_input_layout"], [21, 2, 1, "", "get_output_layout"], [21, 2, 1, "", "load_dependency_inputs"], [21, 2, 1, "", "load_inputs"], [21, 2, 1, "", "load_outputs"], [21, 2, 1, "", "process"]], "deepcave.plugins.hyperparameter.parallel_coordinates": [[22, 1, 1, "", "ParallelCoordinates"]], "deepcave.plugins.hyperparameter.parallel_coordinates.ParallelCoordinates": [[22, 2, 1, "", "get_filter_layout"], [22, 2, 1, "", "get_input_layout"], [22, 2, 1, "", "get_output_layout"], [22, 2, 1, "", "load_dependency_inputs"], [22, 2, 1, "", "load_inputs"], [22, 2, 1, "", "load_outputs"], [22, 2, 1, "", "process"]], "deepcave.plugins.hyperparameter.pdp": [[23, 1, 1, "", "PartialDependencies"]], "deepcave.plugins.hyperparameter.pdp.PartialDependencies": [[23, 2, 1, "", "get_filter_layout"], [23, 2, 1, "", "get_input_layout"], [23, 2, 1, "", "get_output_layout"], [23, 2, 1, "", "get_pdp_figure"], [23, 2, 1, "", "load_dependency_inputs"], [23, 2, 1, "", "load_inputs"], [23, 2, 1, "", "load_outputs"], [23, 2, 1, "", "process"]], "deepcave.plugins.hyperparameter.symbolic_explanations": [[24, 1, 1, "", "SymbolicExplanations"]], "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations": [[24, 2, 1, "", "get_input_layout"], [24, 2, 1, "", "get_output_layout"], [24, 2, 1, "", "load_dependency_inputs"], [24, 2, 1, "", "load_inputs"], [24, 2, 1, "", "load_outputs"], [24, 2, 1, "", "process"]], "deepcave.plugins.static": [[26, 1, 1, "", "PluginState"], [26, 1, 1, "", "StaticPlugin"]], "deepcave.plugins.static.StaticPlugin": [[26, 2, 1, "", "__call__"], [26, 2, 1, "", "register_callbacks"]], "deepcave.plugins.summary": [[28, 0, 0, "-", "configurations"], [29, 0, 0, "-", "footprint"], [30, 0, 0, "-", "overview"]], "deepcave.plugins.summary.configurations": [[28, 1, 1, "", "Configurations"]], "deepcave.plugins.summary.configurations.Configurations": [[28, 2, 1, "", "get_input_layout"], [28, 2, 1, "", "get_link"], [28, 2, 1, "", "get_output_layout"], [28, 2, 1, "", "load_dependency_inputs"], [28, 2, 1, "", "load_inputs"], [28, 2, 1, "", "load_outputs"], [28, 2, 1, "", "process"]], "deepcave.plugins.summary.footprint": [[29, 1, 1, "", "FootPrint"]], "deepcave.plugins.summary.footprint.FootPrint": [[29, 2, 1, "", "get_filter_layout"], [29, 2, 1, "", "get_input_layout"], [29, 2, 1, "", "get_output_layout"], [29, 2, 1, "", "load_dependency_inputs"], [29, 2, 1, "", "load_inputs"], [29, 2, 1, "", "load_outputs"], [29, 2, 1, "", "process"]], "deepcave.plugins.summary.overview": [[30, 1, 1, "", "Overview"]], "deepcave.plugins.summary.overview.Overview": [[30, 2, 1, "", "get_output_layout"], [30, 2, 1, "", "load_outputs"]], "deepcave.runs": [[31, 1, 1, "", "AbstractRun"], [31, 3, 1, "", "check_equality"], [32, 0, 0, "-", "converters"], [40, 0, 0, "-", "exceptions"], [41, 0, 0, "-", "group"], [42, 0, 0, "-", "handler"], [43, 0, 0, "-", "objective"], [44, 0, 0, "-", "recorder"], [45, 0, 0, "-", "run"], [46, 0, 0, "-", "status"], [47, 0, 0, "-", "trial"]], "deepcave.runs.AbstractRun": [[31, 2, 1, "", "empty"], [31, 2, 1, "", "encode_config"], [31, 2, 1, "", "encode_configs"], [31, 2, 1, "", "get_all_costs"], [31, 2, 1, "", "get_avg_costs"], [31, 2, 1, "", "get_budget"], [31, 2, 1, "", "get_budget_ids"], [31, 2, 1, "", "get_budgets"], [31, 2, 1, "", "get_config"], [31, 2, 1, "", "get_config_id"], [31, 2, 1, "", "get_configs"], [31, 2, 1, "", "get_encoded_data"], [31, 2, 1, "", "get_highest_budget"], [31, 2, 1, "", "get_incumbent"], [31, 2, 1, "", "get_meta"], [31, 2, 1, "", "get_model"], [31, 2, 1, "", "get_num_configs"], [31, 2, 1, "", "get_objective"], [31, 2, 1, "", "get_objective_id"], [31, 2, 1, "", "get_objective_ids"], [31, 2, 1, "", "get_objective_name"], [31, 2, 1, "", "get_objective_names"], [31, 2, 1, "", "get_objectives"], [31, 2, 1, "", "get_origin"], [31, 2, 1, "", "get_seeds"], [31, 2, 1, "", "get_status"], [31, 2, 1, "", "get_trajectory"], [31, 2, 1, "", "get_trial"], [31, 2, 1, "", "get_trial_key"], [31, 2, 1, "", "get_trials"], [31, 4, 1, "", "hash"], [31, 4, 1, "", "id"], [31, 4, 1, "", "latest_change"], [31, 2, 1, "", "merge_costs"], [31, 2, 1, "", "reset"]], "deepcave.runs.converters": [[33, 0, 0, "-", "amltk"], [34, 0, 0, "-", "bohb"], [35, 0, 0, "-", "dataframe"], [36, 0, 0, "-", "deepcave"], [37, 0, 0, "-", "optuna"], [38, 0, 0, "-", "smac3v1"], [39, 0, 0, "-", "smac3v2"]], "deepcave.runs.converters.amltk": [[33, 1, 1, "", "AMLTKRun"]], "deepcave.runs.converters.amltk.AMLTKRun": [[33, 2, 1, "", "from_path"], [33, 4, 1, "", "hash"], [33, 4, 1, "", "latest_change"]], "deepcave.runs.converters.bohb": [[34, 1, 1, "", "BOHBRun"]], "deepcave.runs.converters.bohb.BOHBRun": [[34, 2, 1, "", "from_path"], [34, 4, 1, "", "hash"], [34, 4, 1, "", "latest_change"]], "deepcave.runs.converters.dataframe": [[35, 1, 1, "", "DataFrameRun"]], "deepcave.runs.converters.dataframe.DataFrameRun": [[35, 2, 1, "", "from_path"], [35, 4, 1, "", "hash"], [35, 4, 1, "", "latest_change"], [35, 2, 1, "", "load_configspace"], [35, 2, 1, "", "load_objectives"], [35, 2, 1, "", "load_trials"]], "deepcave.runs.converters.deepcave": [[36, 1, 1, "", "DeepCAVERun"]], "deepcave.runs.converters.deepcave.DeepCAVERun": [[36, 2, 1, "", "from_path"], [36, 4, 1, "", "hash"], [36, 4, 1, "", "latest_change"]], "deepcave.runs.converters.optuna": [[37, 1, 1, "", "OptunaRun"]], "deepcave.runs.converters.optuna.OptunaRun": [[37, 2, 1, "", "from_path"], [37, 4, 1, "", "hash"], [37, 4, 1, "", "latest_change"]], "deepcave.runs.converters.smac3v1": [[38, 1, 1, "", "SMAC3v1Run"]], "deepcave.runs.converters.smac3v1.SMAC3v1Run": [[38, 2, 1, "", "from_path"], [38, 4, 1, "", "hash"], [38, 4, 1, "", "latest_change"]], "deepcave.runs.converters.smac3v2": [[39, 1, 1, "", "SMAC3v2Run"]], "deepcave.runs.converters.smac3v2.SMAC3v2Run": [[39, 2, 1, "", "from_path"], [39, 4, 1, "", "hash"], [39, 4, 1, "", "latest_change"]], "deepcave.runs.exceptions": [[40, 5, 1, "", "NotMergeableError"], [40, 5, 1, "", "NotValidRunError"], [40, 1, 1, "", "RunInequality"]], "deepcave.runs.group": [[41, 1, 1, "", "Group"]], "deepcave.runs.group.Group": [[41, 2, 1, "", "__iter__"], [41, 2, 1, "", "get_model"], [41, 2, 1, "", "get_new_config_id"], [41, 2, 1, "", "get_original_config_id"], [41, 2, 1, "", "get_original_run"], [41, 2, 1, "", "get_runs"], [41, 2, 1, "", "get_trajectory"], [41, 4, 1, "", "hash"], [41, 4, 1, "", "id"], [41, 4, 1, "", "latest_change"], [41, 4, 1, "", "run_names"], [41, 4, 1, "", "run_paths"]], "deepcave.runs.handler": [[42, 1, 1, "", "RunHandler"]], "deepcave.runs.handler.RunHandler": [[42, 2, 1, "", "add_run"], [42, 2, 1, "", "get_available_run_paths"], [42, 2, 1, "", "get_groups"], [42, 2, 1, "", "get_run"], [42, 2, 1, "", "get_run_name"], [42, 2, 1, "", "get_runs"], [42, 2, 1, "", "get_selected_groups"], [42, 2, 1, "", "get_selected_run_names"], [42, 2, 1, "", "get_selected_run_paths"], [42, 2, 1, "", "get_working_directory"], [42, 2, 1, "", "remove_run"], [42, 2, 1, "", "set_working_directory"], [42, 2, 1, "", "update"], [42, 2, 1, "", "update_groups"], [42, 2, 1, "", "update_run"], [42, 2, 1, "", "update_runs"]], "deepcave.runs.objective": [[43, 1, 1, "", "Objective"]], "deepcave.runs.objective.Objective": [[43, 2, 1, "", "__eq__"], [43, 2, 1, "", "__post_init__"], [43, 2, 1, "", "from_json"], [43, 2, 1, "", "get_worst_value"], [43, 2, 1, "", "merge"], [43, 2, 1, "", "to_json"]], "deepcave.runs.recorder": [[44, 1, 1, "", "Recorder"]], "deepcave.runs.recorder.Recorder": [[44, 2, 1, "", "end"], [44, 2, 1, "", "start"]], "deepcave.runs.run": [[45, 1, 1, "", "Run"]], "deepcave.runs.run.Run": [[45, 2, 1, "", "add"], [45, 2, 1, "", "exists"], [45, 2, 1, "", "from_path"], [45, 4, 1, "", "id"], [45, 2, 1, "", "load"], [45, 4, 1, "", "path"], [45, 2, 1, "", "save"]], "deepcave.runs.status": [[46, 1, 1, "", "Status"]], "deepcave.runs.status.Status": [[46, 2, 1, "", "to_text"]], "deepcave.runs.trial": [[47, 1, 1, "", "Trial"]], "deepcave.runs.trial.Trial": [[47, 2, 1, "", "__post_init__"], [47, 2, 1, "", "get_key"], [47, 2, 1, "", "to_json"]], "deepcave.utils": [[49, 0, 0, "-", "cache"], [50, 0, 0, "-", "cast"], [51, 0, 0, "-", "compression"], [52, 0, 0, "-", "configs"], [53, 0, 0, "-", "configspace"], [54, 0, 0, "-", "converters"], [55, 0, 0, "-", "dash"], [56, 0, 0, "-", "data_structures"], [57, 0, 0, "-", "docs"], [58, 0, 0, "-", "files"], [59, 0, 0, "-", "hash"], [60, 0, 0, "-", "layout"], [61, 0, 0, "-", "logs"], [62, 0, 0, "-", "notification"], [63, 0, 0, "-", "run_caches"], [64, 0, 0, "-", "styled_plotty"], [65, 0, 0, "-", "symbolic_regression"], [66, 0, 0, "-", "url"], [67, 0, 0, "-", "util"]], "deepcave.utils.cache": [[49, 1, 1, "", "Cache"]], "deepcave.utils.cache.Cache": [[49, 2, 1, "", "clear"], [49, 2, 1, "", "get"], [49, 2, 1, "", "has"], [49, 2, 1, "", "read"], [49, 2, 1, "", "set"], [49, 2, 1, "", "set_dict"], [49, 2, 1, "", "write"]], "deepcave.utils.cast": [[50, 3, 1, "", "optional_int"]], "deepcave.utils.compression": [[51, 1, 1, "", "Encoder"], [51, 3, 1, "", "deserialize"], [51, 3, 1, "", "serialize"]], "deepcave.utils.compression.Encoder": [[51, 2, 1, "", "default"]], "deepcave.utils.configs": [[52, 3, 1, "", "parse_config"]], "deepcave.utils.configspace": [[53, 3, 1, "", "sample_border_config"], [53, 3, 1, "", "sample_random_config"]], "deepcave.utils.converters": [[54, 3, 1, "", "extract_config"], [54, 3, 1, "", "extract_costs"], [54, 3, 1, "", "extract_value"]], "deepcave.utils.dash": [[55, 3, 1, "", "alert"], [55, 3, 1, "", "flash"]], "deepcave.utils.data_structures": [[56, 3, 1, "", "update_dict"]], "deepcave.utils.docs": [[57, 3, 1, "", "rst_to_md"]], "deepcave.utils.files": [[58, 3, 1, "", "make_dirs"]], "deepcave.utils.hash": [[59, 3, 1, "", "file_to_hash"], [59, 3, 1, "", "string_to_hash"]], "deepcave.utils.layout": [[60, 3, 1, "", "create_table"], [60, 3, 1, "", "get_checklist_options"], [60, 3, 1, "", "get_radio_options"], [60, 3, 1, "", "get_select_options"], [60, 3, 1, "", "get_slider_marks"], [60, 3, 1, "", "help_button"]], "deepcave.utils.logs": [[61, 3, 1, "", "get_logger"]], "deepcave.utils.notification": [[62, 1, 1, "", "Notification"]], "deepcave.utils.notification.Notification": [[62, 2, 1, "", "get_latest"], [62, 2, 1, "", "reset"], [62, 2, 1, "", "update"]], "deepcave.utils.run_caches": [[63, 1, 1, "", "RunCaches"]], "deepcave.utils.run_caches.RunCaches": [[63, 2, 1, "", "clear"], [63, 2, 1, "", "clear_run"], [63, 2, 1, "", "get"], [63, 2, 1, "", "set"], [63, 2, 1, "", "update"]], "deepcave.utils.styled_plotty": [[64, 3, 1, "", "generate_config_code"], [64, 3, 1, "", "get_color"], [64, 3, 1, "", "get_discrete_heatmap"], [64, 3, 1, "", "get_hovertext_from_config"], [64, 3, 1, "", "get_hyperparameter_ticks"], [64, 3, 1, "", "get_hyperparameter_ticks_from_values"], [64, 3, 1, "", "hex_to_rgb"], [64, 3, 1, "", "prettify_label"], [64, 3, 1, "", "save_image"]], "deepcave.utils.symbolic_regression": [[65, 3, 1, "", "convert_symb"], [65, 3, 1, "", "exp"], [65, 3, 1, "", "get_function_set"]], "deepcave.utils.url": [[66, 3, 1, "", "create_url"], [66, 3, 1, "", "parse_url"]], "deepcave.utils.util": [[67, 3, 1, "", "config_to_tuple"], [67, 3, 1, "", "custom_round"], [67, 3, 1, "", "get_latest_change"], [67, 3, 1, "", "get_random_string"], [67, 3, 1, "", "print_progress_bar"], [67, 3, 1, "", "short_string"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:exception"}, "terms": {"": [2, 8, 15, 31, 42, 63, 74, 86, 89, 92, 93, 95, 96, 97, 98, 101, 104, 107, 108], "0": [2, 4, 5, 8, 9, 10, 39, 45, 67, 71, 73, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 88, 96, 110], "00": [81, 87, 88, 110], "000": [81, 87, 88, 110], "000000": 64, "0001": [83, 86], "0001145199593038774": 71, "0005027533412617669": 71, "00295471450409257": 71, "006273080002552674": 71, "01": [9, 71, 96], "03493": 93, "05": [71, 86], "06": 71, "07654259389007832": 71, "08": [4, 5, 71], "1": [4, 5, 8, 38, 44, 64, 67, 68, 71, 75, 79, 80, 83, 85, 86, 90, 96, 106, 107, 108], "10": [4, 9, 10, 60, 64, 67, 71, 77, 83, 86, 93], "100": [67, 76, 83, 85, 86], "1000": 86, "100000": 65, "1048576": [4, 5], "115": 71, "1307": 86, "16": [5, 6, 8, 86], "19": 96, "1d": [9, 97], "1e": [4, 5, 71, 86], "2": [4, 5, 39, 67, 71, 75, 76, 77, 79, 86, 94, 96, 106, 107, 108, 109], "20": [83, 85, 96], "20000": 86, "2017937219730942": 71, "2022": 93, "2152466367713004": 71, "21973094170403584": 71, "22": 93, "2206": 93, "256": [71, 86], "28": 86, "29": 96, "2d": [9, 97, 98], "3": [5, 9, 64, 67, 71, 77, 79, 86, 87, 94], "30": [67, 83, 96], "3081": 86, "32": [71, 86], "3646716470095907e": 71, "39": 96, "3d": 97, "4": [38, 49, 53, 64, 71, 73, 75, 81, 86, 109], "40": [85, 96], "40000": 86, "42": 83, "48550": 93, "5": [9, 64, 71, 83, 86, 104], "50": [2, 71], "500": 10, "6": [64, 94, 109], "60": 85, "64": [4, 86], "69": 96, "7": [64, 86, 96, 110], "70": 96, "8": 86, "8333333333333334": 5, "9": [86, 94], "90": 83, "A": [2, 4, 5, 10, 11, 14, 15, 17, 19, 20, 21, 23, 24, 28, 29, 30, 31, 38, 41, 42, 43, 44, 46, 47, 60, 64, 66, 67, 73, 88, 91, 92, 100, 106], "As": [75, 100, 102], "By": [8, 9, 10, 15, 31, 45, 52, 53, 64, 70, 98, 100, 101, 105], "For": [15, 53, 64, 68, 70, 71, 75, 90, 91, 96, 98, 100, 101, 102, 103, 105, 106, 107, 108], "If": [2, 5, 7, 8, 9, 10, 15, 17, 19, 21, 23, 24, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 49, 50, 52, 60, 63, 64, 65, 67, 70, 73, 74, 78, 82, 90, 92, 93, 94, 95, 96, 100, 101, 103, 104, 109], "In": [15, 31, 41, 44, 45, 70, 73, 82, 84, 90, 91, 97, 99, 100, 101, 103, 104, 107, 108], "It": [4, 8, 9, 12, 15, 20, 26, 30, 31, 42, 43, 67, 89, 91, 98, 102, 103, 104, 107, 108], "No": [86, 96], "Not": [23, 24, 28, 29, 45], "On": [90, 104], "One": [15, 96, 97, 100], "The": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], "Then": [71, 96], "There": [96, 98, 103], "These": 104, "To": [60, 68, 69, 70, 71, 74, 82, 84, 89, 92, 94, 95, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108], "Will": 64, "With": [64, 100], "_": [19, 20, 21, 22, 30], "__call__": [11, 12, 13, 14, 15, 17, 26], "__eq__": 43, "__init__": [70, 86, 101], "__iter__": 41, "__main__": [76, 77, 79, 80, 83, 86], "__name__": [76, 77, 79, 80, 83, 86], "__post_init__": [43, 47], "_clean_input": [19, 20, 21, 22, 23, 24, 28, 29, 30], "_dict_as_kei": 63, "_function": 65, "_train": 5, "ab": 93, "abc": [11, 15, 17, 26, 31, 45], "abl": [68, 74, 90], "ablat": [1, 18, 19, 78, 81, 82, 110], "ablation_path": [18, 76, 81, 110], "ablation_paths_improv": 76, "ablation_paths_perform": 76, "ablationpath": [19, 76], "abort": [46, 71], "about": [42, 46, 60, 64, 95, 98, 99, 104, 108], "abov": 100, "absolut": [52, 90], "abstract": [8, 11, 15, 31, 45], "abstractrun": [2, 8, 9, 10, 15, 19, 20, 21, 22, 28, 31, 41, 42, 45, 63, 64, 101], "acceler": 86, "accept": [15, 90], "access": [73, 93, 94, 99, 109], "access_al": 60, "accord": [48, 66, 92, 104, 105], "accur": [96, 98], "accuraci": [74, 83, 85, 86, 91, 107, 108], "accuracy_": 86, "achiev": [96, 98, 100, 105], "across": [4, 15, 98, 99, 100, 102, 104], "act": 103, "action": 90, "activ": [15, 83, 86, 94, 105], "activate_run_select": [15, 101], "actual": 98, "ad": [9, 42, 43, 45, 46, 56, 90, 92, 94, 109], "adam": [83, 86], "add": [34, 42, 44, 45, 68, 70, 73, 83, 85, 86, 90, 92, 94, 101, 103, 105], "add_run": 42, "addit": [15, 44, 45, 47, 64, 70, 71, 82, 84, 90, 92, 101, 103], "addition": [43, 70, 93, 101, 106, 108], "additional_valu": 64, "adjust": [97, 98, 100, 108], "admin": [94, 109], "advanc": [83, 86], "affect": [91, 107], "after": [15, 19, 20, 21, 22, 23, 24, 28, 29, 31, 67, 68, 70, 90, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107], "afterward": 5, "again": [63, 105], "against": 15, "aid": 93, "aim": [96, 98, 107], "al": 60, "alert": [48, 55], "algorithm": [1, 8, 32, 38, 39, 91, 98, 107], "all": [2, 4, 5, 8, 9, 10, 14, 15, 17, 26, 31, 42, 49, 60, 63, 64, 82, 92, 96, 97, 98, 100, 105, 106, 107, 108, 110], "all_midpoint": 4, "all_run": 15, "all_siz": 4, "alloc": [91, 104], "allow": [41, 73, 75, 93, 95, 97, 99, 102, 104, 105, 108], "allow_nan": 51, "along": [97, 99, 105, 107, 108], "alpha": [64, 71, 80, 85], "alreadi": [42, 45, 103], "also": [5, 7, 9, 15, 21, 42, 43, 67, 75, 90, 95, 98, 100, 104, 106], "altern": [68, 93], "alwai": [31, 33, 34, 35, 36, 37, 38, 39], "amltk": [32, 73, 93], "amltkrun": 33, "among": 100, "amount": 104, "an": [1, 2, 8, 15, 26, 27, 30, 31, 32, 33, 37, 42, 43, 46, 48, 50, 53, 55, 60, 64, 66, 69, 74, 78, 82, 83, 84, 91, 93, 96, 98, 102, 103, 104, 108], "anaconda": 94, "analys": 103, "analysi": [5, 95, 97, 98, 99, 100, 102, 103, 105, 106, 107], "analyz": [2, 4, 72, 82, 84, 90, 93, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108], "andr\u00e9": 93, "ani": [2, 4, 10, 15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 41, 43, 44, 45, 47, 48, 49, 50, 51, 60, 63, 64, 66, 67, 70, 73, 90, 93, 101, 102, 103], "anoth": [48, 56, 70], "anova": 102, "answer": [95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108], "api": [15, 76, 77, 79, 80, 81, 101, 110], "appli": [5, 95, 97, 98, 100, 102, 105, 106, 107, 108], "applic": [93, 99], "appreci": 92, "approach": [102, 104], "approxim": 98, "apt": [94, 109], "ar": [2, 8, 9, 10, 14, 15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 33, 35, 37, 38, 39, 40, 42, 43, 45, 47, 52, 53, 60, 63, 64, 68, 71, 73, 74, 76, 77, 79, 80, 86, 90, 91, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107], "arbitrari": 96, "area": [9, 29, 98], "arg": 41, "argmax": 86, "argument": [15, 53, 90], "aris": [74, 94], "around": 98, "arrai": [5, 9, 31, 64], "arrang": 105, "arxiv": 93, "aspect": 103, "assembli": 31, "assertionerror": [42, 44, 63], "assess": [1, 8, 96, 98, 99, 100, 102], "assign": 86, "assist": 70, "associ": [31, 73, 99, 104, 105], "assum": 68, "asynchron": 93, "attribut": [14, 15, 31, 41, 43, 45, 47], "author": 93, "auto": 75, "autom": 93, "automat": [42, 64, 70, 90, 93], "automl": [32, 33, 72, 82, 84, 90, 93, 94, 100, 103], "avail": [15, 31, 42, 66, 70, 94, 96, 98, 100, 101, 105, 109], "available_run_class": 42, "available_run_yf": 42, "averag": [31, 107], "avoid": [65, 90], "awesom": 101, "ax": [98, 105], "axi": [64, 97, 100, 104, 105, 107, 108], "b": [49, 56, 100, 106], "back": [15, 17, 68], "background": [64, 98], "balanc": [91, 104, 106], "bandit": [32, 34], "bar": [67, 83, 101, 102, 103, 104, 106], "barplot": 104, "base": [2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 60, 62, 63, 91, 92, 95, 100, 104, 107], "bash": 94, "bash_profil": 94, "bashrc": [94, 109], "basic": [15, 17, 26, 70, 97, 101], "batch": [86, 91], "batch_idx": 86, "batch_siz": [71, 83, 86], "bayesian": [32, 34, 91], "becaus": [5, 15, 63, 74, 99, 106], "been": [2, 90, 98, 99, 104], "befor": [9, 15, 67, 68, 89, 91, 92, 102, 103], "beforehand": 15, "behavior": [64, 91], "being": [91, 104], "belong": 101, "benefit": 93, "bergman": 93, "best": [91, 98, 100, 104, 106], "beta": [7, 71, 80, 85], "better": [31, 70, 74, 92, 93, 101, 105, 107], "between": [9, 67, 96, 98, 108], "biedenkapp": 93, "binari": 60, "binary_rss_forest": 5, "block": [15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 101, 103], "bo": 91, "bohb": [32, 73, 93, 94], "bohbrun": 34, "bool": [5, 8, 9, 15, 17, 26, 31, 42, 43, 45, 49, 58, 60, 63, 64], "boolean": [15, 64], "bootstrap": [4, 5, 60], "border": [9, 48, 53, 98], "both": [15, 52, 60, 64, 71, 73, 90, 98, 100, 103, 106], "bound": [3, 4, 5, 7, 43, 71, 104], "branch": 92, "break": 102, "brew": [94, 109], "brief": 104, "briefli": 98, "broad": 98, "browser": 90, "bucket": 68, "budget": [2, 8, 9, 10, 15, 31, 41, 44, 45, 47, 64, 71, 73, 83, 85, 86, 91, 93, 95, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108], "budget_correl": 16, "budget_id": [76, 77, 79, 80], "bug": 92, "build": 92, "built": 93, "button": [15, 26, 60, 90, 93, 103], "button_capt": [15, 26], "bypass": 93, "c": [2, 5, 8, 9, 10, 42, 49, 85, 86, 94], "cach": [15, 17, 19, 20, 21, 22, 23, 24, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 42, 48, 63, 64, 93, 103], "cache_dir": 63, "calcul": [1, 2, 8, 9, 10, 15, 26, 31, 41, 63, 65, 67, 89, 95, 97, 98, 100, 102, 103, 105, 106, 107], "call": [5, 9, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 28, 29, 68, 83, 101], "callabl": [15, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 64, 101], "callback": [12, 14, 15, 17, 26], "can": [3, 4, 5, 6, 8, 9, 15, 22, 31, 41, 42, 44, 48, 53, 56, 62, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], "cannot": [74, 94, 102], "capabl": [95, 96, 98, 99, 100, 102, 104, 107, 108], "caption": [15, 26], "captur": 108, "case": [15, 24, 31, 44, 45, 46, 71, 89, 90, 92, 97, 106, 107, 108], "cast": [15, 48], "categor": [14, 64, 71, 105], "categori": [9, 14, 55, 83, 101], "categoricalhyperparamet": [83, 86], "categorized_plugin": 14, "caus": [102, 105], "cave": 102, "cd": [94, 109], "certain": [31, 95, 99, 102, 104, 105], "chain": 49, "challeng": 96, "chanc": 86, "chang": [2, 15, 17, 19, 20, 21, 22, 23, 24, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 49, 63, 70, 90, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 107, 108], "changelog": 92, "channel": 86, "charact": [64, 67, 83], "characterist": [27, 28], "chart": 101, "check": [15, 31, 40, 43, 45, 49, 92, 94, 103, 104, 109], "check_circular": 51, "check_equ": 31, "check_run_compat": 15, "check_runs_compat": [15, 101], "checklist": 60, "choic": [60, 83, 86, 91, 107], "choos": [2, 93, 95, 97, 100, 101, 106], "chose": 9, "chosen": [8, 10, 31, 42, 64, 95, 99], "circl": 89, "cite": 93, "cl": [15, 70], "class": [2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 62, 63, 64, 82, 84, 86, 90], "class_hint": 42, "classmethod": [15, 33, 34, 35, 36, 37, 38, 39, 45, 70], "clean": [15, 19, 20, 21, 22, 23, 24, 28, 29, 30, 103], "clear": [31, 33, 34, 35, 36, 37, 38, 39, 49, 63], "clear_run": 63, "clearer": 100, "clf": 83, "click": [15, 17, 90, 105, 106], "clone": [90, 94], "closer": 105, "cluster": 98, "cnn": 86, "code": [49, 64, 70, 71, 76, 77, 79, 80, 82, 83, 85, 86, 93, 101], "codebas": 92, "coeffici": 108, "collect": [73, 93, 108], "color": [9, 62, 64, 97, 107, 108], "colorscal": 64, "colour": [98, 104], "column": [31, 35, 68, 71, 104], "com": [90, 94], "combin": [8, 31, 45, 90, 93, 97, 98, 99, 100, 105, 106, 107, 108], "combined_cost": 31, "come": [90, 99], "command": [74, 82, 84, 90, 92, 94], "common": 15, "commun": 92, "compar": [15, 19, 20, 21, 22, 23, 24, 28, 29, 30, 43, 96, 97, 100, 102, 105, 106], "comparison": [24, 100], "compat": [15, 31, 40, 47, 94], "compet": 108, "complet": [83, 103, 105], "complex": 108, "compon": [5, 11, 13, 14, 15, 17, 26, 60, 64], "compos": 86, "comprehens": [98, 102], "compress": 48, "comput": [91, 98, 101, 106, 107], "compute_margin": 4, "concern": [32, 34, 40, 98], "conda": 94, "condit": [71, 74, 102, 107], "conduct": 96, "confid": [23, 95, 107], "config": [5, 9, 15, 17, 31, 41, 42, 44, 45, 48, 63, 67, 70, 83, 85, 86, 89, 90, 101], "config_i": 83, "config_id": [9, 28, 31, 41, 47, 64, 71], "config_id_map": 31, "config_spac": 7, "config_to_tupl": 67, "configru": 18, "configs_fn": 45, "configspac": [4, 5, 6, 31, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45, 48, 54, 68, 70, 71, 77, 79, 83, 85, 86], "configspace_fn": 45, "configur": [2, 5, 7, 8, 9, 10, 20, 27, 29, 31, 32, 35, 38, 39, 41, 43, 44, 45, 47, 48, 52, 53, 54, 61, 64, 67, 68, 73, 90, 91, 95, 96, 100, 102, 103, 105, 106, 107, 108], "configuration_cub": 18, "configurationcub": 20, "configurationspac": [2, 5, 7, 8, 9, 10, 31, 35, 41, 45, 53, 54, 83, 85, 86], "configure_optim": 86, "connect": 86, "consid": [2, 8, 9, 10, 31, 68, 74, 76, 77, 79, 80, 94, 96, 97, 98, 100, 104, 105, 106, 107, 108, 109], "consist": [31, 95, 98], "constant": [5, 23, 24, 46, 49, 51, 85, 102], "constraint": 91, "constructor": 5, "consum": 26, "contact": 101, "contain": [2, 4, 10, 28, 29, 31, 41, 42, 43, 44, 45, 52, 54, 60, 64, 66, 67, 71, 102], "content": [15, 19, 20, 21, 22, 23, 24, 28, 29, 49, 89, 101], "context": [91, 96, 102], "continous_neighbor": 10, "continu": [10, 96], "continuous_neighbor": 10, "contrast": [31, 41, 100, 103], "contribut": [94, 102], "control": 98, "conv1": 86, "conv2": 86, "conv2d": 86, "converg": [96, 100], "convergencewarn": 83, "convers": 96, "convert": [31, 42, 43, 46, 47, 48, 50, 51, 57, 59, 64, 65, 67, 71, 74, 75, 76, 77, 79, 80, 93], "convert_symb": 65, "coordin": [18, 22, 78, 81, 82, 94, 98, 110], "copi": 31, "copyright": 93, "core": [51, 65], "correct": 92, "correctli": [44, 94], "correl": 16, "correspond": [8, 14, 28, 31, 45, 60, 61, 64, 70, 73, 98, 101, 103, 107], "cost": [25, 31, 41, 44, 45, 47, 54, 64, 83, 85, 86, 98, 103, 106], "cost_over_tim": 25, "costs_mean": [31, 41], "costs_std": [31, 41], "could": [13, 15, 42, 52, 89, 104], "count": 31, "cover": [96, 98], "cpu": 86, "crash": [46, 71, 86, 99, 104, 105], "creat": [1, 3, 4, 9, 11, 15, 18, 20, 23, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 45, 48, 49, 58, 60, 62, 63, 66, 71, 75, 83, 90, 94, 97], "create_t": 60, "create_url": 66, "crowd": 105, "crucial": [95, 102], "csv": [35, 71], "cube": [18, 20], "current": [15, 19, 20, 21, 22, 23, 24, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 42, 44, 64, 67, 71, 73, 91, 94, 103], "curv": [23, 107], "custom": [13, 14, 48, 51, 60, 64, 90, 105], "custom_round": 67, "cut": [31, 67], "cutoff": 4, "d": [43, 49, 53, 92], "danger": 62, "dash": [15, 48, 60, 64, 93], "dashboard": [90, 93], "data": [4, 5, 6, 8, 10, 15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 34, 42, 43, 45, 51, 54, 56, 57, 60, 63, 64, 68, 70, 73, 83, 86, 90, 91, 93, 101, 104, 107, 108], "data_dir": 86, "data_structur": 48, "datafram": [31, 48, 51, 68, 73, 93], "dataframerun": 35, "dataload": 86, "dataset": [83, 86, 107], "dbc": [19, 20, 23, 24, 29, 55, 60], "dcc": [19, 20, 21, 22, 23, 24], "debug": [17, 49, 93], "decid": 49, "decim": [65, 67, 83], "decis": 103, "decompos": 102, "decreas": [95, 96, 107, 108], "deem": 106, "deepcav": [68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 93, 94, 101, 103, 109], "deepcaverun": [36, 44, 76, 77, 79, 80], "deeper": 93, "def": [70, 83, 86, 101], "default": [2, 4, 7, 8, 9, 10, 15, 31, 42, 44, 45, 49, 51, 52, 53, 55, 58, 60, 62, 64, 67, 71, 95, 104, 105], "default_config": 2, "defin": [12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 32, 33, 35, 36, 37, 38, 39, 43, 44, 48, 51, 60, 63, 67, 68, 70, 83, 86, 101], "definit": 96, "demonstr": [70, 101], "depend": [15, 17, 18, 23, 24, 31, 78, 81, 82, 95, 96, 108, 110], "depict": [101, 105], "deploy": 99, "depth": [4, 8, 71, 93, 99, 105], "describ": [92, 103, 108], "descript": [70, 92, 101], "deseri": [48, 51], "desir": 31, "destin": 92, "detail": [9, 24, 98, 99, 102, 103, 104, 106], "detect": 93, "determin": [96, 98, 100, 102], "determinist": [44, 86, 98, 100, 106], "dev": 94, "deviat": [5, 6, 31, 41, 100], "devic": 86, "df": [31, 68], "dialog": [15, 17], "dict": [2, 4, 5, 8, 10, 14, 15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 31, 41, 42, 43, 44, 45, 47, 49, 51, 56, 60, 63, 66, 67, 86, 101], "dictionari": [2, 8, 14, 15, 17, 19, 20, 21, 22, 23, 24, 28, 29, 31, 41, 42, 43, 44, 47, 48, 49, 56, 60, 66, 67, 101], "did": [70, 104, 105], "differ": [12, 15, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 40, 48, 63, 64, 67, 90, 94, 99, 102, 104, 106], "digit": 83, "digits_sklearn": [83, 87, 110], "dim": 86, "dimens": [8, 97], "dimension": [97, 98, 103, 107], "direct": [71, 99], "directli": [72, 78, 82, 84, 93, 94, 101, 103], "directori": [31, 40, 42, 45, 48, 58, 63, 70, 73, 74, 90, 93, 101, 103], "disabl": [60, 106], "disable_spr": 94, "discov": 92, "discret": [9, 53, 64], "disk": 73, "displai": [13, 15, 17, 20, 55, 60, 64, 74, 90, 95, 97, 98, 100, 102, 104, 105, 106, 107, 108], "disregard": 107, "distanc": [9, 98], "distribut": 71, "distribution_alpha": 71, "distribution_beta": 71, "distribution_mu": 71, "distribution_sigma": 71, "div": [20, 21, 28], "do": [42, 60, 82, 84, 89, 90, 94, 99, 101, 103, 105, 109], "doc": [48, 65, 70, 92, 101], "document": [15, 93], "doe": [45, 63, 95, 96, 97, 98, 100, 102, 103, 105, 106, 107, 108], "doi": 93, "don": 64, "done": [31, 53, 90, 94, 103], "download": [76, 77, 79, 80, 82, 83, 85, 86, 94, 109], "drag": 105, "draw": 105, "drawn": 53, "dropdown": 15, "dropout": 86, "dropout_r": 86, "dtype": 51, "due": [94, 99], "dump": 74, "dure": [68, 91, 95, 98, 104, 107, 108], "dynam": [28, 30, 74, 101, 103], "dynamicplugin": [17, 20, 28, 30, 101], "e": [5, 9, 15, 30, 31, 49, 64, 69, 70, 74, 83, 89, 90, 92, 99, 100, 105, 107, 108], "each": [2, 60, 63, 73, 95, 98, 101, 102, 104, 107, 108], "easi": 103, "easier": [49, 106], "easili": [93, 100], "eddi": 93, "edg": 98, "effect": [91, 100, 102, 106, 108], "effici": [93, 95, 102, 106], "effortlessli": 93, "either": [15, 31, 52, 67, 100, 101, 105, 106], "elapsed_tim": 86, "element": [15, 17, 26], "elif": 86, "els": [24, 43, 86], "empti": [31, 43, 60], "enabl": [71, 93, 94, 99, 105, 106], "enclos": 90, "encod": [8, 31, 51, 64], "encode_config": 31, "encompass": 73, "encount": 94, "end": [31, 44, 45, 47, 67, 68, 70, 76, 77, 79, 80, 83, 85, 86, 101], "end_tim": [44, 45, 47, 71, 86], "enforc": 64, "enough": 96, "ensur": [31, 33, 34, 35, 36, 37, 38, 39, 63, 68, 96], "ensure_ascii": 51, "entir": [102, 104], "enum": [26, 40, 46], "enumer": 83, "environ": 94, "epm": 31, "epoch": [44, 86, 91], "eps_pur": [4, 5], "equal": [31, 43, 95, 100], "equalscondit": 86, "error": [15, 40, 42, 92, 104, 106], "especi": [99, 102], "essenti": 99, "estim": [95, 107], "eval": 65, "evalu": [21, 31, 90, 91, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108], "everi": 31, "everyth": 92, "evolv": [97, 100, 108], "examin": 100, "exampl": [31, 53, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 94, 101, 103, 104, 105, 107, 108, 110], "examples_jupyt": 82, "examples_python": 82, "except": [42, 83], "exclud": [9, 31], "exclude_config": 9, "exclus": 93, "execut": [81, 87, 88, 93, 101, 110], "exhibit": 105, "exist": [31, 45, 63, 92], "exit": 104, "exp": 65, "expand": [94, 109], "expect": [35, 45, 71, 94, 98, 104, 107], "expedit": 96, "expens": 91, "experi": 93, "experiment": 91, "explain": [24, 90], "explan": [18, 24, 99], "explicit": 108, "exploit": 91, "explor": [90, 91, 93, 98, 104], "exponenti": 65, "export": [94, 109], "express": [65, 102], "extend": 93, "extens": [64, 93], "extern": 91, "extract": [35, 54, 66], "extract_config": 54, "extract_cost": 54, "extract_valu": 54, "f": [74, 83, 86], "fa": 101, "face": 104, "facilit": 99, "fail": [46, 70, 71], "fair": 96, "fals": [5, 9, 15, 31, 42, 43, 44, 49, 51, 60, 71, 76, 79, 80, 86, 105], "fanova": [1, 3, 4, 10, 21, 31, 102, 105], "fanova_forest": 3, "fanovaforest": 4, "fashion": [76, 77, 79, 80], "fastest": 89, "favor": [98, 106], "featur": [4, 5, 7, 15, 92, 100, 105], "feedback": 92, "feel": [70, 90], "few": [68, 74], "ff00ff": 64, "fidel": [44, 71, 95, 97, 98, 100, 102, 104, 105, 106, 107, 108], "field": 54, "figur": [19, 20, 21, 22, 23, 24, 29, 64, 76, 77, 79, 80, 101, 103], "figure1": [19, 76], "figure2": [19, 76], "file": [15, 31, 35, 42, 45, 48, 49, 52, 57, 59, 68, 70, 71, 73, 74, 81, 87, 88, 89, 90, 92, 94, 101, 109, 110], "file_to_hash": 59, "filenam": [48, 49, 52, 57, 58, 59, 94, 109], "filenotfounderror": [15, 42], "fill": [15, 19, 20, 21, 22, 23, 24, 28, 29, 67, 83], "filter": [15, 19, 20, 21, 22, 23, 24, 28, 29, 76, 77, 79, 80, 95, 97, 98, 100, 101, 102, 103, 105, 106, 107], "filterwarn": 83, "final": [76, 77, 79, 80, 96, 99, 103, 105], "find": [31, 65, 73, 91, 96, 98, 99, 104, 105], "finish": [68, 73, 89], "first": [15, 19, 20, 21, 22, 23, 24, 28, 29, 31, 70, 94, 96, 98, 101, 105, 107, 108, 109], "fit": [6, 65, 83, 86, 108], "fix": [60, 92], "flash": [48, 55], "flask": 55, "flask_cach": 49, "flatten": 86, "flexibl": 15, "float": [2, 4, 5, 7, 8, 9, 10, 31, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 47, 53, 54, 64, 65, 67, 70, 71], "flop": 74, "focu": [93, 97, 105], "focus": [98, 102], "folder": [71, 94, 109], "follow": [15, 17, 31, 45, 49, 68, 70, 71, 73, 74, 82, 84, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109], "font": 101, "fontsiz": 23, "footprint": [1, 27], "forbidden": [71, 102], "forc": 64, "forest": [3, 4, 5, 6, 8, 10, 95, 102, 107], "fork": 92, "form": [8, 31], "format": [35, 43, 46, 51, 57, 64, 68, 71, 72, 82, 83, 84, 92, 93, 94], "formula": [24, 108], "forward": 86, "found": [15, 21, 31, 42, 45, 86, 92, 94, 98, 109], "foundat": 11, "four": [53, 99], "fraction": [4, 102], "frame": 51, "framework": [75, 93], "frank": 93, "free": 70, "friendli": 43, "from": [2, 8, 9, 10, 15, 19, 20, 21, 22, 23, 24, 28, 29, 31, 34, 35, 36, 41, 42, 43, 45, 48, 49, 51, 52, 53, 54, 58, 60, 63, 64, 67, 68, 70, 71, 76, 77, 79, 80, 81, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110], "from_json": 43, "from_path": [33, 34, 35, 36, 37, 38, 39, 45, 70, 76, 77, 79, 80], "front": 25, "full": [76, 77, 79, 80, 83, 85, 86, 92, 96, 104], "fulli": [86, 93, 101], "function": [2, 7, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 43, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 70, 83, 86, 91, 94, 95, 96, 97, 98, 100, 102, 106, 107, 108], "fundament": 73, "further": [8, 31, 70, 90, 96, 104], "furthermor": [74, 108], "g": [5, 15, 30, 49, 64, 69, 70, 74, 83, 89, 90, 92, 99], "gain": [93, 98], "galleri": 110, "gener": [8, 15, 18, 23, 24, 47, 48, 53, 60, 64, 67, 92, 93, 94, 97, 102, 103, 108], "generate_config_cod": 64, "generate_input": [15, 76, 77, 79, 80], "generate_output": [15, 76, 77, 79, 80], "get": [2, 3, 5, 7, 8, 9, 10, 15, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 48, 49, 53, 60, 61, 63, 64, 65, 67, 78, 82, 83, 84, 94, 96, 104, 109], "get_ablation_improv": 2, "get_ablation_perform": 2, "get_all_cost": 31, "get_available_run_path": 42, "get_avg_cost": 31, "get_base_url": 15, "get_budget": 31, "get_budget_id": [31, 76, 77, 79, 80], "get_checklist_opt": 60, "get_color": 64, "get_config": 31, "get_config_id": 31, "get_configspac": [83, 86], "get_dataset": 83, "get_discrete_heatmap": 64, "get_encoded_data": 31, "get_filter_layout": [15, 19, 20, 21, 22, 23, 28, 29, 101], "get_function_set": 65, "get_group": 42, "get_highest_budget": 31, "get_hovertext_from_config": 64, "get_hyperparameter_tick": 64, "get_hyperparameter_ticks_from_valu": 64, "get_import": [8, 10], "get_incumb": 31, "get_input_layout": [15, 19, 20, 21, 22, 23, 24, 28, 29, 101], "get_internal_id": 15, "get_internal_input_id": 15, "get_internal_output_id": 15, "get_kei": 47, "get_latest": 62, "get_latest_chang": 67, "get_leaf_valu": 5, "get_link": 28, "get_logg": 61, "get_meta": 31, "get_model": [31, 41], "get_new_config_id": 41, "get_num_config": 31, "get_object": 31, "get_objective_id": [31, 76, 77, 79, 80], "get_objective_nam": 31, "get_origin": 31, "get_original_config_id": 41, "get_original_run": 41, "get_output_layout": [15, 19, 20, 21, 22, 23, 24, 28, 29, 30, 101], "get_pdp_figur": 23, "get_point": 9, "get_radio_opt": 60, "get_random_str": 67, "get_run": [41, 42], "get_run_input_layout": 15, "get_run_nam": 42, "get_se": 31, "get_select_opt": 60, "get_selected_group": 42, "get_selected_run": 15, "get_selected_run_nam": 42, "get_selected_run_path": 42, "get_slider_mark": 60, "get_statu": 31, "get_surfac": 9, "get_trajectori": [31, 41], "get_trial": 31, "get_trial_kei": 31, "get_typ": 7, "get_working_directori": 42, "get_worst_valu": 43, "getcwd": 86, "git": [90, 92, 94], "github": [90, 92, 94], "give": [96, 103, 109], "given": [5, 6, 10, 31, 34, 36, 41, 45, 52, 60, 63, 64, 65, 66, 67, 70, 91, 98, 100, 106], "global": [15, 31, 41, 77, 102], "go": [20, 21, 22, 23, 24, 64, 76, 77, 79, 80, 83, 85, 86, 101], "goal": [96, 100, 103], "goe": 85, "good": [92, 96, 100], "govern": 91, "gplearn": 65, "gradient_clip": 71, "graph": [19, 20, 21, 22, 23, 24, 99, 100], "graphic": 93, "greatest": 102, "greatli": 92, "green": 98, "grid": [97, 98], "grid_points_per_axi": [23, 24], "group": [15, 31, 42, 90, 93, 99, 100, 104, 105, 106], "groupedrun": 42, "gui": 90, "guid": [70, 101], "guidelin": 96, "gz": [94, 109], "ha": [9, 31, 33, 34, 35, 36, 37, 38, 39, 49, 53, 60, 63, 68, 86, 90, 96, 97, 98, 107], "handi": [5, 104], "handl": [12, 14, 15, 17, 26, 31, 36, 42, 47, 48, 49], "happi": 103, "hash": [31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 48, 63, 70], "have": [2, 5, 15, 19, 20, 21, 22, 23, 24, 28, 29, 60, 64, 68, 70, 71, 73, 78, 82, 84, 89, 90, 92, 94, 95, 98, 99, 101, 102, 103, 104, 109], "head": 60, "headerlayout": 12, "heatmap": [9, 64, 104, 107], "height": 86, "help": [15, 60, 70, 89, 92, 93, 97, 98, 100, 101, 102, 105, 106], "help_button": 60, "here": [15, 17, 26, 76, 77, 79, 80, 85, 92, 96, 98, 102, 104, 105], "hesit": 101, "hex": 64, "hex_str": 64, "hex_to_rgb": 64, "hidden_layer_s": 83, "hide_hp": 79, "high": [85, 96, 97, 98, 100, 104, 105, 106], "higher": [8, 89, 96, 108], "highest": [8, 10, 31, 64, 96, 97, 98, 100, 104, 105, 106, 107, 108], "highli": 107, "highlight": [65, 98, 106], "hint": 42, "histori": [31, 41, 44, 45, 68, 70, 71], "history_df": 68, "history_fn": 45, "hit": 90, "hold": [30, 31, 33, 34, 35, 36, 37, 38, 39, 44, 48, 63, 71], "hopefulli": 101, "hover": [60, 64, 98], "hovertext": 64, "how": [8, 9, 10, 67, 70, 73, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109], "howev": [90, 100, 104], "hp": [2, 8, 9, 10, 31, 64], "hp1": 31, "hp2": 31, "hp_id": 4, "hp_name": [2, 8, 10, 65], "hpbandster": 69, "hpn": 31, "hpo": [90, 93, 103], "html": [20, 21, 24, 28, 60, 64, 65, 92], "http": [65, 90, 93, 94, 109], "human": 31, "hutter": 93, "hyperparamet": [1, 2, 3, 4, 5, 7, 8, 9, 10, 31, 32, 34, 53, 64, 71, 73, 74, 75, 76, 77, 79, 80, 83, 85, 86, 91, 93, 95, 97, 98, 99, 102, 103, 104, 105, 107, 108], "hyperparameter_nam": [77, 79], "hyperparameter_name_1": 80, "hyperparameter_name_2": 80, "i": [2, 4, 5, 7, 8, 9, 10, 15, 17, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 55, 58, 60, 62, 63, 64, 65, 67, 69, 71, 74, 83, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109], "ic": [23, 107], "icml": 93, "icon": 60, "id": [15, 17, 26, 31, 41, 42, 44, 45, 47, 63, 64, 99, 101, 104], "id_": 64, "idea": [82, 84, 92], "ideal": [96, 104], "identif": [31, 41, 47], "identifi": [15, 17, 31, 70, 91, 98, 105], "ignor": [64, 83, 86], "imag": [64, 90], "immedi": [101, 103], "impact": [91, 95, 96, 102], "implement": [31, 102, 103], "import": [1, 2, 4, 8, 10, 15, 18, 30, 70, 74, 76, 78, 79, 80, 81, 82, 83, 85, 86, 92, 94, 95, 99, 100, 101, 103, 104, 105, 106, 110], "improv": [2, 93, 95, 98], "in_channel": 86, "inact": 7, "includ": [4, 9, 15, 19, 21, 23, 24, 30, 31, 41, 42, 49, 60, 63, 64, 90, 91, 92, 93, 102, 104], "include_combin": 31, "include_combined_cost": 31, "include_config_id": 31, "include_group": 42, "include_nan": 64, "incorpor": [72, 82, 84, 86], "increas": [89, 95, 98, 99, 107, 108], "incumb": [2, 9, 10, 31, 91, 95, 98, 102], "incumbent_arrai": 10, "indent": 51, "independ": 64, "index": [67, 70, 101], "indic": [4, 60, 96, 98, 104, 105, 107], "individu": [4, 8, 99, 100, 102, 106, 107], "inf": [4, 43, 44, 45], "infer": [96, 98], "influenc": [97, 102, 103], "info": 55, "inform": [4, 15, 17, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 42, 44, 45, 46, 47, 48, 60, 64, 66, 98, 99, 101, 103, 106, 109], "inherit": [52, 90], "initi": [31, 83], "inplac": [48, 56], "input": [5, 6, 15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 48, 63, 64, 65, 66, 76, 77, 79, 80, 101, 103], "inputs_kei": 63, "insid": [42, 70, 90, 94, 109], "insight": [93, 98, 102, 103, 105], "inspect": 97, "instal": [69, 70, 74, 82, 84, 89, 90, 92, 101], "instanc": [5, 7, 33, 37, 38, 39, 42, 43, 64, 96, 105, 106], "instance_featur": [4, 5, 7], "instanti": [42, 76, 77, 79, 80], "int": [2, 4, 5, 7, 8, 9, 10, 23, 24, 28, 31, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 50, 53, 60, 64, 65, 67, 83, 86], "integ": [9, 31, 53, 71], "integr": [93, 99, 101], "intens": 93, "intenum": 46, "interact": [78, 82, 90, 94, 102, 105, 109], "interest": [9, 15, 17, 102], "interfac": [76, 77, 79, 80, 103], "intermedi": 58, "intern": [9, 10, 15, 42, 45], "interpret": [73, 90], "interv": 4, "invalid": [31, 64], "invest": 98, "investig": 97, "involv": [31, 91], "io": [94, 109], "ip": 90, "ipynb": [76, 77, 79, 80, 83, 85, 86], "issu": [89, 92, 94], "item": [60, 83, 105], "item_0": 71, "item_1": 71, "iter": [2, 31, 41, 53, 67, 83, 91, 95], "its": [12, 15, 19, 20, 21, 22, 23, 24, 28, 29, 31, 45, 48, 63, 64, 66, 73, 91, 94, 98, 99, 102, 103], "itself": [31, 41, 47, 96, 98], "job": 90, "join": 86, "json": [15, 19, 20, 21, 22, 23, 24, 28, 29, 43, 47, 49, 51, 68], "json_default_separ": 51, "json_dense_separ": 51, "jsonencod": 51, "jupyt": [76, 77, 79, 80, 82, 83, 85, 86], "just": [70, 86, 101], "keep": 5, "kei": [15, 31, 41, 42, 44, 47, 49, 63, 77, 79], "kernel_s": 86, "keyword": 15, "kind": [98, 103], "know": [68, 99, 104], "known": 98, "kwarg": [15, 41, 86], "label": [60, 64], "largest": [2, 95], "last": [31, 44, 104, 105], "last_trial_id": 44, "lastli": 104, "later": 86, "latest": [31, 33, 34, 35, 36, 37, 38, 39, 41, 62, 65, 70, 104], "latest_chang": [31, 33, 34, 35, 36, 37, 38, 39, 41, 70], "layer": [82, 84, 87, 91, 110], "layout": [15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 48], "lead": [2, 95, 107], "leaf": 5, "learn": [91, 93, 95, 107, 108], "learning_r": [83, 86], "learning_rate_init": [71, 83], "least": 96, "left": [90, 105], "len": 83, "length": [31, 60, 67, 83], "let": [98, 104], "level": 104, "leverag": [24, 74, 98, 102], "librari": 101, "licens": 93, "lightningmodul": 86, "like": [19, 20, 21, 22, 23, 24, 28, 29, 73, 92, 94, 96, 98, 101, 103, 109], "limit": [74, 91, 95, 102, 105], "lindauer": 93, "line": [67, 68, 83, 100, 101, 104, 105], "linear": [86, 104], "link": [28, 64, 99, 104], "linspac": 86, "linux": [94, 109], "list": [2, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 41, 42, 45, 47, 51, 54, 60, 64, 65, 70, 77, 79, 99, 101], "ll": 104, "load": [15, 19, 20, 21, 22, 23, 24, 28, 29, 35, 42, 45, 49, 52, 63, 68, 69, 71, 74, 75, 76, 77, 79, 80, 90, 93, 94, 101], "load_configspac": 35, "load_dependency_input": [15, 19, 20, 21, 22, 23, 24, 28, 29, 30, 101], "load_digit": 83, "load_input": [15, 19, 20, 21, 22, 23, 24, 28, 29, 30, 101], "load_object": 35, "load_output": [15, 19, 20, 21, 22, 23, 24, 28, 29, 30, 76, 77, 79, 80, 101], "load_run_input": 15, "load_trial": 35, "local": [1, 10, 21, 90, 102], "locat": [19, 20, 21, 22, 23, 24, 28, 29, 30, 52, 64, 98], "lock": 43, "lock_low": 43, "lock_upp": 43, "log": [44, 48, 71, 73, 76, 77, 79, 80, 82, 83, 84, 85, 86, 90], "log_i": 5, "log_softmax": 86, "logarithm": [5, 100, 104], "logger": [11, 17, 26, 31, 42, 61, 63], "logger_nam": 61, "logist": 83, "logit": 86, "long": [70, 100], "longer": [8, 64, 96, 103, 105], "look": [31, 42, 71, 73, 78, 82, 90, 92, 101, 103], "loop": 83, "loss": [86, 91], "loss_": 86, "lot": 15, "low": [85, 96, 103, 104, 105, 106], "lower": [31, 35, 43, 46, 71, 83, 85, 86, 96, 98], "lowest": [31, 96], "lpi": [1, 21, 102], "lr": 86, "m": 92, "m1": 94, "mac": 109, "machin": [89, 93, 107], "maco": 94, "made": [26, 41], "mai": [94, 96, 97, 98, 101, 105], "main": [90, 92, 103], "maintain": 92, "make": [31, 78, 82, 84, 89, 90, 92, 94, 106, 109], "make_dir": 58, "manag": [32, 34, 41, 105], "mani": [8, 9, 10, 86, 93, 97, 103, 104, 105], "manipul": 68, "manual": [68, 101], "map": [15, 31, 97, 98], "margin": [4, 5, 8, 60], "mariu": 93, "mark": [60, 98], "markdown": [48, 57], "match": [5, 44, 45], "mathemat": 65, "matplotlib": 21, "matter": 95, "max": 9, "max_decim": 67, "max_depth": [4, 5], "max_epoch": 86, "max_it": 83, "max_nod": [4, 5], "max_sampl": [23, 24], "max_shown_sampl": [23, 24], "maxim": [35, 71, 91], "maximum": [65, 67, 93, 98, 100], "maxpool2d": 86, "mb": [60, 81, 87, 88, 110], "md": [9, 48, 57, 92, 98], "mean": [5, 6, 8, 10, 41, 96, 100], "measur": 96, "mem": [81, 87, 88, 110], "memoryout": [46, 71, 86], "mention": [98, 100], "menu": 90, "merg": [15, 19, 20, 21, 22, 23, 24, 28, 29, 31, 42, 43, 92], "merge_cost": 31, "mergeabl": [40, 43], "meshgrid": 9, "messag": [55, 62], "meta": [30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 70, 108], "meta_fn": 45, "metadata": 35, "method": [2, 15, 19, 20, 21, 22, 23, 24, 28, 29, 30, 35, 64, 77, 95], "metric": [35, 64, 71, 74, 91, 99, 108], "mid": 96, "midpoint": [4, 8], "might": [8, 64, 70, 89, 95, 99, 101, 103, 105, 106], "min_decim": 67, "min_epoch": 86, "min_samples_leaf": [4, 5], "min_samples_split": [4, 5], "minim": [71, 76, 77, 79, 80, 82, 84, 87, 91, 110], "minimum": [67, 91, 98], "minmaxscal": 5, "misc": 93, "miss": [15, 99], "mistak": 92, "mkdir": [94, 109], "mlp": 86, "mlpclassifi": 83, "mnist": 86, "mnist_ful": 86, "mnist_pytorch": [82, 84, 86, 87, 90, 110], "mnist_test": 86, "mnist_train": 86, "mnist_val": 86, "mnistmodel": 86, "mode": [15, 67, 78, 82, 92, 93, 94, 109], "model": [2, 3, 4, 5, 6, 9, 10, 31, 32, 38, 39, 41, 44, 45, 86, 91, 95, 98, 102, 107, 108], "model_select": 83, "models_dir": [31, 45], "moder": 96, "modul": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "moment": 101, "monitor": [73, 93], "more": [15, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 40, 71, 83, 86, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108], "moreov": [15, 31], "most": [30, 91, 95, 98, 102, 104, 105], "mostli": 104, "much": [8, 102, 103], "multi": [31, 44, 45, 71, 82, 84, 87, 94, 95, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 110], "multiclass": 86, "multidimension": 9, "multipl": [15, 31, 47, 86, 96, 97, 98, 100, 105, 106, 107, 108], "multitud": 107, "must": [5, 15, 19, 20, 21, 22, 23, 24, 28, 29, 31, 52, 63, 64, 90, 106], "my": [89, 101], "my_first_convert": 70, "my_first_plugin": 101, "myfirstconvert": 70, "myfirstplugin": 101, "n": [83, 88, 94, 95, 102, 105], "n_decim": 65, "n_epoch": 86, "n_featur": 5, "n_hp": [76, 77, 79], "n_object": 5, "n_param": [4, 5], "n_sampl": 5, "n_tree": [2, 4, 5, 6, 8, 10, 76, 77], "n_worker": 90, "name": [2, 5, 8, 10, 15, 26, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 52, 58, 61, 64, 65, 66, 68, 70, 71, 74, 83, 85, 86, 90, 101, 104, 106], "name_str": 54, "nan": 64, "nativ": [72, 73, 82, 84, 93], "natur": 97, "nav_point": 14, "navig": [15, 90, 104], "ndarrai": [4, 5, 6, 7, 10, 31, 51, 65], "nearest": 67, "necessari": [15, 19, 20, 21, 22, 23, 24, 28, 29, 63, 67, 69, 74, 96, 99], "need": [5, 8, 15, 49, 63, 68, 70, 71, 82, 84, 91, 92, 94, 100, 103], "neglig": 96, "neighbor": 10, "nest": 64, "network": [91, 96], "neural": [91, 96], "neural_network": 83, "new": [9, 31, 33, 34, 35, 37, 38, 39, 41, 42, 45, 70, 73, 83, 92, 101, 103], "newer": [75, 101], "newli": 70, "next": [70, 95, 103, 104], "nice": 104, "nll_loss": 86, "nn": [31, 45, 86], "noisi": 98, "non": [19, 21, 23, 44, 64, 93, 98, 100, 106], "none": [2, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 23, 24, 26, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 56, 58, 60, 62, 63, 64, 65, 66, 67, 83, 86], "normal": [7, 31, 71, 86], "not_evalu": [46, 71, 104], "notabl": 104, "note": [8, 31, 71, 76, 77, 79, 80, 92, 95, 98, 101], "notebook": [76, 77, 79, 80, 82, 83, 85, 86], "notfound": 13, "notfoundlayout": 13, "noth": 42, "notic": 97, "notif": 48, "notmergeableerror": [15, 31, 40, 42, 43], "notvalidrunerror": [40, 42], "now": [8, 67, 86, 94, 109], "np": [5, 6, 7, 31, 43, 44, 45, 51, 65, 85, 86], "num": 86, "num_class": 86, "num_config": [83, 86], "num_neuron": 86, "num_neurons_layer1": [83, 86], "num_neurons_layer2": [83, 86], "num_run": 86, "num_sanity_val_step": 86, "num_work": 86, "number": [2, 4, 5, 8, 10, 19, 21, 24, 31, 45, 60, 64, 65, 67, 83, 90, 91, 95, 96, 97, 98, 100, 102, 108], "numpi": [10, 31, 64, 85, 86], "o": 86, "obj": [31, 51], "obj1": 31, "obj2": 31, "objc_disable_initialize_fork_safeti": 94, "object": [2, 5, 8, 9, 10, 15, 17, 20, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 49, 51, 55, 59, 62, 63, 64, 70, 71, 74, 83, 85, 86, 91, 95, 96, 97, 98, 100, 102, 103, 105, 106, 107, 108], "objective_id": [31, 76, 77, 79, 80], "objm": 31, "observ": 73, "obtain": [24, 31, 108], "occur": [93, 106], "offer": [73, 93, 99, 103, 105, 106], "offici": 94, "often": [8, 91, 100], "older": 75, "omit": 71, "onc": [15, 96, 101], "one": [2, 15, 31, 42, 43, 48, 56, 89, 93, 95, 97, 98, 101, 104, 107, 108], "ones": 91, "onli": [5, 8, 9, 15, 19, 20, 21, 22, 23, 24, 28, 29, 31, 42, 53, 60, 63, 64, 95, 97, 98, 100, 102, 105, 106, 107, 108], "onward": 104, "open": [74, 90, 92, 103], "optim": [24, 31, 32, 34, 43, 71, 73, 75, 83, 85, 86, 90, 91, 94, 95, 96, 97, 98, 100, 104, 105, 106, 108], "option": [2, 7, 8, 9, 10, 15, 31, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 58, 60, 62, 63, 64, 65, 66, 67, 74, 83], "optional_int": 50, "optuna": [32, 73, 93, 94], "optuna_studi": 74, "optunarun": 37, "orang": 98, "order": [8, 71, 82, 84, 95, 97, 105], "org": [65, 93], "origin": [31, 41, 44, 45, 99], "original_config_id": 41, "origins_fn": 45, "other": [43, 76, 77, 79, 80, 83, 86, 90, 93, 97, 98, 99, 100, 106, 107], "otherwis": [15, 31, 42, 66, 100, 101], "our": [49, 73, 92, 93, 103], "out": [70, 86, 90, 104], "out_channel": 86, "outperform": 100, "output": [15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 60, 63, 76, 77, 79, 80, 86, 101, 103], "over": [2, 5, 25, 31, 41, 43, 60, 97, 98, 103, 106], "overal": [10, 30, 102], "overflow": 65, "overview": [27, 78, 82, 98], "overwrit": 44, "overwritten": 45, "own": [63, 73, 92, 101, 103], "p": [94, 109], "packag": [6, 82, 84, 94], "pad": 86, "page": [13, 90, 103, 109], "palett": 64, "panda": [51, 54, 68, 73, 93], "paper": [93, 95, 102, 108], "parallel": [18, 22, 78, 81, 82, 94, 110], "parallel_coordin": [18, 79, 81, 110], "parallelcoordin": [22, 79], "param": 83, "paramet": [1, 2, 4, 5, 6, 7, 8, 9, 10, 15, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 86, 91, 95, 98, 102, 108], "parent": 58, "pareto": 25, "pareto_front": 25, "parquet": 68, "pars": [15, 48, 52, 66], "parse_config": 52, "parse_url": 66, "parser": 68, "parsimoni": 108, "part": [43, 101, 104], "partial": [18, 23, 24, 78, 81, 82, 108, 110], "partialdepend": [23, 80], "particular": [15, 17, 64, 93, 100], "particularli": [9, 31, 97, 98, 100], "pass": [5, 8, 15, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 42, 44, 67, 70, 90, 92, 105], "past": [15, 17], "path": [1, 2, 15, 18, 19, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 52, 57, 58, 59, 63, 66, 70, 74, 77, 78, 79, 80, 81, 82, 86, 90, 94, 101, 109, 110], "pathlib": [76, 77, 79, 80], "pathnam": [34, 66], "pattern": 105, "pca": 5, "pca_compon": [4, 5], "pd": [31, 35, 51, 54], "pdp": [18, 24, 80, 81, 107, 110], "peak": 100, "penal": 108, "penalti": 108, "per": [10, 98, 100, 101, 106], "percent": 83, "percentag": 67, "percentil": 4, "perceptron": [82, 84, 87, 110], "perfect": 98, "perfectli": 96, "perform": [2, 9, 29, 91, 93, 95, 96, 100, 102, 103, 104, 105, 106, 107, 108], "perpetu": 93, "pickl": 74, "pictur": 100, "pinpoint": 102, "pip": [69, 74, 94], "pipelin": 68, "pkl": 74, "pl": 86, "place": [67, 105], "placement": 60, "plai": [76, 77, 79, 80], "plane": 97, "platform": 94, "pleas": [19, 20, 21, 22, 23, 24, 28, 29, 30, 70, 71, 72, 73, 90, 92, 93, 94, 95, 101, 102, 103, 108], "plot": [9, 18, 23, 24, 48, 64, 95, 97, 102, 104, 106, 107, 108], "plotli": [29, 48, 64], "plotti": 64, "plugin": [14, 42, 63, 64, 76, 77, 79, 80, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108], "plugin_id": 63, "pluginst": 26, "plugintyp": 101, "png": [76, 77, 79, 80], "point": [4, 5, 6, 9, 68, 70, 73, 74, 91, 97, 98, 100, 103], "popov": 60, "popul": 108, "port": 90, "posit": [15, 60, 83], "possibl": [15, 48, 50, 52, 53, 64, 66, 98, 100, 104], "possibli": 104, "potenti": 86, "power": [93, 101], "pre": [15, 19, 20, 21, 22, 23, 24, 28, 29, 90], "pred": 86, "predict": [5, 6, 31, 102], "predict_margin": 5, "prefer": [93, 97, 98, 105], "prefix": [41, 44, 45, 67, 83], "prepar": [10, 15, 19, 20, 21, 22, 23, 24, 28, 29, 30], "prepare_data": 86, "present": [64, 99, 107], "preserv": 98, "prettifi": 64, "prettify_label": 64, "prevent": 15, "preventupd": 15, "previou": [2, 15, 23, 24, 28, 29, 96], "previous_input": [15, 23, 24, 28, 29, 101], "princip": 5, "print": [67, 83], "print_end": 67, "print_progress_bar": [67, 83], "printend": 83, "prior": 95, "probabilist": 91, "problem": 94, "process": [15, 19, 20, 21, 22, 23, 24, 26, 28, 29, 31, 32, 34, 73, 83, 91, 93, 94, 95, 98, 100, 101, 103], "profil": 68, "prog_bar": 86, "programmat": 99, "progress": [67, 83, 96, 104], "progress_bar": 83, "project": [92, 93], "properti": 70, "provid": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 67, 70, 71, 73, 97, 98, 99, 100, 102, 103, 104, 105, 108], "prune": [46, 71], "publish": 93, "pull": 103, "purpl": 98, "push": 92, "put": 71, "pwd": [94, 109], "py": [70, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 101, 110], "pypdp": 6, "pyrfr": [4, 5, 31, 102], "pyrfr_map": 5, "python": [52, 70, 76, 77, 79, 80, 82, 83, 85, 86, 92, 94, 99, 101], "pytorch": [75, 82, 84, 87, 110], "pytorch_lightn": 86, "qualiti": 107, "quantifi": 108, "question": [70, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108], "queue": [26, 89, 90, 103], "quick": 103, "quickli": 100, "quot": 90, "r": [10, 83, 85, 86], "radio": 60, "rais": [2, 7, 8, 9, 10, 15, 19, 21, 23, 24, 31, 33, 37, 38, 39, 40, 42, 43, 44, 45, 49, 52, 60, 63, 64, 67, 86], "random": [3, 5, 6, 8, 10, 48, 53, 67, 85, 86, 95, 98, 102, 107, 108], "random_forest": 3, "random_forest_surrog": 3, "random_split": 86, "random_st": 83, "randomforest": [3, 4, 5, 6, 10], "randomforestsurrog": 6, "randomli": [95, 98], "randomst": 10, "rang": [53, 74, 83, 86, 93, 96, 105], "rate": [9, 89, 90, 91, 107, 108], "ratio_featur": [4, 5], "raw": [15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 63, 101], "raw_output": [15, 17, 26], "rc": 42, "re": 105, "reach": [13, 70, 96, 100], "read": [15, 19, 20, 21, 22, 23, 24, 28, 29, 30, 35, 49], "readabl": 31, "readi": [42, 103], "real": 15, "realml": 93, "realml2022": 93, "reason": 92, "receiv": [103, 104], "recommend": [74, 94, 101], "record": [83, 86, 87, 93, 94, 110], "red": 98, "redi": 89, "redirect": [15, 17, 90, 106], "reduc": [53, 96], "reduct": 98, "refer": [42, 91, 92, 96, 101, 102], "refin": [95, 97, 98, 100, 102, 105, 106, 107], "reflect": 98, "refresh": [89, 90], "refresh_r": 89, "regard": [103, 104], "regardless": 95, "region": [98, 107], "regist": [12, 14, 15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 64], "register_callback": [12, 14, 15, 17, 26], "register_input": [15, 19, 20, 21, 22, 23, 24, 28, 29, 30, 64], "register_output": [15, 20, 22, 29], "regress": [3, 5, 65, 108], "regressor": 65, "regsit": 22, "regularli": 73, "reject": 9, "rejection_r": 9, "rel": [52, 90, 100, 106], "relat": [4, 105, 108], "relationship": [96, 108], "releas": [94, 109], "relev": 105, "reli": [75, 102], "relianc": 94, "relu": [83, 86], "remov": [42, 63, 102, 105], "remove_run": 42, "render": 15, "render_button": 15, "ren\u00e9": 93, "replac": [65, 74], "report": 92, "reposit": 105, "repositori": [90, 92], "repres": [31, 46, 47, 73, 91, 96, 97, 98, 107, 108], "represent": [10, 35, 47, 96, 98], "request": [31, 103], "requir": [15, 64, 83, 109], "research": 93, "reserv": 90, "reset": [31, 48, 49, 62, 63], "resolut": 98, "resourc": [91, 93, 96, 98, 104], "respect": [2, 8, 94, 104, 107, 108], "respond": 31, "restrict": 20, "restructuredtext": [48, 57, 92], "result": [15, 19, 20, 21, 22, 23, 24, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 43, 63, 72, 73, 82, 84, 86, 93, 94, 95, 96, 100, 102, 103, 104, 107, 108], "retri": 9, "retriev": [31, 42, 49, 62, 64, 99], "return": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 83, 86, 101], "reveal": 92, "review": 92, "rgb": 64, "rgba": 64, "right": [8, 42, 105, 106], "rm": [94, 109], "role": [76, 77, 79, 80], "root": [94, 109], "round": [65, 67, 86], "round_plac": 67, "row": [19, 20, 23, 24, 29, 60], "rst": [48, 57, 70, 101], "rst_to_md": 57, "run": [1, 2, 8, 9, 10, 15, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 48, 63, 64, 65, 68, 69, 70, 71, 74, 75, 76, 77, 79, 80, 82, 84, 86, 87, 90, 92, 93, 94, 96, 98, 99, 100, 103, 104, 106, 107, 109, 110], "run_2": [76, 77, 79, 80], "run_cach": [42, 48], "run_id": [41, 42, 86], "run_nam": [33, 35, 37, 38, 39, 41], "run_path": [41, 42], "runcach": [42, 63], "runhandl": 42, "runinequ": 40, "runtim": 15, "runtimeerror": [2, 8, 9, 10, 15, 19, 21, 23, 24, 31, 33, 37, 38, 39, 42, 43, 45, 49, 52, 64, 86], "safe": 65, "same": [8, 15, 31, 60, 64, 71, 76, 77, 79, 80, 96, 97, 98, 100, 103, 105], "sampl": [4, 5, 48, 53, 98, 107], "sample_border_config": 53, "sample_configur": [83, 85, 86], "sample_random_config": 53, "samples_per_hp": [23, 24], "saniti": [86, 103, 104], "sass": 93, "save": [42, 45, 63, 64, 68, 71, 72, 74, 82, 84, 93, 103], "save_imag": 64, "save_path": [44, 83, 85, 86], "saw": 101, "sbin": [94, 109], "scalar": 98, "scale": [5, 9, 76, 77, 79, 97, 100, 104], "scaler": 5, "scatter": 98, "scenario": 104, "schema": 15, "score": [8, 10, 20, 68, 83, 95, 96, 97, 98, 100, 102, 105, 106, 107, 108], "script": 94, "search": [9, 71, 74, 96], "search_spac": 68, "second": [44, 107, 108], "section": [90, 92, 99, 104], "see": [15, 19, 20, 21, 22, 23, 24, 28, 29, 30, 65, 72, 82, 84, 90, 94, 95, 100, 101, 102, 104, 106, 108, 109], "seed": [2, 4, 5, 6, 8, 10, 31, 44, 45, 47, 71, 73, 83, 85, 86, 98, 100, 104, 106, 108], "seed_everyth": 86, "seek": 106, "select": [4, 8, 10, 15, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 41, 42, 48, 60, 63, 70, 71, 90, 92, 93, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108], "selected_id": 31, "selected_run_path": 42, "self": [11, 12, 13, 14, 15, 42, 43, 70, 86, 93, 101], "separ": [15, 51], "sequenti": [32, 38, 39, 86], "seri": 54, "serial": [15, 19, 20, 22, 23, 24, 28, 29, 45, 48, 51], "serializ": [15, 19, 20, 21, 22, 23, 24, 28, 29], "serialzi": 21, "serv": [103, 104], "server": [15, 89, 90], "servic": 94, "set": [5, 9, 15, 31, 42, 43, 44, 47, 48, 49, 61, 63, 65, 74, 89, 91, 101], "set_dict": 49, "set_metric_nam": 74, "set_working_directori": 42, "setup": [68, 86], "sgd": 83, "shall": 31, "shallow": 31, "shape": 5, "share": [97, 98, 105], "short": [70, 101], "short_str": 67, "shorten": [48, 64, 67], "should": [5, 8, 9, 10, 15, 28, 31, 41, 42, 43, 44, 58, 60, 63, 64, 65, 70, 71, 90, 91, 92, 96, 98, 100, 101, 103, 106], "show": [9, 15, 23, 64, 76, 77, 79, 80, 83, 85, 86, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108], "show_confid": [23, 76, 80], "show_ic": [23, 80], "show_important_onli": 79, "show_unsuccess": 79, "shown": [15, 64, 98, 101, 103], "side": 103, "sidebarlayout": 14, "sigmoid": 86, "signific": 95, "significantli": [91, 96], "similar": 108, "simpl": [67, 70, 101], "simpler": [46, 108], "simpli": [94, 101, 109], "simplif": 5, "simplifi": 65, "sinc": [15, 44, 49, 63, 99, 103], "singl": [15, 97, 106], "situat": 96, "size": [4, 8, 64, 91, 98, 108], "skipkei": 51, "sklearn": [75, 82, 84, 87, 110], "slice": 97, "slider": [60, 97], "slightli": 106, "slow": 89, "smac": [73, 93], "smac3v1": 32, "smac3v1run": 38, "smac3v2": 32, "smac3v2run": 39, "small": 98, "smaller": [9, 24, 67], "smallest": 95, "so": [15, 20, 22, 28, 29, 63, 82, 84, 89, 97, 101], "solut": 91, "solver": 83, "some": [71, 82, 84, 86, 89, 90, 94, 103, 104, 105], "someth": [15, 94, 109], "somewhat": 96, "soon": [43, 103], "sort": [8, 41], "sort_kei": 51, "sourc": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 76, 77, 79, 80, 82, 83, 85, 86, 92, 103], "space": [2, 5, 7, 8, 9, 10, 31, 35, 41, 45, 46, 53, 54, 68, 71, 74, 95, 96, 97, 98, 100, 102, 107], "span": [60, 104], "specif": [9, 23, 24, 26, 28, 29, 31, 49, 64, 67, 73, 86, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106], "specifi": [5, 8, 15, 19, 21, 31, 45, 60, 95, 102], "sphinx": 92, "split": [8, 104], "spread": 100, "st_mtime": 67, "stack": [15, 17, 26], "stage": 86, "stand": 105, "standard": [5, 6, 31, 41, 100], "start": [2, 4, 15, 44, 45, 47, 68, 70, 73, 83, 85, 86, 89, 94, 95, 96, 101, 103], "start_tim": [44, 45, 47, 71, 86], "state": [10, 26], "stati": [31, 86], "static": [15, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 35, 43, 74, 90, 101, 103], "staticmethod": 101, "staticplugin": [15, 19, 21, 22, 23, 24, 26, 29, 101], "statist": [30, 104], "statu": [31, 44, 45, 47, 71, 86, 99, 104], "status": [31, 86], "statuss": 86, "std": 31, "stem": 42, "step": [2, 9, 60, 68, 74, 90, 92, 94, 95, 96], "still": [68, 100], "stop": 98, "store": [4, 31, 63, 68, 73, 74], "str": [2, 5, 8, 9, 10, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 83, 101], "stratifi": 83, "strength": 86, "stride": 86, "string": [15, 31, 42, 46, 48, 49, 51, 54, 59, 60, 64, 67, 83], "string_to_hash": 59, "stripe": 60, "strong": 96, "stronger": 96, "structur": [56, 60, 70, 91, 93], "studi": 74, "style": [48, 55, 64], "styled_plotti": 48, "sub": 86, "submit": 92, "subset": [4, 57, 91], "substitut": 101, "success": [44, 45, 46, 71, 86, 104], "sudo": [94, 109], "suffix": [67, 83], "suggest": [42, 96], "suit": [92, 100], "summari": [99, 104], "super": 86, "superclass": [19, 20, 21, 22, 23, 24, 28, 29, 30], "superior": 106, "support": [5, 7, 9, 31, 33, 37, 38, 39, 71, 74, 75, 94, 98, 100], "support_discret": 9, "suppos": 103, "sure": [89, 90, 92, 94], "surfac": [9, 98], "surrog": [2, 3, 6, 95, 98, 102, 107], "surrogatemodel": 6, "swig": 94, "switch": [42, 98], "symb": 65, "symbol": [18, 24, 65], "symbolic_explan": 18, "symbolicexplan": 24, "symbolicregressor": 65, "sympi": 65, "sympifi": 65, "system": 73, "t": [9, 15, 44, 64, 86], "tab": [29, 104], "tabl": [28, 30, 60, 99], "take": [8, 64, 100, 103, 105], "tanh": [83, 86], "tar": [94, 109], "target": [5, 83, 107], "task": [26, 86], "techniqu": [91, 98], "tell": 99, "tend": 96, "termin": 83, "test": [86, 94], "test_dataload": 86, "test_step": 86, "text": [46, 60, 64], "than": [8, 9, 24, 64, 100, 101, 106, 107], "thei": [8, 31, 93, 97, 99, 100, 104], "them": [15, 20, 22, 28, 29, 30, 31, 64, 71, 82, 84, 90, 92, 93, 98, 105], "therefor": [15, 19, 20, 21, 22, 23, 24, 28, 29, 30, 43, 73, 103], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 76, 77, 78, 79, 80, 82, 83, 85, 86, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109], "think": 92, "thoroughli": 98, "though": 98, "three": [20, 97, 103], "threshold": 96, "through": [31, 70, 93, 96, 97, 101, 104, 105], "throughout": [31, 41, 99], "thrown": [15, 42], "thu": [65, 102], "tick": 64, "ticktext": 64, "tickval": 64, "time": [2, 9, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 41, 44, 45, 47, 67, 68, 70, 83, 85, 86, 91, 93, 95, 97, 98, 101, 103], "timeout": [46, 71, 86], "timestamp": [33, 34, 35, 36, 37, 38, 39, 67, 70], "titl": [15, 23, 93], "to_json": [43, 47], "to_serialized_dict": 68, "to_text": 46, "too": 89, "tool": [1, 8, 71, 72, 75, 82, 84], "toolkit": [32, 33], "top": [60, 95, 101, 102], "torch": [31, 45, 86], "torchmetr": 86, "torchvis": 86, "total": [4, 8, 67, 81, 83, 87, 88, 102, 110], "totensor": 86, "toward": 2, "trace": 96, "traceback": [45, 104], "track": [68, 100], "train": [3, 5, 8, 9, 10, 24, 83, 86, 91, 96, 103, 107], "train_dataload": 86, "train_test_split": 83, "trainer": 86, "training_step": 86, "trajectori": [31, 41], "transform": [5, 42, 73, 86], "transit": 95, "treat": 5, "tree": [2, 4, 8, 10, 19, 21, 31, 95, 102, 103], "trees_total_vari": 4, "trees_variance_fract": 4, "trend": [100, 105], "tri": 104, "trial": [31, 33, 34, 35, 37, 38, 39, 41, 44, 45, 68, 70, 71, 73, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108], "trial_histori": 68, "trial_id": 31, "trial_kei": [31, 41], "triangl": 98, "trigger": 103, "trivial": 74, "true": [4, 5, 8, 9, 15, 31, 42, 43, 49, 51, 58, 60, 63, 64, 71, 79, 80, 83, 86, 94, 96, 98, 101, 105], "try": [90, 94, 95, 104, 109], "tupl": [4, 5, 6, 7, 8, 9, 10, 14, 15, 17, 20, 26, 31, 41, 44, 47, 51, 62, 64, 67], "turn": 50, "tutori": [70, 73, 101, 103], "two": [40, 43, 60, 90, 95, 97, 98, 103, 106, 107, 108], "type": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 86], "typeerror": [7, 31, 42], "typevar": 51, "typic": 96, "u": 101, "uncertainti": [95, 107], "under": [70, 101, 104], "underperform": 100, "understand": [70, 74, 93, 98, 100, 102, 103], "uniform": [71, 85, 86], "uniformfloathyperparamet": [83, 85, 86], "uniformintegerhyperparamet": [83, 86], "union": [2, 4, 8, 9, 10, 11, 14, 15, 24, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 51, 58, 60, 64, 65], "uniqu": [15, 47, 70], "unit": 73, "unittest": 92, "unknown": [7, 15, 46, 67, 71], "unlik": 91, "unsanit": 65, "unsuccess": [104, 105], "until": 96, "up": [15, 17, 26, 31, 48, 61, 91], "updat": [42, 43, 48, 49, 56, 62, 63, 83, 89, 103, 104], "update_dict": 56, "update_group": 42, "update_run": 42, "upon": 103, "upper": [31, 35, 43, 71, 83, 85, 86], "url": [13, 15, 48, 93], "us": [3, 4, 5, 8, 9, 15, 17, 22, 23, 24, 26, 28, 29, 31, 38, 39, 42, 44, 45, 48, 49, 52, 56, 60, 63, 64, 65, 68, 70, 71, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108], "use_cach": 17, "user": [15, 19, 20, 21, 22, 23, 24, 28, 29, 94], "usr": [94, 109], "usual": [67, 92], "util": [1, 3, 4, 8, 9, 10, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 73, 83, 86, 93], "utilitii": 48, "v1": 73, "v2": 73, "v_u_individu": 4, "v_u_tot": 4, "val": 86, "val_acc": 86, "val_dataload": 86, "val_loss": 86, "valid": [9, 15, 40, 86, 98], "validation_step": 86, "valu": [4, 5, 6, 8, 9, 10, 15, 19, 20, 21, 22, 23, 24, 26, 28, 29, 31, 40, 42, 43, 46, 48, 49, 50, 53, 54, 60, 63, 64, 65, 67, 73, 74, 85, 89, 91, 92, 96, 97, 98, 99, 100, 104, 105, 107, 108], "valuabl": 98, "valueerror": [7, 15, 31, 43, 45, 60, 64, 67], "var": [5, 8, 10], "vari": [95, 99, 102], "variabl": [15, 19, 20, 21, 22, 23, 24, 28, 29, 64, 70, 76, 77, 79, 80, 100, 101], "varianc": [4, 5, 8, 10, 102], "variant": 63, "varieti": 93, "variou": [91, 93, 98, 100, 102, 105, 106], "ve": 70, "vector": 10, "vendor": [94, 109], "veri": [96, 97, 103], "verifi": 96, "version": [5, 21, 38, 39, 64, 71, 75, 101], "very_small_numb": 5, "via": [68, 69, 74, 82, 84, 87, 90, 92, 94, 95, 110], "view": [15, 90, 95, 97, 98, 99, 102, 104, 105, 106], "viewabl": 103, "visit": 28, "visual": [12, 16, 18, 19, 20, 21, 22, 25, 27, 28, 29, 30, 74, 93, 97, 98, 99, 100, 102, 103, 105, 107], "wa": [9, 24, 31, 42, 44, 63, 89, 94, 97, 98, 100, 104, 105, 106, 107, 108, 109], "wai": [78, 82, 94, 96, 101, 103], "want": [31, 64, 74, 78, 82, 90, 94, 101], "warn": [65, 83], "wasn": 9, "wb": 74, "we": [70, 71, 75, 86, 92, 94, 98, 101, 102, 103, 104, 105], "weak": 96, "webbrows": 93, "webserv": 94, "weigh": 31, "weight": [86, 91], "well": [3, 7, 31, 40, 41, 42, 48, 49, 53, 64, 70, 75, 96, 98], "were": [31, 40, 45, 96, 97, 99, 104], "weren": 9, "wget": [94, 109], "what": [42, 89, 90, 96, 99, 100, 104, 105, 107, 108], "when": [60, 68, 74, 89, 90, 92, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106], "where": [45, 71, 74, 97, 98, 99, 101, 106], "wherea": 91, "wheter": 31, "whether": [5, 8, 9, 15, 17, 23, 31, 43, 49, 58, 60, 64, 92, 95, 96, 98, 100, 102, 104, 107], "which": [6, 15, 28, 31, 42, 45, 53, 63, 64, 68, 70, 74, 90, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106], "while": [94, 98, 99, 103, 104, 108], "whole": 4, "why": [40, 99, 104], "wide": 93, "width": 86, "window": 94, "wise": 4, "wish": [95, 96, 97, 98, 100, 102, 105, 106, 107, 108], "within": [27, 28, 93, 100, 105], "without": 5, "work": [5, 19, 20, 21, 22, 23, 24, 28, 29, 42, 92, 93, 94, 101, 107, 109], "workaround": 102, "worker": [90, 94], "working_dir": [33, 35, 37, 38, 39], "working_directori": 42, "workshop": 93, "wors": 107, "worst": 43, "would": [73, 92, 103, 104], "wrap": 60, "wrapper": [4, 5, 31], "write": [49, 68, 73], "write_fil": 49, "write_imag": [76, 77, 79, 80], "written": 92, "wrong": 89, "wrote": 101, "wrt": 8, "x": [5, 6, 9, 64, 65, 83, 86, 98, 100, 104, 105, 107, 108], "x0": 65, "x1": 65, "x_test": 83, "x_train": 83, "xzvf": [94, 109], "y": [4, 5, 9, 64, 83, 86, 100, 104, 107, 108], "y_test": 83, "y_train": 83, "ye": [94, 105], "year": 93, "yet": 44, "yield": [53, 83], "you": [15, 64, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 84, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "your": [68, 71, 72, 73, 74, 82, 84, 85, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109], "z": 9, "zero": 8, "zip": [76, 77, 79, 80, 82, 83, 85, 86]}, "titles": ["API References", "deepcave.evaluators", "deepcave.evaluators.ablation", "deepcave.evaluators.epm", "deepcave.evaluators.epm.fanova_forest", "deepcave.evaluators.epm.random_forest", "deepcave.evaluators.epm.random_forest_surrogate", "deepcave.evaluators.epm.utils", "deepcave.evaluators.fanova", "deepcave.evaluators.footprint", "deepcave.evaluators.lpi", "deepcave.layouts", "deepcave.layouts.header", "deepcave.layouts.not_found", "deepcave.layouts.sidebar", "deepcave.plugins", "deepcave.plugins.budget", "deepcave.plugins.dynamic", "deepcave.plugins.hyperparameter", "deepcave.plugins.hyperparameter.ablation_paths", "deepcave.plugins.hyperparameter.configuration_cube", "deepcave.plugins.hyperparameter.importances", "deepcave.plugins.hyperparameter.parallel_coordinates", "deepcave.plugins.hyperparameter.pdp", "deepcave.plugins.hyperparameter.symbolic_explanations", "deepcave.plugins.objective", "deepcave.plugins.static", "deepcave.plugins.summary", "deepcave.plugins.summary.configurations", "deepcave.plugins.summary.footprint", "deepcave.plugins.summary.overview", "deepcave.runs", "deepcave.runs.converters", "deepcave.runs.converters.amltk", "deepcave.runs.converters.bohb", "deepcave.runs.converters.dataframe", "deepcave.runs.converters.deepcave", "deepcave.runs.converters.optuna", "deepcave.runs.converters.smac3v1", "deepcave.runs.converters.smac3v2", "deepcave.runs.exceptions", "deepcave.runs.group", "deepcave.runs.handler", "deepcave.runs.objective", "deepcave.runs.recorder", "deepcave.runs.run", "deepcave.runs.status", "deepcave.runs.trial", "deepcave.utils", "deepcave.utils.cache", "deepcave.utils.cast", "deepcave.utils.compression", "deepcave.utils.configs", "deepcave.utils.configspace", "deepcave.utils.converters", "deepcave.utils.dash", "deepcave.utils.data_structures", "deepcave.utils.docs", "deepcave.utils.files", "deepcave.utils.hash", "deepcave.utils.layout", "deepcave.utils.logs", "deepcave.utils.notification", "deepcave.utils.run_caches", "deepcave.utils.styled_plotty", "deepcave.utils.symbolic_regression", "deepcave.utils.url", "deepcave.utils.util", "AMLTK", "BOHB", "Adding a Converter", "Pandas DataFrame", "DeepCAVE", "Runs and Converters", "Optuna", "SMAC", "Ablation Paths", "Importances", "API", "Parallel Coordinates", "Partial Dependencies", "Computation times", "Examples", "Multi-Layer Perceptron via Sklearn", "Record", "Record Minimal Run", "Multi-Layer Perceptron via PyTorch", "Computation times", "Computation times", "Frequently Asked Questions", "Getting Started", "Glossary", "How to Contribute", "Home", "Installation", "Ablation Paths", "Budget Correlation", "Configuration Cube", "Configuration Footprint", "Configurations", "Cost Over Time", "Adding a Plugin", "Importances", "Displaying Data with Plugins", "Overview", "Parallel Coordinates", "Pareto Front", "Partial Dependencies", "Symbolic Explanations", "Install Redis Server", "Computation times"], "titleterms": {"1": [70, 101], "2": [70, 101], "3": [70, 101], "4": [70, 101], "5": [70, 101], "6": 101, "7": 101, "The": 73, "ablat": [2, 76, 95], "ablation_path": 19, "activ": 101, "ad": [70, 73, 101, 103], "adjust": 101, "amltk": [33, 68], "analysi": 93, "api": [0, 78, 82, 93], "architectur": 93, "ask": 89, "bohb": [34, 69], "broad": 93, "budget": [16, 96], "cach": 49, "cast": 50, "citat": 93, "class": [70, 101], "code": 99, "commit": 92, "comprehens": 93, "compress": 51, "comput": [81, 87, 88, 110], "config": 52, "configspac": 53, "configur": [28, 97, 98, 99, 104], "configuration_cub": 20, "congratul": [70, 101], "contribut": 92, "convert": [32, 33, 34, 35, 36, 37, 38, 39, 54, 70, 73], "coordin": [79, 105], "correl": 96, "cost": 100, "coverag": 98, "creat": [70, 92, 101], "cube": 97, "dash": 55, "data": 103, "data_structur": 56, "datafram": [35, 71], "decid": 101, "deepcav": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72], "depend": [80, 107], "develop": [92, 93], "displai": 103, "doc": 57, "document": [70, 92, 101], "dynam": 17, "epm": [3, 4, 5, 6, 7], "evalu": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "exampl": 82, "except": 40, "explan": 108, "extend": 92, "fanova": 8, "fanova_forest": 4, "featur": 93, "file": 58, "fit": 101, "flexibl": 93, "footprint": [9, 29, 98], "frequent": 89, "front": 106, "function": 101, "get": 90, "glossari": 91, "group": 41, "handler": 42, "hash": 59, "header": 12, "home": 93, "hook": 92, "how": 92, "hyperparamet": [18, 19, 20, 21, 22, 23, 24], "icon": 101, "implement": 70, "import": [21, 77, 102], "inform": 104, "instal": [94, 109], "interact": 93, "interfac": 93, "interpret": [96, 100], "introduct": [70, 101], "layer": [83, 86], "layout": [11, 12, 13, 14, 60, 101], "log": 61, "lpi": 10, "mac": 94, "meta": 104, "method": [70, 102], "minim": 85, "modul": [1, 3, 16, 18, 25, 27, 32, 48], "modular": 93, "more": 90, "multi": [83, 86], "need": 101, "not_found": 13, "notif": 62, "object": [25, 43, 73, 99, 104], "optim": 93, "option": [90, 95, 96, 97, 98, 100, 102, 105, 106, 107, 108], "optuna": [37, 74], "over": 100, "overview": [30, 99, 104], "panda": 71, "parallel": [79, 105], "parallel_coordin": 22, "pareto": 106, "partial": [80, 107], "path": [76, 95], "pdp": 23, "perceptron": [83, 86], "perform": 98, "plot": [98, 105], "plugin": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 101, 103], "pre": 92, "properti": [2, 4, 8, 9, 10, 11, 13, 14, 15, 17, 26, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 63], "pull": 92, "pytorch": 86, "question": 89, "quick": 104, "random_forest": 5, "random_forest_surrog": 6, "record": [44, 82, 84, 85], "redi": [94, 109], "refer": 0, "regist": [70, 101], "relat": 94, "request": 92, "run": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 73, 85, 101], "run_cach": 63, "select": 101, "server": [94, 109], "setup": 92, "sidebar": 14, "sklearn": 83, "smac": 75, "smac3v1": 38, "smac3v2": 39, "space": 104, "start": 90, "static": 26, "statu": 46, "status": 104, "step": [70, 101], "structur": [101, 103], "styled_plotti": 64, "summari": [27, 28, 29, 30], "support": 93, "symbol": 108, "symbolic_explan": 24, "symbolic_regress": 65, "test": 92, "time": [81, 87, 88, 100, 110], "tool": 93, "trial": 47, "type": [101, 103], "understand": 101, "unit": 92, "updat": 92, "url": 66, "us": 105, "util": [7, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "via": [83, 86], "workflow": 92, "your": [70, 101], "yourself": [70, 101]}})