Search.setIndex({"alltitles": {"## Modules": [[1, "modules"], [3, "modules"], [19, "modules"], [21, "modules"], [28, "modules"], [30, "modules"], [35, "modules"], [52, "modules"]], "AMLTK": [[73, null]], "API": [[84, null], [88, "api"]], "API References": [[0, null]], "Ablation Paths": [[82, null], [101, null]], "Adding a Converter": [[75, null], [78, "adding-a-converter"]], "Adding a Plugin": [[107, null], [109, "adding-a-plugin"]], "Adjustment 1: Activate run selection": [[107, "adjustment-1-activate-run-selection"]], "Adjustment 2: Icon": [[107, "adjustment-2-icon"]], "BOHB": [[74, null]], "Broad Optimizer Support": [[99, "broad-optimizer-support"]], "Budget Correlation": [[102, null]], "Citation": [[99, "citation"]], "Code": [[105, "code"]], "Comprehensive Analysis Tools": [[99, "comprehensive-analysis-tools"]], "Computation times": [[87, null], [93, null], [94, null], [116, null]], "Configuration": [[105, "configuration"]], "Configuration Cube": [[103, null]], "Configuration Footprint": [[104, null]], "Configuration Space": [[110, "configuration-space"]], "Configurations": [[105, null]], "Converters": [[78, "converters"]], "Correlation Interpretation": [[102, "correlation-interpretation"]], "Cost Over Time": [[106, null]], "Coverage plot": [[104, "coverage-plot"]], "Create Pull Request": [[98, "create-pull-request"]], "DeepCAVE": [[77, null]], "Developer and API Features": [[99, "developer-and-api-features"]], "Displaying Data with Plugins": [[109, null]], "Examples": [[88, null]], "Extend Unit Tests": [[98, "extend-unit-tests"]], "Features": [[99, "features"]], "Flexible and Modular Architecture": [[99, "flexible-and-modular-architecture"]], "Frequently Asked Questions": [[95, null]], "Getting Started": [[96, null]], "Glossary": [[97, null]], "Home": [[99, null]], "How to Contribute": [[98, null]], "Importance Methods": [[108, "importance-methods"]], "Importances": [[83, null], [108, null]], "Install Redis Server": [[115, null]], "Installation": [[100, null]], "Interactive Interface": [[99, "interactive-interface"]], "Interpretation": [[106, "interpretation"]], "Introduction": [[75, "introduction"], [107, "introduction"]], "Mac Related": [[100, "mac-related"]], "Meta": [[110, "meta"]], "More Options": [[96, "more-options"]], "Multi-Layer Perceptron via PyTorch": [[92, null]], "Multi-Layer Perceptron via Sklearn": [[89, null]], "Multi-Objective Ablation Paths": [[101, "multi-objective-ablation-paths"]], "Multi-Objective Importance": [[108, "multi-objective-importance"]], "Objectives": [[105, "objectives"], [110, "objectives"]], "Options": [[101, "options"], [102, "options"], [103, "options"], [104, "options"], [106, "options"], [108, "options"], [111, "options"], [112, "options"], [113, "options"], [114, "options"]], "Optuna": [[79, null]], "Overview": [[105, "overview"], [110, null]], "Pandas DataFrame": [[76, null]], "Parallel Coordinates": [[85, null], [111, null]], "Pareto Front": [[112, null]], "Partial Dependencies": [[86, null], [113, null]], "Performance plot": [[104, "performance-plot"]], "Plugin Structure": [[109, "plugin-structure"]], "Plugin Types": [[109, "plugin-types"]], "Pre-Commit Hook": [[98, "pre-commit-hook"]], "Properties": [[2, "properties"], [4, "properties"], [8, "properties"], [9, "properties"], [10, "properties"], [11, "properties"], [13, "properties"], [14, "properties"], [16, "properties"], [17, "properties"], [18, "properties"], [20, "properties"], [29, "properties"], [34, "properties"], [36, "properties"], [37, "properties"], [38, "properties"], [39, "properties"], [40, "properties"], [41, "properties"], [42, "properties"], [43, "properties"], [45, "properties"], [46, "properties"], [47, "properties"], [48, "properties"], [49, "properties"], [50, "properties"], [51, "properties"], [68, "properties"]], "Quick Information": [[110, "quick-information"]], "RayTune": [[80, null]], "Record": [[88, "record"], [90, null]], "Record Minimal Run": [[91, null]], "Redis Server": [[100, "id1"]], "Runs and Converters": [[78, null]], "SMAC": [[81, null]], "Setup Development Workflow": [[98, "setup-development-workflow"]], "Statuses": [[110, "statuses"]], "Step 1: Create the converter class": [[75, "step-1-create-the-converter-class"]], "Step 1: Create the plugin class": [[107, "step-1-create-the-plugin-class"]], "Step 2: Register your converter": [[75, "step-2-register-your-converter"]], "Step 2: Register your plugin": [[107, "step-2-register-your-plugin"]], "Step 3: Decide on your plugin type": [[107, "step-3-decide-on-your-plugin-type"]], "Step 3: Implement the methods": [[75, "step-3-implement-the-methods"]], "Step 4: Adjust the functions of your plugin": [[107, "step-4-adjust-the-functions-of-your-plugin"]], "Step 5: Congratulate yourself": [[75, "step-5-congratulate-yourself"]], "Step 5: Document your converter": [[75, "step-5-document-your-converter"]], "Step 5: Fit the plugin to your needs": [[107, "step-5-fit-the-plugin-to-your-needs"]], "Step 6: Document your plugin": [[107, "step-6-document-your-plugin"]], "Step 7: Congratulate yourself": [[107, "step-7-congratulate-yourself"]], "Symbolic Explanations": [[114, null]], "The Run Object": [[78, "the-run-object"]], "Understand the structure of the layout": [[107, "understand-the-structure-of-the-layout"]], "Update Documentation": [[98, "update-documentation"]], "Using the plot": [[111, "using-the-plot"]], "deepcave.evaluators": [[1, null]], "deepcave.evaluators.ablation": [[2, null]], "deepcave.evaluators.epm": [[3, null]], "deepcave.evaluators.epm.fanova_forest": [[4, null]], "deepcave.evaluators.epm.random_forest": [[5, null]], "deepcave.evaluators.epm.random_forest_surrogate": [[6, null]], "deepcave.evaluators.epm.utils": [[7, null]], "deepcave.evaluators.fanova": [[8, null]], "deepcave.evaluators.footprint": [[9, null]], "deepcave.evaluators.lpi": [[10, null]], "deepcave.evaluators.mo_ablation": [[11, null]], "deepcave.evaluators.mo_fanova": [[12, null]], "deepcave.evaluators.mo_lpi": [[13, null]], "deepcave.layouts": [[14, null]], "deepcave.layouts.header": [[15, null]], "deepcave.layouts.not_found": [[16, null]], "deepcave.layouts.sidebar": [[17, null]], "deepcave.plugins": [[18, null]], "deepcave.plugins.budget": [[19, null]], "deepcave.plugins.dynamic": [[20, null]], "deepcave.plugins.hyperparameter": [[21, null]], "deepcave.plugins.hyperparameter.ablation_paths": [[22, null]], "deepcave.plugins.hyperparameter.configuration_cube": [[23, null]], "deepcave.plugins.hyperparameter.importances": [[24, null]], "deepcave.plugins.hyperparameter.parallel_coordinates": [[25, null]], "deepcave.plugins.hyperparameter.pdp": [[26, null]], "deepcave.plugins.hyperparameter.symbolic_explanations": [[27, null]], "deepcave.plugins.objective": [[28, null]], "deepcave.plugins.static": [[29, null]], "deepcave.plugins.summary": [[30, null]], "deepcave.plugins.summary.configurations": [[31, null]], "deepcave.plugins.summary.footprint": [[32, null]], "deepcave.plugins.summary.overview": [[33, null]], "deepcave.runs": [[34, null]], "deepcave.runs.converters": [[35, null]], "deepcave.runs.converters.amltk": [[36, null]], "deepcave.runs.converters.bohb": [[37, null]], "deepcave.runs.converters.dataframe": [[38, null]], "deepcave.runs.converters.deepcave": [[39, null]], "deepcave.runs.converters.optuna": [[40, null]], "deepcave.runs.converters.raytune": [[41, null]], "deepcave.runs.converters.smac3v1": [[42, null]], "deepcave.runs.converters.smac3v2": [[43, null]], "deepcave.runs.exceptions": [[44, null]], "deepcave.runs.group": [[45, null]], "deepcave.runs.handler": [[46, null]], "deepcave.runs.objective": [[47, null]], "deepcave.runs.recorder": [[48, null]], "deepcave.runs.run": [[49, null]], "deepcave.runs.status": [[50, null]], "deepcave.runs.trial": [[51, null]], "deepcave.utils": [[52, null]], "deepcave.utils.cache": [[53, null]], "deepcave.utils.cast": [[54, null]], "deepcave.utils.compression": [[55, null]], "deepcave.utils.configs": [[56, null]], "deepcave.utils.configspace": [[57, null]], "deepcave.utils.converters": [[58, null]], "deepcave.utils.dash": [[59, null]], "deepcave.utils.data_structures": [[60, null]], "deepcave.utils.docs": [[61, null]], "deepcave.utils.files": [[62, null]], "deepcave.utils.hash": [[63, null]], "deepcave.utils.layout": [[64, null]], "deepcave.utils.logs": [[65, null]], "deepcave.utils.multi_objective_importance": [[66, null]], "deepcave.utils.notification": [[67, null]], "deepcave.utils.run_caches": [[68, null]], "deepcave.utils.styled_plotty": [[69, null]], "deepcave.utils.symbolic_regression": [[70, null]], "deepcave.utils.url": [[71, null]], "deepcave.utils.util": [[72, null]]}, "docnames": ["api", "api/deepcave.evaluators", "api/deepcave.evaluators.ablation", "api/deepcave.evaluators.epm", "api/deepcave.evaluators.epm.fanova_forest", "api/deepcave.evaluators.epm.random_forest", "api/deepcave.evaluators.epm.random_forest_surrogate", "api/deepcave.evaluators.epm.utils", "api/deepcave.evaluators.fanova", "api/deepcave.evaluators.footprint", "api/deepcave.evaluators.lpi", "api/deepcave.evaluators.mo_ablation", "api/deepcave.evaluators.mo_fanova", "api/deepcave.evaluators.mo_lpi", "api/deepcave.layouts", "api/deepcave.layouts.header", "api/deepcave.layouts.not_found", "api/deepcave.layouts.sidebar", "api/deepcave.plugins", "api/deepcave.plugins.budget", "api/deepcave.plugins.dynamic", "api/deepcave.plugins.hyperparameter", "api/deepcave.plugins.hyperparameter.ablation_paths", "api/deepcave.plugins.hyperparameter.configuration_cube", "api/deepcave.plugins.hyperparameter.importances", "api/deepcave.plugins.hyperparameter.parallel_coordinates", "api/deepcave.plugins.hyperparameter.pdp", "api/deepcave.plugins.hyperparameter.symbolic_explanations", "api/deepcave.plugins.objective", "api/deepcave.plugins.static", "api/deepcave.plugins.summary", "api/deepcave.plugins.summary.configurations", "api/deepcave.plugins.summary.footprint", "api/deepcave.plugins.summary.overview", "api/deepcave.runs", "api/deepcave.runs.converters", "api/deepcave.runs.converters.amltk", "api/deepcave.runs.converters.bohb", "api/deepcave.runs.converters.dataframe", "api/deepcave.runs.converters.deepcave", "api/deepcave.runs.converters.optuna", "api/deepcave.runs.converters.raytune", "api/deepcave.runs.converters.smac3v1", "api/deepcave.runs.converters.smac3v2", "api/deepcave.runs.exceptions", "api/deepcave.runs.group", "api/deepcave.runs.handler", "api/deepcave.runs.objective", "api/deepcave.runs.recorder", "api/deepcave.runs.run", "api/deepcave.runs.status", "api/deepcave.runs.trial", "api/deepcave.utils", "api/deepcave.utils.cache", "api/deepcave.utils.cast", "api/deepcave.utils.compression", "api/deepcave.utils.configs", "api/deepcave.utils.configspace", "api/deepcave.utils.converters", "api/deepcave.utils.dash", "api/deepcave.utils.data_structures", "api/deepcave.utils.docs", "api/deepcave.utils.files", "api/deepcave.utils.hash", "api/deepcave.utils.layout", "api/deepcave.utils.logs", "api/deepcave.utils.multi_objective_importance", "api/deepcave.utils.notification", "api/deepcave.utils.run_caches", "api/deepcave.utils.styled_plotty", "api/deepcave.utils.symbolic_regression", "api/deepcave.utils.url", "api/deepcave.utils.util", "converters/amltk", "converters/bohb", "converters/custom_converters", "converters/dataframe", "converters/deepcave", "converters/index", "converters/optuna", "converters/raytune", "converters/smac", "examples/api/ablation_paths", "examples/api/importances", "examples/api/index", "examples/api/parallel_coordinates", "examples/api/pdp", "examples/api/sg_execution_times", "examples/index", "examples/record/digits_sklearn", "examples/record/index", "examples/record/minimal", "examples/record/mnist_pytorch", "examples/record/sg_execution_times", "examples/sg_execution_times", "faq", "getting_started", "glossary", "how_to_contribute", "index", "installation", "plugins/ablation_paths", "plugins/budget_correlation", "plugins/configuration_cube", "plugins/configuration_footprint", "plugins/configurations", "plugins/cost_over_time", "plugins/custom_plugins", "plugins/importances", "plugins/index", "plugins/overview", "plugins/parallel_coordinates", "plugins/pareto_front", "plugins/partial_dependencies", "plugins/symbolic_explanations", "redis", "sg_execution_times"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api.rst", "api/deepcave.evaluators.rst", "api/deepcave.evaluators.ablation.rst", "api/deepcave.evaluators.epm.rst", "api/deepcave.evaluators.epm.fanova_forest.rst", "api/deepcave.evaluators.epm.random_forest.rst", "api/deepcave.evaluators.epm.random_forest_surrogate.rst", "api/deepcave.evaluators.epm.utils.rst", "api/deepcave.evaluators.fanova.rst", "api/deepcave.evaluators.footprint.rst", "api/deepcave.evaluators.lpi.rst", "api/deepcave.evaluators.mo_ablation.rst", "api/deepcave.evaluators.mo_fanova.rst", "api/deepcave.evaluators.mo_lpi.rst", "api/deepcave.layouts.rst", "api/deepcave.layouts.header.rst", "api/deepcave.layouts.not_found.rst", "api/deepcave.layouts.sidebar.rst", "api/deepcave.plugins.rst", "api/deepcave.plugins.budget.rst", "api/deepcave.plugins.dynamic.rst", "api/deepcave.plugins.hyperparameter.rst", "api/deepcave.plugins.hyperparameter.ablation_paths.rst", "api/deepcave.plugins.hyperparameter.configuration_cube.rst", "api/deepcave.plugins.hyperparameter.importances.rst", "api/deepcave.plugins.hyperparameter.parallel_coordinates.rst", "api/deepcave.plugins.hyperparameter.pdp.rst", "api/deepcave.plugins.hyperparameter.symbolic_explanations.rst", "api/deepcave.plugins.objective.rst", "api/deepcave.plugins.static.rst", "api/deepcave.plugins.summary.rst", "api/deepcave.plugins.summary.configurations.rst", "api/deepcave.plugins.summary.footprint.rst", "api/deepcave.plugins.summary.overview.rst", "api/deepcave.runs.rst", "api/deepcave.runs.converters.rst", "api/deepcave.runs.converters.amltk.rst", "api/deepcave.runs.converters.bohb.rst", "api/deepcave.runs.converters.dataframe.rst", "api/deepcave.runs.converters.deepcave.rst", "api/deepcave.runs.converters.optuna.rst", "api/deepcave.runs.converters.raytune.rst", "api/deepcave.runs.converters.smac3v1.rst", "api/deepcave.runs.converters.smac3v2.rst", "api/deepcave.runs.exceptions.rst", "api/deepcave.runs.group.rst", "api/deepcave.runs.handler.rst", "api/deepcave.runs.objective.rst", "api/deepcave.runs.recorder.rst", "api/deepcave.runs.run.rst", "api/deepcave.runs.status.rst", "api/deepcave.runs.trial.rst", "api/deepcave.utils.rst", "api/deepcave.utils.cache.rst", "api/deepcave.utils.cast.rst", "api/deepcave.utils.compression.rst", "api/deepcave.utils.configs.rst", "api/deepcave.utils.configspace.rst", "api/deepcave.utils.converters.rst", "api/deepcave.utils.dash.rst", "api/deepcave.utils.data_structures.rst", "api/deepcave.utils.docs.rst", "api/deepcave.utils.files.rst", "api/deepcave.utils.hash.rst", "api/deepcave.utils.layout.rst", "api/deepcave.utils.logs.rst", "api/deepcave.utils.multi_objective_importance.rst", "api/deepcave.utils.notification.rst", "api/deepcave.utils.run_caches.rst", "api/deepcave.utils.styled_plotty.rst", "api/deepcave.utils.symbolic_regression.rst", "api/deepcave.utils.url.rst", "api/deepcave.utils.util.rst", "converters/amltk.rst", "converters/bohb.rst", "converters/custom_converters.rst", "converters/dataframe.rst", "converters/deepcave.rst", "converters/index.rst", "converters/optuna.rst", "converters/raytune.rst", "converters/smac.rst", "examples/api/ablation_paths.rst", "examples/api/importances.rst", "examples/api/index.rst", "examples/api/parallel_coordinates.rst", "examples/api/pdp.rst", "examples/api/sg_execution_times.rst", "examples/index.rst", "examples/record/digits_sklearn.rst", "examples/record/index.rst", "examples/record/minimal.rst", "examples/record/mnist_pytorch.rst", "examples/record/sg_execution_times.rst", "examples/sg_execution_times.rst", "faq.rst", "getting_started.rst", "glossary.rst", "how_to_contribute.rst", "index.rst", "installation.rst", "plugins/ablation_paths.rst", "plugins/budget_correlation.rst", "plugins/configuration_cube.rst", "plugins/configuration_footprint.rst", "plugins/configurations.rst", "plugins/cost_over_time.rst", "plugins/custom_plugins.rst", "plugins/importances.rst", "plugins/index.rst", "plugins/overview.rst", "plugins/parallel_coordinates.rst", "plugins/pareto_front.rst", "plugins/partial_dependencies.rst", "plugins/symbolic_explanations.rst", "redis.rst", "sg_execution_times.rst"], "indexentries": {"__call__() (deepcave.layouts.header.headerlayout method)": [[15, "deepcave.layouts.header.HeaderLayout.__call__", false]], "__call__() (deepcave.layouts.layout method)": [[14, "deepcave.layouts.Layout.__call__", false]], "__call__() (deepcave.layouts.not_found.notfoundlayout method)": [[16, "deepcave.layouts.not_found.NotFoundLayout.__call__", false]], "__call__() (deepcave.layouts.sidebar.sidebarlayout method)": [[17, "deepcave.layouts.sidebar.SidebarLayout.__call__", false]], "__call__() (deepcave.plugins.dynamic.dynamicplugin method)": [[20, "deepcave.plugins.dynamic.DynamicPlugin.__call__", false]], "__call__() (deepcave.plugins.plugin method)": [[18, "deepcave.plugins.Plugin.__call__", false]], "__call__() (deepcave.plugins.static.staticplugin method)": [[29, "deepcave.plugins.static.StaticPlugin.__call__", false]], "__eq__() (deepcave.runs.objective.objective method)": [[47, "deepcave.runs.objective.Objective.__eq__", false]], "__iter__() (deepcave.runs.group.group method)": [[45, "deepcave.runs.group.Group.__iter__", false]], "__post_init__() (deepcave.runs.objective.objective method)": [[47, "deepcave.runs.objective.Objective.__post_init__", false]], "__post_init__() (deepcave.runs.trial.trial method)": [[51, "deepcave.runs.trial.Trial.__post_init__", false]], "ablation (class in deepcave.evaluators.ablation)": [[2, "deepcave.evaluators.ablation.Ablation", false]], "ablation() (deepcave.evaluators.mo_ablation.moablation method)": [[11, "deepcave.evaluators.mo_ablation.MOAblation.ablation", false]], "ablationpaths (class in deepcave.plugins.hyperparameter.ablation_paths)": [[22, "deepcave.plugins.hyperparameter.ablation_paths.AblationPaths", false]], "abstractrun (class in deepcave.runs)": [[34, "deepcave.runs.AbstractRun", false]], "add() (deepcave.runs.run.run method)": [[49, "deepcave.runs.run.Run.add", false]], "add_run() (deepcave.runs.handler.runhandler method)": [[46, "deepcave.runs.handler.RunHandler.add_run", false]], "alert() (in module deepcave.utils.dash)": [[59, "deepcave.utils.dash.alert", false]], "all_runs (deepcave.plugins.plugin property)": [[18, "deepcave.plugins.Plugin.all_runs", false]], "amltkrun (class in deepcave.runs.converters.amltk)": [[36, "deepcave.runs.converters.amltk.AMLTKRun", false]], "bo (bayesian optimization)": [[97, "term-BO-Bayesian-Optimization", true]], "bohbrun (class in deepcave.runs.converters.bohb)": [[37, "deepcave.runs.converters.bohb.BOHBRun", false]], "budget": [[97, "term-Budget", true]], "cache (class in deepcave.utils.cache)": [[53, "deepcave.utils.cache.Cache", false]], "calc_one_weighting() (deepcave.evaluators.mo_lpi.molpi method)": [[13, "deepcave.evaluators.mo_lpi.MOLPI.calc_one_weighting", false]], "calculate() (deepcave.evaluators.ablation.ablation method)": [[2, "deepcave.evaluators.ablation.Ablation.calculate", false]], "calculate() (deepcave.evaluators.fanova.fanova method)": [[8, "deepcave.evaluators.fanova.fANOVA.calculate", false]], "calculate() (deepcave.evaluators.footprint.footprint method)": [[9, "deepcave.evaluators.footprint.Footprint.calculate", false]], "calculate() (deepcave.evaluators.lpi.lpi method)": [[10, "deepcave.evaluators.lpi.LPI.calculate", false]], "calculate() (deepcave.evaluators.mo_ablation.moablation method)": [[11, "deepcave.evaluators.mo_ablation.MOAblation.calculate", false]], "calculate() (deepcave.evaluators.mo_fanova.mofanova method)": [[12, "deepcave.evaluators.mo_fanova.MOfANOVA.calculate", false]], "calculate() (deepcave.evaluators.mo_lpi.molpi method)": [[13, "deepcave.evaluators.mo_lpi.MOLPI.calculate", false]], "calculate_ablation_path() (deepcave.evaluators.mo_ablation.moablation method)": [[11, "deepcave.evaluators.mo_ablation.MOAblation.calculate_ablation_path", false]], "check_equality() (in module deepcave.runs)": [[34, "deepcave.runs.check_equality", false]], "check_run_compatibility() (deepcave.plugins.plugin static method)": [[18, "deepcave.plugins.Plugin.check_run_compatibility", false]], "check_runs_compatibility() (deepcave.plugins.plugin method)": [[18, "deepcave.plugins.Plugin.check_runs_compatibility", false]], "clear() (deepcave.utils.cache.cache method)": [[53, "deepcave.utils.cache.Cache.clear", false]], "clear() (deepcave.utils.run_caches.runcaches method)": [[68, "deepcave.utils.run_caches.RunCaches.clear", false]], "clear_run() (deepcave.utils.run_caches.runcaches method)": [[68, "deepcave.utils.run_caches.RunCaches.clear_run", false]], "compute_marginals() (deepcave.evaluators.epm.fanova_forest.fanovaforest method)": [[4, "deepcave.evaluators.epm.fanova_forest.FanovaForest.compute_marginals", false]], "config_to_tuple() (in module deepcave.utils.util)": [[72, "deepcave.utils.util.config_to_tuple", false]], "configuration": [[97, "term-Configuration", true]], "configurationcube (class in deepcave.plugins.hyperparameter.configuration_cube)": [[23, "deepcave.plugins.hyperparameter.configuration_cube.ConfigurationCube", false]], "configurations (class in deepcave.plugins.summary.configurations)": [[31, "deepcave.plugins.summary.configurations.Configurations", false]], "convert_symb() (in module deepcave.utils.symbolic_regression)": [[70, "deepcave.utils.symbolic_regression.convert_symb", false]], "create_table() (in module deepcave.utils.layout)": [[64, "deepcave.utils.layout.create_table", false]], "create_url() (in module deepcave.utils.url)": [[71, "deepcave.utils.url.create_url", false]], "custom_round() (in module deepcave.utils.util)": [[72, "deepcave.utils.util.custom_round", false]], "dataframerun (class in deepcave.runs.converters.dataframe)": [[38, "deepcave.runs.converters.dataframe.DataFrameRun", false]], "deepcave.evaluators": [[1, "module-deepcave.evaluators", false]], "deepcave.evaluators.ablation": [[2, "module-deepcave.evaluators.ablation", false]], "deepcave.evaluators.epm": [[3, "module-deepcave.evaluators.epm", false]], "deepcave.evaluators.epm.fanova_forest": [[4, "module-deepcave.evaluators.epm.fanova_forest", false]], "deepcave.evaluators.epm.random_forest": [[5, "module-deepcave.evaluators.epm.random_forest", false]], "deepcave.evaluators.epm.random_forest_surrogate": [[6, "module-deepcave.evaluators.epm.random_forest_surrogate", false]], "deepcave.evaluators.epm.utils": [[7, "module-deepcave.evaluators.epm.utils", false]], "deepcave.evaluators.fanova": [[8, "module-deepcave.evaluators.fanova", false]], "deepcave.evaluators.footprint": [[9, "module-deepcave.evaluators.footprint", false]], "deepcave.evaluators.lpi": [[10, "module-deepcave.evaluators.lpi", false]], "deepcave.evaluators.mo_ablation": [[11, "module-deepcave.evaluators.mo_ablation", false]], "deepcave.evaluators.mo_fanova": [[12, "module-deepcave.evaluators.mo_fanova", false]], "deepcave.evaluators.mo_lpi": [[13, "module-deepcave.evaluators.mo_lpi", false]], "deepcave.layouts": [[14, "module-deepcave.layouts", false]], "deepcave.layouts.header": [[15, "module-deepcave.layouts.header", false]], "deepcave.layouts.not_found": [[16, "module-deepcave.layouts.not_found", false]], "deepcave.layouts.sidebar": [[17, "module-deepcave.layouts.sidebar", false]], "deepcave.plugins": [[18, "module-deepcave.plugins", false]], "deepcave.plugins.budget": [[19, "module-deepcave.plugins.budget", false]], "deepcave.plugins.dynamic": [[20, "module-deepcave.plugins.dynamic", false]], "deepcave.plugins.hyperparameter": [[21, "module-deepcave.plugins.hyperparameter", false]], "deepcave.plugins.hyperparameter.ablation_paths": [[22, "module-deepcave.plugins.hyperparameter.ablation_paths", false]], "deepcave.plugins.hyperparameter.configuration_cube": [[23, "module-deepcave.plugins.hyperparameter.configuration_cube", false]], "deepcave.plugins.hyperparameter.importances": [[24, "module-deepcave.plugins.hyperparameter.importances", false]], "deepcave.plugins.hyperparameter.parallel_coordinates": [[25, "module-deepcave.plugins.hyperparameter.parallel_coordinates", false]], "deepcave.plugins.hyperparameter.pdp": [[26, "module-deepcave.plugins.hyperparameter.pdp", false]], "deepcave.plugins.hyperparameter.symbolic_explanations": [[27, "module-deepcave.plugins.hyperparameter.symbolic_explanations", false]], "deepcave.plugins.objective": [[28, "module-deepcave.plugins.objective", false]], "deepcave.plugins.static": [[29, "module-deepcave.plugins.static", false]], "deepcave.plugins.summary": [[30, "module-deepcave.plugins.summary", false]], "deepcave.plugins.summary.configurations": [[31, "module-deepcave.plugins.summary.configurations", false]], "deepcave.plugins.summary.footprint": [[32, "module-deepcave.plugins.summary.footprint", false]], "deepcave.plugins.summary.overview": [[33, "module-deepcave.plugins.summary.overview", false]], "deepcave.runs": [[34, "module-deepcave.runs", false]], "deepcave.runs.converters": [[35, "module-deepcave.runs.converters", false]], "deepcave.runs.converters.amltk": [[36, "module-deepcave.runs.converters.amltk", false]], "deepcave.runs.converters.bohb": [[37, "module-deepcave.runs.converters.bohb", false]], "deepcave.runs.converters.dataframe": [[38, "module-deepcave.runs.converters.dataframe", false]], "deepcave.runs.converters.deepcave": [[39, "module-deepcave.runs.converters.deepcave", false]], "deepcave.runs.converters.optuna": [[40, "module-deepcave.runs.converters.optuna", false]], "deepcave.runs.converters.raytune": [[41, "module-deepcave.runs.converters.raytune", false]], "deepcave.runs.converters.smac3v1": [[42, "module-deepcave.runs.converters.smac3v1", false]], "deepcave.runs.converters.smac3v2": [[43, "module-deepcave.runs.converters.smac3v2", false]], "deepcave.runs.exceptions": [[44, "module-deepcave.runs.exceptions", false]], "deepcave.runs.group": [[45, "module-deepcave.runs.group", false]], "deepcave.runs.handler": [[46, "module-deepcave.runs.handler", false]], "deepcave.runs.objective": [[47, "module-deepcave.runs.objective", false]], "deepcave.runs.recorder": [[48, "module-deepcave.runs.recorder", false]], "deepcave.runs.run": [[49, "module-deepcave.runs.run", false]], "deepcave.runs.status": [[50, "module-deepcave.runs.status", false]], "deepcave.runs.trial": [[51, "module-deepcave.runs.trial", false]], "deepcave.utils": [[52, "module-deepcave.utils", false]], "deepcave.utils.cache": [[53, "module-deepcave.utils.cache", false]], "deepcave.utils.cast": [[54, "module-deepcave.utils.cast", false]], "deepcave.utils.compression": [[55, "module-deepcave.utils.compression", false]], "deepcave.utils.configs": [[56, "module-deepcave.utils.configs", false]], "deepcave.utils.configspace": [[57, "module-deepcave.utils.configspace", false]], "deepcave.utils.converters": [[58, "module-deepcave.utils.converters", false]], "deepcave.utils.dash": [[59, "module-deepcave.utils.dash", false]], "deepcave.utils.data_structures": [[60, "module-deepcave.utils.data_structures", false]], "deepcave.utils.docs": [[61, "module-deepcave.utils.docs", false]], "deepcave.utils.files": [[62, "module-deepcave.utils.files", false]], "deepcave.utils.hash": [[63, "module-deepcave.utils.hash", false]], "deepcave.utils.layout": [[64, "module-deepcave.utils.layout", false]], "deepcave.utils.logs": [[65, "module-deepcave.utils.logs", false]], "deepcave.utils.multi_objective_importance": [[66, "module-deepcave.utils.multi_objective_importance", false]], "deepcave.utils.notification": [[67, "module-deepcave.utils.notification", false]], "deepcave.utils.run_caches": [[68, "module-deepcave.utils.run_caches", false]], "deepcave.utils.styled_plotty": [[69, "module-deepcave.utils.styled_plotty", false]], "deepcave.utils.symbolic_regression": [[70, "module-deepcave.utils.symbolic_regression", false]], "deepcave.utils.url": [[71, "module-deepcave.utils.url", false]], "deepcave.utils.util": [[72, "module-deepcave.utils.util", false]], "deepcaverun (class in deepcave.runs.converters.deepcave)": [[39, "deepcave.runs.converters.deepcave.DeepCAVERun", false]], "default() (deepcave.utils.compression.encoder method)": [[55, "deepcave.utils.compression.Encoder.default", false]], "deserialize() (in module deepcave.utils.compression)": [[55, "deepcave.utils.compression.deserialize", false]], "dynamicplugin (class in deepcave.plugins.dynamic)": [[20, "deepcave.plugins.dynamic.DynamicPlugin", false]], "empty() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.empty", false]], "encode_config() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.encode_config", false]], "encode_configs() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.encode_configs", false]], "encoder (class in deepcave.utils.compression)": [[55, "deepcave.utils.compression.Encoder", false]], "end() (deepcave.runs.recorder.recorder method)": [[48, "deepcave.runs.recorder.Recorder.end", false]], "exists() (deepcave.runs.run.run method)": [[49, "deepcave.runs.run.Run.exists", false]], "exp() (in module deepcave.utils.symbolic_regression)": [[70, "deepcave.utils.symbolic_regression.exp", false]], "extract_config() (in module deepcave.utils.converters)": [[58, "deepcave.utils.converters.extract_config", false]], "extract_costs() (in module deepcave.utils.converters)": [[58, "deepcave.utils.converters.extract_costs", false]], "extract_value() (in module deepcave.utils.converters)": [[58, "deepcave.utils.converters.extract_value", false]], "fanova (class in deepcave.evaluators.fanova)": [[8, "deepcave.evaluators.fanova.fANOVA", false]], "fanovaforest (class in deepcave.evaluators.epm.fanova_forest)": [[4, "deepcave.evaluators.epm.fanova_forest.FanovaForest", false]], "file_to_hash() (in module deepcave.utils.hash)": [[63, "deepcave.utils.hash.file_to_hash", false]], "fit() (deepcave.evaluators.epm.random_forest_surrogate.randomforestsurrogate method)": [[6, "deepcave.evaluators.epm.random_forest_surrogate.RandomForestSurrogate.fit", false]], "flash() (in module deepcave.utils.dash)": [[59, "deepcave.utils.dash.flash", false]], "footprint (class in deepcave.evaluators.footprint)": [[9, "deepcave.evaluators.footprint.Footprint", false]], "footprint (class in deepcave.plugins.summary.footprint)": [[32, "deepcave.plugins.summary.footprint.FootPrint", false]], "from_json() (deepcave.runs.objective.objective static method)": [[47, "deepcave.runs.objective.Objective.from_json", false]], "from_path() (deepcave.runs.converters.amltk.amltkrun class method)": [[36, "deepcave.runs.converters.amltk.AMLTKRun.from_path", false]], "from_path() (deepcave.runs.converters.bohb.bohbrun class method)": [[37, "deepcave.runs.converters.bohb.BOHBRun.from_path", false]], "from_path() (deepcave.runs.converters.dataframe.dataframerun class method)": [[38, "deepcave.runs.converters.dataframe.DataFrameRun.from_path", false]], "from_path() (deepcave.runs.converters.deepcave.deepcaverun class method)": [[39, "deepcave.runs.converters.deepcave.DeepCAVERun.from_path", false]], "from_path() (deepcave.runs.converters.optuna.optunarun class method)": [[40, "deepcave.runs.converters.optuna.OptunaRun.from_path", false]], "from_path() (deepcave.runs.converters.raytune.raytunerun class method)": [[41, "deepcave.runs.converters.raytune.RayTuneRun.from_path", false]], "from_path() (deepcave.runs.converters.smac3v1.smac3v1run class method)": [[42, "deepcave.runs.converters.smac3v1.SMAC3v1Run.from_path", false]], "from_path() (deepcave.runs.converters.smac3v2.smac3v2run class method)": [[43, "deepcave.runs.converters.smac3v2.SMAC3v2Run.from_path", false]], "from_path() (deepcave.runs.run.run class method)": [[49, "deepcave.runs.run.Run.from_path", false]], "generate_config_code() (in module deepcave.utils.styled_plotty)": [[69, "deepcave.utils.styled_plotty.generate_config_code", false]], "generate_inputs() (deepcave.plugins.plugin method)": [[18, "deepcave.plugins.Plugin.generate_inputs", false]], "generate_outputs() (deepcave.plugins.plugin class method)": [[18, "deepcave.plugins.Plugin.generate_outputs", false]], "get() (deepcave.utils.cache.cache method)": [[53, "deepcave.utils.cache.Cache.get", false]], "get() (deepcave.utils.run_caches.runcaches method)": [[68, "deepcave.utils.run_caches.RunCaches.get", false]], "get_ablation_improvements() (deepcave.evaluators.ablation.ablation method)": [[2, "deepcave.evaluators.ablation.Ablation.get_ablation_improvements", false]], "get_ablation_performances() (deepcave.evaluators.ablation.ablation method)": [[2, "deepcave.evaluators.ablation.Ablation.get_ablation_performances", false]], "get_all_costs() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_all_costs", false]], "get_available_run_paths() (deepcave.runs.handler.runhandler method)": [[46, "deepcave.runs.handler.RunHandler.get_available_run_paths", false]], "get_avg_costs() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_avg_costs", false]], "get_base_url() (deepcave.plugins.plugin class method)": [[18, "deepcave.plugins.Plugin.get_base_url", false]], "get_budget() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_budget", false]], "get_budget_ids() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_budget_ids", false]], "get_budgets() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_budgets", false]], "get_checklist_options() (in module deepcave.utils.layout)": [[64, "deepcave.utils.layout.get_checklist_options", false]], "get_color() (in module deepcave.utils.styled_plotty)": [[69, "deepcave.utils.styled_plotty.get_color", false]], "get_config() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_config", false]], "get_config_id() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_config_id", false]], "get_configs() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_configs", false]], "get_discrete_heatmap() (in module deepcave.utils.styled_plotty)": [[69, "deepcave.utils.styled_plotty.get_discrete_heatmap", false]], "get_encoded_data() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_encoded_data", false]], "get_filter_layout() (deepcave.plugins.hyperparameter.ablation_paths.ablationpaths static method)": [[22, "deepcave.plugins.hyperparameter.ablation_paths.AblationPaths.get_filter_layout", false]], "get_filter_layout() (deepcave.plugins.hyperparameter.configuration_cube.configurationcube static method)": [[23, "deepcave.plugins.hyperparameter.configuration_cube.ConfigurationCube.get_filter_layout", false]], "get_filter_layout() (deepcave.plugins.hyperparameter.importances.importances static method)": [[24, "deepcave.plugins.hyperparameter.importances.Importances.get_filter_layout", false]], "get_filter_layout() (deepcave.plugins.hyperparameter.parallel_coordinates.parallelcoordinates static method)": [[25, "deepcave.plugins.hyperparameter.parallel_coordinates.ParallelCoordinates.get_filter_layout", false]], "get_filter_layout() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[26, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.get_filter_layout", false]], "get_filter_layout() (deepcave.plugins.plugin static method)": [[18, "deepcave.plugins.Plugin.get_filter_layout", false]], "get_filter_layout() (deepcave.plugins.summary.footprint.footprint static method)": [[32, "deepcave.plugins.summary.footprint.FootPrint.get_filter_layout", false]], "get_function_set() (in module deepcave.utils.symbolic_regression)": [[70, "deepcave.utils.symbolic_regression.get_function_set", false]], "get_groups() (deepcave.runs.handler.runhandler method)": [[46, "deepcave.runs.handler.RunHandler.get_groups", false]], "get_highest_budget() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_highest_budget", false]], "get_hovertext_from_config() (in module deepcave.utils.styled_plotty)": [[69, "deepcave.utils.styled_plotty.get_hovertext_from_config", false]], "get_hyperparameter_ticks() (in module deepcave.utils.styled_plotty)": [[69, "deepcave.utils.styled_plotty.get_hyperparameter_ticks", false]], "get_hyperparameter_ticks_from_values() (in module deepcave.utils.styled_plotty)": [[69, "deepcave.utils.styled_plotty.get_hyperparameter_ticks_from_values", false]], "get_importances() (deepcave.evaluators.fanova.fanova method)": [[8, "deepcave.evaluators.fanova.fANOVA.get_importances", false]], "get_importances() (deepcave.evaluators.lpi.lpi method)": [[10, "deepcave.evaluators.lpi.LPI.get_importances", false]], "get_importances() (deepcave.evaluators.mo_ablation.moablation method)": [[11, "deepcave.evaluators.mo_ablation.MOAblation.get_importances", false]], "get_importances_() (deepcave.evaluators.mo_fanova.mofanova method)": [[12, "deepcave.evaluators.mo_fanova.MOfANOVA.get_importances_", false]], "get_importances_() (deepcave.evaluators.mo_lpi.molpi method)": [[13, "deepcave.evaluators.mo_lpi.MOLPI.get_importances_", false]], "get_incumbent() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_incumbent", false]], "get_input_layout() (deepcave.plugins.hyperparameter.ablation_paths.ablationpaths static method)": [[22, "deepcave.plugins.hyperparameter.ablation_paths.AblationPaths.get_input_layout", false]], "get_input_layout() (deepcave.plugins.hyperparameter.configuration_cube.configurationcube static method)": [[23, "deepcave.plugins.hyperparameter.configuration_cube.ConfigurationCube.get_input_layout", false]], "get_input_layout() (deepcave.plugins.hyperparameter.importances.importances static method)": [[24, "deepcave.plugins.hyperparameter.importances.Importances.get_input_layout", false]], "get_input_layout() (deepcave.plugins.hyperparameter.parallel_coordinates.parallelcoordinates static method)": [[25, "deepcave.plugins.hyperparameter.parallel_coordinates.ParallelCoordinates.get_input_layout", false]], "get_input_layout() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[26, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.get_input_layout", false]], "get_input_layout() (deepcave.plugins.hyperparameter.symbolic_explanations.symbolicexplanations static method)": [[27, "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations.get_input_layout", false]], "get_input_layout() (deepcave.plugins.plugin static method)": [[18, "deepcave.plugins.Plugin.get_input_layout", false]], "get_input_layout() (deepcave.plugins.summary.configurations.configurations static method)": [[31, "deepcave.plugins.summary.configurations.Configurations.get_input_layout", false]], "get_input_layout() (deepcave.plugins.summary.footprint.footprint static method)": [[32, "deepcave.plugins.summary.footprint.FootPrint.get_input_layout", false]], "get_internal_id() (deepcave.plugins.plugin method)": [[18, "deepcave.plugins.Plugin.get_internal_id", false]], "get_internal_input_id() (deepcave.plugins.plugin method)": [[18, "deepcave.plugins.Plugin.get_internal_input_id", false]], "get_internal_output_id() (deepcave.plugins.plugin method)": [[18, "deepcave.plugins.Plugin.get_internal_output_id", false]], "get_key() (deepcave.runs.trial.trial method)": [[51, "deepcave.runs.trial.Trial.get_key", false]], "get_latest() (deepcave.utils.notification.notification method)": [[67, "deepcave.utils.notification.Notification.get_latest", false]], "get_latest_change() (in module deepcave.utils.util)": [[72, "deepcave.utils.util.get_latest_change", false]], "get_leaf_values() (deepcave.evaluators.epm.random_forest.randomforest method)": [[5, "deepcave.evaluators.epm.random_forest.RandomForest.get_leaf_values", false]], "get_link() (deepcave.plugins.summary.configurations.configurations static method)": [[31, "deepcave.plugins.summary.configurations.Configurations.get_link", false]], "get_logger() (in module deepcave.utils.logs)": [[65, "deepcave.utils.logs.get_logger", false]], "get_meta() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_meta", false]], "get_model() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_model", false]], "get_model() (deepcave.runs.group.group method)": [[45, "deepcave.runs.group.Group.get_model", false]], "get_new_config_id() (deepcave.runs.group.group method)": [[45, "deepcave.runs.group.Group.get_new_config_id", false]], "get_num_configs() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_num_configs", false]], "get_objective() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_objective", false]], "get_objective_id() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_objective_id", false]], "get_objective_ids() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_objective_ids", false]], "get_objective_name() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_objective_name", false]], "get_objective_names() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_objective_names", false]], "get_objectives() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_objectives", false]], "get_origin() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_origin", false]], "get_original_config_id() (deepcave.runs.group.group method)": [[45, "deepcave.runs.group.Group.get_original_config_id", false]], "get_original_run() (deepcave.runs.group.group method)": [[45, "deepcave.runs.group.Group.get_original_run", false]], "get_output_layout() (deepcave.plugins.hyperparameter.ablation_paths.ablationpaths static method)": [[22, "deepcave.plugins.hyperparameter.ablation_paths.AblationPaths.get_output_layout", false]], "get_output_layout() (deepcave.plugins.hyperparameter.configuration_cube.configurationcube static method)": [[23, "deepcave.plugins.hyperparameter.configuration_cube.ConfigurationCube.get_output_layout", false]], "get_output_layout() (deepcave.plugins.hyperparameter.importances.importances static method)": [[24, "deepcave.plugins.hyperparameter.importances.Importances.get_output_layout", false]], "get_output_layout() (deepcave.plugins.hyperparameter.parallel_coordinates.parallelcoordinates static method)": [[25, "deepcave.plugins.hyperparameter.parallel_coordinates.ParallelCoordinates.get_output_layout", false]], "get_output_layout() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[26, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.get_output_layout", false]], "get_output_layout() (deepcave.plugins.hyperparameter.symbolic_explanations.symbolicexplanations static method)": [[27, "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations.get_output_layout", false]], "get_output_layout() (deepcave.plugins.plugin static method)": [[18, "deepcave.plugins.Plugin.get_output_layout", false]], "get_output_layout() (deepcave.plugins.summary.configurations.configurations static method)": [[31, "deepcave.plugins.summary.configurations.Configurations.get_output_layout", false]], "get_output_layout() (deepcave.plugins.summary.footprint.footprint static method)": [[32, "deepcave.plugins.summary.footprint.FootPrint.get_output_layout", false]], "get_output_layout() (deepcave.plugins.summary.overview.overview static method)": [[33, "deepcave.plugins.summary.overview.Overview.get_output_layout", false]], "get_pdp_figure() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[26, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.get_pdp_figure", false]], "get_points() (deepcave.evaluators.footprint.footprint method)": [[9, "deepcave.evaluators.footprint.Footprint.get_points", false]], "get_radio_options() (in module deepcave.utils.layout)": [[64, "deepcave.utils.layout.get_radio_options", false]], "get_random_string() (in module deepcave.utils.util)": [[72, "deepcave.utils.util.get_random_string", false]], "get_run() (deepcave.runs.handler.runhandler method)": [[46, "deepcave.runs.handler.RunHandler.get_run", false]], "get_run_input_layout() (deepcave.plugins.plugin static method)": [[18, "deepcave.plugins.Plugin.get_run_input_layout", false]], "get_run_name() (deepcave.runs.handler.runhandler method)": [[46, "deepcave.runs.handler.RunHandler.get_run_name", false]], "get_runs() (deepcave.runs.group.group method)": [[45, "deepcave.runs.group.Group.get_runs", false]], "get_runs() (deepcave.runs.handler.runhandler method)": [[46, "deepcave.runs.handler.RunHandler.get_runs", false]], "get_seeds() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_seeds", false]], "get_select_options() (in module deepcave.utils.layout)": [[64, "deepcave.utils.layout.get_select_options", false]], "get_selected_groups() (deepcave.runs.handler.runhandler method)": [[46, "deepcave.runs.handler.RunHandler.get_selected_groups", false]], "get_selected_run_names() (deepcave.runs.handler.runhandler method)": [[46, "deepcave.runs.handler.RunHandler.get_selected_run_names", false]], "get_selected_run_paths() (deepcave.runs.handler.runhandler method)": [[46, "deepcave.runs.handler.RunHandler.get_selected_run_paths", false]], "get_selected_runs() (deepcave.plugins.plugin method)": [[18, "deepcave.plugins.Plugin.get_selected_runs", false]], "get_slider_marks() (in module deepcave.utils.layout)": [[64, "deepcave.utils.layout.get_slider_marks", false]], "get_status() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_status", false]], "get_surface() (deepcave.evaluators.footprint.footprint method)": [[9, "deepcave.evaluators.footprint.Footprint.get_surface", false]], "get_trajectory() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_trajectory", false]], "get_trajectory() (deepcave.runs.group.group method)": [[45, "deepcave.runs.group.Group.get_trajectory", false]], "get_trial() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_trial", false]], "get_trial_key() (deepcave.runs.abstractrun static method)": [[34, "deepcave.runs.AbstractRun.get_trial_key", false]], "get_trials() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.get_trials", false]], "get_types() (in module deepcave.evaluators.epm.utils)": [[7, "deepcave.evaluators.epm.utils.get_types", false]], "get_weightings() (in module deepcave.utils.multi_objective_importance)": [[66, "deepcave.utils.multi_objective_importance.get_weightings", false]], "get_working_directory() (deepcave.runs.handler.runhandler method)": [[46, "deepcave.runs.handler.RunHandler.get_working_directory", false]], "get_worst_value() (deepcave.runs.objective.objective method)": [[47, "deepcave.runs.objective.Objective.get_worst_value", false]], "group (class in deepcave.runs.group)": [[45, "deepcave.runs.group.Group", false]], "groups (deepcave.plugins.plugin property)": [[18, "deepcave.plugins.Plugin.groups", false]], "has() (deepcave.utils.cache.cache method)": [[53, "deepcave.utils.cache.Cache.has", false]], "hash (deepcave.runs.abstractrun property)": [[34, "deepcave.runs.AbstractRun.hash", false]], "hash (deepcave.runs.converters.amltk.amltkrun property)": [[36, "deepcave.runs.converters.amltk.AMLTKRun.hash", false]], "hash (deepcave.runs.converters.bohb.bohbrun property)": [[37, "deepcave.runs.converters.bohb.BOHBRun.hash", false]], "hash (deepcave.runs.converters.dataframe.dataframerun property)": [[38, "deepcave.runs.converters.dataframe.DataFrameRun.hash", false]], "hash (deepcave.runs.converters.deepcave.deepcaverun property)": [[39, "deepcave.runs.converters.deepcave.DeepCAVERun.hash", false]], "hash (deepcave.runs.converters.optuna.optunarun property)": [[40, "deepcave.runs.converters.optuna.OptunaRun.hash", false]], "hash (deepcave.runs.converters.raytune.raytunerun property)": [[41, "deepcave.runs.converters.raytune.RayTuneRun.hash", false]], "hash (deepcave.runs.converters.smac3v1.smac3v1run property)": [[42, "deepcave.runs.converters.smac3v1.SMAC3v1Run.hash", false]], "hash (deepcave.runs.converters.smac3v2.smac3v2run property)": [[43, "deepcave.runs.converters.smac3v2.SMAC3v2Run.hash", false]], "hash (deepcave.runs.group.group property)": [[45, "deepcave.runs.group.Group.hash", false]], "headerlayout (class in deepcave.layouts.header)": [[15, "deepcave.layouts.header.HeaderLayout", false]], "help_button() (in module deepcave.utils.layout)": [[64, "deepcave.utils.layout.help_button", false]], "hex_to_rgb() (in module deepcave.utils.styled_plotty)": [[69, "deepcave.utils.styled_plotty.hex_to_rgb", false]], "hyperparameter": [[97, "term-Hyperparameter", true]], "id (deepcave.runs.abstractrun property)": [[34, "deepcave.runs.AbstractRun.id", false]], "id (deepcave.runs.group.group property)": [[45, "deepcave.runs.group.Group.id", false]], "id (deepcave.runs.run.run property)": [[49, "deepcave.runs.run.Run.id", false]], "importances (class in deepcave.plugins.hyperparameter.importances)": [[24, "deepcave.plugins.hyperparameter.importances.Importances", false]], "incumbent": [[97, "term-Incumbent", true]], "is_pareto_efficient() (in module deepcave.utils.multi_objective_importance)": [[66, "deepcave.utils.multi_objective_importance.is_pareto_efficient", false]], "is_run() (deepcave.runs.handler.runhandler method)": [[46, "deepcave.runs.handler.RunHandler.is_run", false]], "is_valid_run() (deepcave.runs.converters.amltk.amltkrun class method)": [[36, "deepcave.runs.converters.amltk.AMLTKRun.is_valid_run", false]], "is_valid_run() (deepcave.runs.converters.bohb.bohbrun class method)": [[37, "deepcave.runs.converters.bohb.BOHBRun.is_valid_run", false]], "is_valid_run() (deepcave.runs.converters.dataframe.dataframerun class method)": [[38, "deepcave.runs.converters.dataframe.DataFrameRun.is_valid_run", false]], "is_valid_run() (deepcave.runs.converters.deepcave.deepcaverun class method)": [[39, "deepcave.runs.converters.deepcave.DeepCAVERun.is_valid_run", false]], "is_valid_run() (deepcave.runs.converters.optuna.optunarun class method)": [[40, "deepcave.runs.converters.optuna.OptunaRun.is_valid_run", false]], "is_valid_run() (deepcave.runs.converters.raytune.raytunerun class method)": [[41, "deepcave.runs.converters.raytune.RayTuneRun.is_valid_run", false]], "is_valid_run() (deepcave.runs.converters.smac3v1.smac3v1run class method)": [[42, "deepcave.runs.converters.smac3v1.SMAC3v1Run.is_valid_run", false]], "is_valid_run() (deepcave.runs.converters.smac3v2.smac3v2run class method)": [[43, "deepcave.runs.converters.smac3v2.SMAC3v2Run.is_valid_run", false]], "is_valid_run() (deepcave.runs.run.run class method)": [[49, "deepcave.runs.run.Run.is_valid_run", false]], "latest_change (deepcave.runs.abstractrun property)": [[34, "deepcave.runs.AbstractRun.latest_change", false]], "latest_change (deepcave.runs.converters.amltk.amltkrun property)": [[36, "deepcave.runs.converters.amltk.AMLTKRun.latest_change", false]], "latest_change (deepcave.runs.converters.bohb.bohbrun property)": [[37, "deepcave.runs.converters.bohb.BOHBRun.latest_change", false]], "latest_change (deepcave.runs.converters.dataframe.dataframerun property)": [[38, "deepcave.runs.converters.dataframe.DataFrameRun.latest_change", false]], "latest_change (deepcave.runs.converters.deepcave.deepcaverun property)": [[39, "deepcave.runs.converters.deepcave.DeepCAVERun.latest_change", false]], "latest_change (deepcave.runs.converters.optuna.optunarun property)": [[40, "deepcave.runs.converters.optuna.OptunaRun.latest_change", false]], "latest_change (deepcave.runs.converters.raytune.raytunerun property)": [[41, "deepcave.runs.converters.raytune.RayTuneRun.latest_change", false]], "latest_change (deepcave.runs.converters.smac3v1.smac3v1run property)": [[42, "deepcave.runs.converters.smac3v1.SMAC3v1Run.latest_change", false]], "latest_change (deepcave.runs.converters.smac3v2.smac3v2run property)": [[43, "deepcave.runs.converters.smac3v2.SMAC3v2Run.latest_change", false]], "latest_change (deepcave.runs.group.group property)": [[45, "deepcave.runs.group.Group.latest_change", false]], "layout (class in deepcave.layouts)": [[14, "deepcave.layouts.Layout", false]], "load() (deepcave.runs.run.run method)": [[49, "deepcave.runs.run.Run.load", false]], "load_configspace() (deepcave.runs.converters.dataframe.dataframerun static method)": [[38, "deepcave.runs.converters.dataframe.DataFrameRun.load_configspace", false]], "load_dependency_inputs() (deepcave.plugins.hyperparameter.ablation_paths.ablationpaths method)": [[22, "deepcave.plugins.hyperparameter.ablation_paths.AblationPaths.load_dependency_inputs", false]], "load_dependency_inputs() (deepcave.plugins.hyperparameter.configuration_cube.configurationcube method)": [[23, "deepcave.plugins.hyperparameter.configuration_cube.ConfigurationCube.load_dependency_inputs", false]], "load_dependency_inputs() (deepcave.plugins.hyperparameter.importances.importances method)": [[24, "deepcave.plugins.hyperparameter.importances.Importances.load_dependency_inputs", false]], "load_dependency_inputs() (deepcave.plugins.hyperparameter.parallel_coordinates.parallelcoordinates method)": [[25, "deepcave.plugins.hyperparameter.parallel_coordinates.ParallelCoordinates.load_dependency_inputs", false]], "load_dependency_inputs() (deepcave.plugins.hyperparameter.pdp.partialdependencies method)": [[26, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.load_dependency_inputs", false]], "load_dependency_inputs() (deepcave.plugins.hyperparameter.symbolic_explanations.symbolicexplanations method)": [[27, "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations.load_dependency_inputs", false]], "load_dependency_inputs() (deepcave.plugins.plugin method)": [[18, "deepcave.plugins.Plugin.load_dependency_inputs", false]], "load_dependency_inputs() (deepcave.plugins.summary.configurations.configurations method)": [[31, "deepcave.plugins.summary.configurations.Configurations.load_dependency_inputs", false]], "load_dependency_inputs() (deepcave.plugins.summary.footprint.footprint method)": [[32, "deepcave.plugins.summary.footprint.FootPrint.load_dependency_inputs", false]], "load_inputs() (deepcave.plugins.hyperparameter.ablation_paths.ablationpaths method)": [[22, "deepcave.plugins.hyperparameter.ablation_paths.AblationPaths.load_inputs", false]], "load_inputs() (deepcave.plugins.hyperparameter.configuration_cube.configurationcube method)": [[23, "deepcave.plugins.hyperparameter.configuration_cube.ConfigurationCube.load_inputs", false]], "load_inputs() (deepcave.plugins.hyperparameter.importances.importances method)": [[24, "deepcave.plugins.hyperparameter.importances.Importances.load_inputs", false]], "load_inputs() (deepcave.plugins.hyperparameter.parallel_coordinates.parallelcoordinates method)": [[25, "deepcave.plugins.hyperparameter.parallel_coordinates.ParallelCoordinates.load_inputs", false]], "load_inputs() (deepcave.plugins.hyperparameter.pdp.partialdependencies method)": [[26, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.load_inputs", false]], "load_inputs() (deepcave.plugins.hyperparameter.symbolic_explanations.symbolicexplanations method)": [[27, "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations.load_inputs", false]], "load_inputs() (deepcave.plugins.plugin method)": [[18, "deepcave.plugins.Plugin.load_inputs", false]], "load_inputs() (deepcave.plugins.summary.configurations.configurations method)": [[31, "deepcave.plugins.summary.configurations.Configurations.load_inputs", false]], "load_inputs() (deepcave.plugins.summary.footprint.footprint method)": [[32, "deepcave.plugins.summary.footprint.FootPrint.load_inputs", false]], "load_objectives() (deepcave.runs.converters.dataframe.dataframerun static method)": [[38, "deepcave.runs.converters.dataframe.DataFrameRun.load_objectives", false]], "load_ouputs_mo_fanova() (deepcave.plugins.hyperparameter.importances.importances static method)": [[24, "deepcave.plugins.hyperparameter.importances.Importances.load_ouputs_mo_fanova", false]], "load_outputs() (deepcave.plugins.hyperparameter.ablation_paths.ablationpaths static method)": [[22, "deepcave.plugins.hyperparameter.ablation_paths.AblationPaths.load_outputs", false]], "load_outputs() (deepcave.plugins.hyperparameter.configuration_cube.configurationcube static method)": [[23, "deepcave.plugins.hyperparameter.configuration_cube.ConfigurationCube.load_outputs", false]], "load_outputs() (deepcave.plugins.hyperparameter.importances.importances static method)": [[24, "deepcave.plugins.hyperparameter.importances.Importances.load_outputs", false]], "load_outputs() (deepcave.plugins.hyperparameter.parallel_coordinates.parallelcoordinates static method)": [[25, "deepcave.plugins.hyperparameter.parallel_coordinates.ParallelCoordinates.load_outputs", false]], "load_outputs() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[26, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.load_outputs", false]], "load_outputs() (deepcave.plugins.hyperparameter.symbolic_explanations.symbolicexplanations static method)": [[27, "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations.load_outputs", false]], "load_outputs() (deepcave.plugins.plugin static method)": [[18, "deepcave.plugins.Plugin.load_outputs", false]], "load_outputs() (deepcave.plugins.summary.configurations.configurations static method)": [[31, "deepcave.plugins.summary.configurations.Configurations.load_outputs", false]], "load_outputs() (deepcave.plugins.summary.footprint.footprint static method)": [[32, "deepcave.plugins.summary.footprint.FootPrint.load_outputs", false]], "load_outputs() (deepcave.plugins.summary.overview.overview static method)": [[33, "deepcave.plugins.summary.overview.Overview.load_outputs", false]], "load_outputs_mo() (deepcave.plugins.hyperparameter.ablation_paths.ablationpaths static method)": [[22, "deepcave.plugins.hyperparameter.ablation_paths.AblationPaths.load_outputs_mo", false]], "load_run_inputs() (deepcave.plugins.plugin static method)": [[18, "deepcave.plugins.Plugin.load_run_inputs", false]], "load_trials() (deepcave.runs.converters.dataframe.dataframerun method)": [[38, "deepcave.runs.converters.dataframe.DataFrameRun.load_trials", false]], "lpi (class in deepcave.evaluators.lpi)": [[10, "deepcave.evaluators.lpi.LPI", false]], "make_dirs() (in module deepcave.utils.files)": [[62, "deepcave.utils.files.make_dirs", false]], "merge() (deepcave.runs.objective.objective method)": [[47, "deepcave.runs.objective.Objective.merge", false]], "merge_costs() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.merge_costs", false]], "moablation (class in deepcave.evaluators.mo_ablation)": [[11, "deepcave.evaluators.mo_ablation.MOAblation", false]], "module": [[1, "module-deepcave.evaluators", false], [2, "module-deepcave.evaluators.ablation", false], [3, "module-deepcave.evaluators.epm", false], [4, "module-deepcave.evaluators.epm.fanova_forest", false], [5, "module-deepcave.evaluators.epm.random_forest", false], [6, "module-deepcave.evaluators.epm.random_forest_surrogate", false], [7, "module-deepcave.evaluators.epm.utils", false], [8, "module-deepcave.evaluators.fanova", false], [9, "module-deepcave.evaluators.footprint", false], [10, "module-deepcave.evaluators.lpi", false], [11, "module-deepcave.evaluators.mo_ablation", false], [12, "module-deepcave.evaluators.mo_fanova", false], [13, "module-deepcave.evaluators.mo_lpi", false], [14, "module-deepcave.layouts", false], [15, "module-deepcave.layouts.header", false], [16, "module-deepcave.layouts.not_found", false], [17, "module-deepcave.layouts.sidebar", false], [18, "module-deepcave.plugins", false], [19, "module-deepcave.plugins.budget", false], [20, "module-deepcave.plugins.dynamic", false], [21, "module-deepcave.plugins.hyperparameter", false], [22, "module-deepcave.plugins.hyperparameter.ablation_paths", false], [23, "module-deepcave.plugins.hyperparameter.configuration_cube", false], [24, "module-deepcave.plugins.hyperparameter.importances", false], [25, "module-deepcave.plugins.hyperparameter.parallel_coordinates", false], [26, "module-deepcave.plugins.hyperparameter.pdp", false], [27, "module-deepcave.plugins.hyperparameter.symbolic_explanations", false], [28, "module-deepcave.plugins.objective", false], [29, "module-deepcave.plugins.static", false], [30, "module-deepcave.plugins.summary", false], [31, "module-deepcave.plugins.summary.configurations", false], [32, "module-deepcave.plugins.summary.footprint", false], [33, "module-deepcave.plugins.summary.overview", false], [34, "module-deepcave.runs", false], [35, "module-deepcave.runs.converters", false], [36, "module-deepcave.runs.converters.amltk", false], [37, "module-deepcave.runs.converters.bohb", false], [38, "module-deepcave.runs.converters.dataframe", false], [39, "module-deepcave.runs.converters.deepcave", false], [40, "module-deepcave.runs.converters.optuna", false], [41, "module-deepcave.runs.converters.raytune", false], [42, "module-deepcave.runs.converters.smac3v1", false], [43, "module-deepcave.runs.converters.smac3v2", false], [44, "module-deepcave.runs.exceptions", false], [45, "module-deepcave.runs.group", false], [46, "module-deepcave.runs.handler", false], [47, "module-deepcave.runs.objective", false], [48, "module-deepcave.runs.recorder", false], [49, "module-deepcave.runs.run", false], [50, "module-deepcave.runs.status", false], [51, "module-deepcave.runs.trial", false], [52, "module-deepcave.utils", false], [53, "module-deepcave.utils.cache", false], [54, "module-deepcave.utils.cast", false], [55, "module-deepcave.utils.compression", false], [56, "module-deepcave.utils.configs", false], [57, "module-deepcave.utils.configspace", false], [58, "module-deepcave.utils.converters", false], [59, "module-deepcave.utils.dash", false], [60, "module-deepcave.utils.data_structures", false], [61, "module-deepcave.utils.docs", false], [62, "module-deepcave.utils.files", false], [63, "module-deepcave.utils.hash", false], [64, "module-deepcave.utils.layout", false], [65, "module-deepcave.utils.logs", false], [66, "module-deepcave.utils.multi_objective_importance", false], [67, "module-deepcave.utils.notification", false], [68, "module-deepcave.utils.run_caches", false], [69, "module-deepcave.utils.styled_plotty", false], [70, "module-deepcave.utils.symbolic_regression", false], [71, "module-deepcave.utils.url", false], [72, "module-deepcave.utils.util", false]], "mofanova (class in deepcave.evaluators.mo_fanova)": [[12, "deepcave.evaluators.mo_fanova.MOfANOVA", false]], "molpi (class in deepcave.evaluators.mo_lpi)": [[13, "deepcave.evaluators.mo_lpi.MOLPI", false]], "notfoundlayout (class in deepcave.layouts.not_found)": [[16, "deepcave.layouts.not_found.NotFoundLayout", false]], "notification (class in deepcave.utils.notification)": [[67, "deepcave.utils.notification.Notification", false]], "notmergeableerror": [[44, "deepcave.runs.exceptions.NotMergeableError", false]], "notvalidrunerror": [[44, "deepcave.runs.exceptions.NotValidRunError", false]], "objective": [[97, "term-Objective", true]], "objective (class in deepcave.runs.objective)": [[47, "deepcave.runs.objective.Objective", false]], "optional_int() (in module deepcave.utils.cast)": [[54, "deepcave.utils.cast.optional_int", false]], "optunarun (class in deepcave.runs.converters.optuna)": [[40, "deepcave.runs.converters.optuna.OptunaRun", false]], "overview (class in deepcave.plugins.summary.overview)": [[33, "deepcave.plugins.summary.overview.Overview", false]], "parallelcoordinates (class in deepcave.plugins.hyperparameter.parallel_coordinates)": [[25, "deepcave.plugins.hyperparameter.parallel_coordinates.ParallelCoordinates", false]], "parse_config() (in module deepcave.utils.configs)": [[56, "deepcave.utils.configs.parse_config", false]], "parse_url() (in module deepcave.utils.url)": [[71, "deepcave.utils.url.parse_url", false]], "partialdependencies (class in deepcave.plugins.hyperparameter.pdp)": [[26, "deepcave.plugins.hyperparameter.pdp.PartialDependencies", false]], "path (deepcave.runs.run.run property)": [[49, "deepcave.runs.run.Run.path", false]], "plugin (class in deepcave.plugins)": [[18, "deepcave.plugins.Plugin", false]], "pluginstate (class in deepcave.plugins.static)": [[29, "deepcave.plugins.static.PluginState", false]], "predict() (deepcave.evaluators.epm.random_forest.randomforest method)": [[5, "deepcave.evaluators.epm.random_forest.RandomForest.predict", false]], "predict() (deepcave.evaluators.epm.random_forest_surrogate.randomforestsurrogate method)": [[6, "deepcave.evaluators.epm.random_forest_surrogate.RandomForestSurrogate.predict", false]], "predict() (deepcave.evaluators.mo_ablation.moablation method)": [[11, "deepcave.evaluators.mo_ablation.MOAblation.predict", false]], "predict_marginalized() (deepcave.evaluators.epm.random_forest.randomforest method)": [[5, "deepcave.evaluators.epm.random_forest.RandomForest.predict_marginalized", false]], "prettify_label() (in module deepcave.utils.styled_plotty)": [[69, "deepcave.utils.styled_plotty.prettify_label", false]], "print_progress_bar() (in module deepcave.utils.util)": [[72, "deepcave.utils.util.print_progress_bar", false]], "process() (deepcave.plugins.hyperparameter.ablation_paths.ablationpaths static method)": [[22, "deepcave.plugins.hyperparameter.ablation_paths.AblationPaths.process", false]], "process() (deepcave.plugins.hyperparameter.configuration_cube.configurationcube static method)": [[23, "deepcave.plugins.hyperparameter.configuration_cube.ConfigurationCube.process", false]], "process() (deepcave.plugins.hyperparameter.importances.importances static method)": [[24, "deepcave.plugins.hyperparameter.importances.Importances.process", false]], "process() (deepcave.plugins.hyperparameter.parallel_coordinates.parallelcoordinates static method)": [[25, "deepcave.plugins.hyperparameter.parallel_coordinates.ParallelCoordinates.process", false]], "process() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[26, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.process", false]], "process() (deepcave.plugins.hyperparameter.symbolic_explanations.symbolicexplanations static method)": [[27, "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations.process", false]], "process() (deepcave.plugins.plugin static method)": [[18, "deepcave.plugins.Plugin.process", false]], "process() (deepcave.plugins.summary.configurations.configurations static method)": [[31, "deepcave.plugins.summary.configurations.Configurations.process", false]], "process() (deepcave.plugins.summary.footprint.footprint static method)": [[32, "deepcave.plugins.summary.footprint.FootPrint.process", false]], "randomforest (class in deepcave.evaluators.epm.random_forest)": [[5, "deepcave.evaluators.epm.random_forest.RandomForest", false]], "randomforestsurrogate (class in deepcave.evaluators.epm.random_forest_surrogate)": [[6, "deepcave.evaluators.epm.random_forest_surrogate.RandomForestSurrogate", false]], "raytunerun (class in deepcave.runs.converters.raytune)": [[41, "deepcave.runs.converters.raytune.RayTuneRun", false]], "read() (deepcave.utils.cache.cache method)": [[53, "deepcave.utils.cache.Cache.read", false]], "recorder (class in deepcave.runs.recorder)": [[48, "deepcave.runs.recorder.Recorder", false]], "register_callbacks() (deepcave.layouts.header.headerlayout method)": [[15, "deepcave.layouts.header.HeaderLayout.register_callbacks", false]], "register_callbacks() (deepcave.layouts.sidebar.sidebarlayout method)": [[17, "deepcave.layouts.sidebar.SidebarLayout.register_callbacks", false]], "register_callbacks() (deepcave.plugins.dynamic.dynamicplugin method)": [[20, "deepcave.plugins.dynamic.DynamicPlugin.register_callbacks", false]], "register_callbacks() (deepcave.plugins.plugin method)": [[18, "deepcave.plugins.Plugin.register_callbacks", false]], "register_callbacks() (deepcave.plugins.static.staticplugin method)": [[29, "deepcave.plugins.static.StaticPlugin.register_callbacks", false]], "register_input() (deepcave.plugins.plugin method)": [[18, "deepcave.plugins.Plugin.register_input", false]], "register_output() (deepcave.plugins.plugin method)": [[18, "deepcave.plugins.Plugin.register_output", false]], "remove_run() (deepcave.runs.handler.runhandler method)": [[46, "deepcave.runs.handler.RunHandler.remove_run", false]], "reset() (deepcave.runs.abstractrun method)": [[34, "deepcave.runs.AbstractRun.reset", false]], "reset() (deepcave.utils.notification.notification method)": [[67, "deepcave.utils.notification.Notification.reset", false]], "rst_to_md() (in module deepcave.utils.docs)": [[61, "deepcave.utils.docs.rst_to_md", false]], "run (class in deepcave.runs.run)": [[49, "deepcave.runs.run.Run", false]], "run_names (deepcave.runs.group.group property)": [[45, "deepcave.runs.group.Group.run_names", false]], "run_paths (deepcave.runs.group.group property)": [[45, "deepcave.runs.group.Group.run_paths", false]], "runcaches (class in deepcave.utils.run_caches)": [[68, "deepcave.utils.run_caches.RunCaches", false]], "runhandler (class in deepcave.runs.handler)": [[46, "deepcave.runs.handler.RunHandler", false]], "runinequality (class in deepcave.runs.exceptions)": [[44, "deepcave.runs.exceptions.RunInequality", false]], "runs (deepcave.plugins.plugin property)": [[18, "deepcave.plugins.Plugin.runs", false]], "sample_border_config() (in module deepcave.utils.configspace)": [[57, "deepcave.utils.configspace.sample_border_config", false]], "sample_random_config() (in module deepcave.utils.configspace)": [[57, "deepcave.utils.configspace.sample_random_config", false]], "save() (deepcave.runs.run.run method)": [[49, "deepcave.runs.run.Run.save", false]], "save_image() (in module deepcave.utils.styled_plotty)": [[69, "deepcave.utils.styled_plotty.save_image", false]], "serialize() (in module deepcave.utils.compression)": [[55, "deepcave.utils.compression.serialize", false]], "set() (deepcave.utils.cache.cache method)": [[53, "deepcave.utils.cache.Cache.set", false]], "set() (deepcave.utils.run_caches.runcaches method)": [[68, "deepcave.utils.run_caches.RunCaches.set", false]], "set_dict() (deepcave.utils.cache.cache method)": [[53, "deepcave.utils.cache.Cache.set_dict", false]], "set_working_directory() (deepcave.runs.handler.runhandler method)": [[46, "deepcave.runs.handler.RunHandler.set_working_directory", false]], "short_string() (in module deepcave.utils.util)": [[72, "deepcave.utils.util.short_string", false]], "sidebarlayout (class in deepcave.layouts.sidebar)": [[17, "deepcave.layouts.sidebar.SidebarLayout", false]], "smac3v1run (class in deepcave.runs.converters.smac3v1)": [[42, "deepcave.runs.converters.smac3v1.SMAC3v1Run", false]], "smac3v2run (class in deepcave.runs.converters.smac3v2)": [[43, "deepcave.runs.converters.smac3v2.SMAC3v2Run", false]], "start() (deepcave.runs.recorder.recorder method)": [[48, "deepcave.runs.recorder.Recorder.start", false]], "staticplugin (class in deepcave.plugins.static)": [[29, "deepcave.plugins.static.StaticPlugin", false]], "status (class in deepcave.runs.status)": [[50, "deepcave.runs.status.Status", false]], "string_to_hash() (in module deepcave.utils.hash)": [[63, "deepcave.utils.hash.string_to_hash", false]], "symbolicexplanations (class in deepcave.plugins.hyperparameter.symbolic_explanations)": [[27, "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations", false]], "to_json() (deepcave.runs.objective.objective method)": [[47, "deepcave.runs.objective.Objective.to_json", false]], "to_json() (deepcave.runs.trial.trial method)": [[51, "deepcave.runs.trial.Trial.to_json", false]], "to_text() (deepcave.runs.status.status method)": [[50, "deepcave.runs.status.Status.to_text", false]], "train() (deepcave.evaluators.epm.random_forest.randomforest method)": [[5, "deepcave.evaluators.epm.random_forest.RandomForest.train", false]], "trial (class in deepcave.runs.trial)": [[51, "deepcave.runs.trial.Trial", false]], "update() (deepcave.runs.handler.runhandler method)": [[46, "deepcave.runs.handler.RunHandler.update", false]], "update() (deepcave.utils.notification.notification method)": [[67, "deepcave.utils.notification.Notification.update", false]], "update() (deepcave.utils.run_caches.runcaches method)": [[68, "deepcave.utils.run_caches.RunCaches.update", false]], "update_dict() (in module deepcave.utils.data_structures)": [[60, "deepcave.utils.data_structures.update_dict", false]], "update_groups() (deepcave.runs.handler.runhandler method)": [[46, "deepcave.runs.handler.RunHandler.update_groups", false]], "update_run() (deepcave.runs.handler.runhandler method)": [[46, "deepcave.runs.handler.RunHandler.update_run", false]], "update_runs() (deepcave.runs.handler.runhandler method)": [[46, "deepcave.runs.handler.RunHandler.update_runs", false]], "write() (deepcave.utils.cache.cache method)": [[53, "deepcave.utils.cache.Cache.write", false]]}, "objects": {"deepcave": [[1, 0, 0, "-", "evaluators"], [14, 0, 0, "-", "layouts"], [18, 0, 0, "-", "plugins"], [34, 0, 0, "-", "runs"], [52, 0, 0, "-", "utils"]], "deepcave.evaluators": [[2, 0, 0, "-", "ablation"], [3, 0, 0, "-", "epm"], [8, 0, 0, "-", "fanova"], [9, 0, 0, "-", "footprint"], [10, 0, 0, "-", "lpi"], [11, 0, 0, "-", "mo_ablation"], [12, 0, 0, "-", "mo_fanova"], [13, 0, 0, "-", "mo_lpi"]], "deepcave.evaluators.ablation": [[2, 1, 1, "", "Ablation"]], "deepcave.evaluators.ablation.Ablation": [[2, 2, 1, "", "calculate"], [2, 2, 1, "", "get_ablation_improvements"], [2, 2, 1, "", "get_ablation_performances"]], "deepcave.evaluators.epm": [[4, 0, 0, "-", "fanova_forest"], [5, 0, 0, "-", "random_forest"], [6, 0, 0, "-", "random_forest_surrogate"], [7, 0, 0, "-", "utils"]], "deepcave.evaluators.epm.fanova_forest": [[4, 1, 1, "", "FanovaForest"]], "deepcave.evaluators.epm.fanova_forest.FanovaForest": [[4, 2, 1, "", "compute_marginals"]], "deepcave.evaluators.epm.random_forest": [[5, 1, 1, "", "RandomForest"]], "deepcave.evaluators.epm.random_forest.RandomForest": [[5, 2, 1, "", "get_leaf_values"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "predict_marginalized"], [5, 2, 1, "", "train"]], "deepcave.evaluators.epm.random_forest_surrogate": [[6, 1, 1, "", "RandomForestSurrogate"]], "deepcave.evaluators.epm.random_forest_surrogate.RandomForestSurrogate": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "predict"]], "deepcave.evaluators.epm.utils": [[7, 3, 1, "", "get_types"]], "deepcave.evaluators.fanova": [[8, 1, 1, "", "fANOVA"]], "deepcave.evaluators.fanova.fANOVA": [[8, 2, 1, "", "calculate"], [8, 2, 1, "", "get_importances"]], "deepcave.evaluators.footprint": [[9, 1, 1, "", "Footprint"]], "deepcave.evaluators.footprint.Footprint": [[9, 2, 1, "", "calculate"], [9, 2, 1, "", "get_points"], [9, 2, 1, "", "get_surface"]], "deepcave.evaluators.lpi": [[10, 1, 1, "", "LPI"]], "deepcave.evaluators.lpi.LPI": [[10, 2, 1, "", "calculate"], [10, 2, 1, "", "get_importances"]], "deepcave.evaluators.mo_ablation": [[11, 1, 1, "", "MOAblation"]], "deepcave.evaluators.mo_ablation.MOAblation": [[11, 2, 1, "", "ablation"], [11, 2, 1, "", "calculate"], [11, 2, 1, "", "calculate_ablation_path"], [11, 2, 1, "", "get_importances"], [11, 2, 1, "", "predict"]], "deepcave.evaluators.mo_fanova": [[12, 1, 1, "", "MOfANOVA"]], "deepcave.evaluators.mo_fanova.MOfANOVA": [[12, 2, 1, "", "calculate"], [12, 2, 1, "", "get_importances_"]], "deepcave.evaluators.mo_lpi": [[13, 1, 1, "", "MOLPI"]], "deepcave.evaluators.mo_lpi.MOLPI": [[13, 2, 1, "", "calc_one_weighting"], [13, 2, 1, "", "calculate"], [13, 2, 1, "", "get_importances_"]], "deepcave.layouts": [[14, 1, 1, "", "Layout"], [15, 0, 0, "-", "header"], [16, 0, 0, "-", "not_found"], [17, 0, 0, "-", "sidebar"]], "deepcave.layouts.Layout": [[14, 2, 1, "", "__call__"]], "deepcave.layouts.header": [[15, 1, 1, "", "HeaderLayout"]], "deepcave.layouts.header.HeaderLayout": [[15, 2, 1, "", "__call__"], [15, 2, 1, "", "register_callbacks"]], "deepcave.layouts.not_found": [[16, 1, 1, "", "NotFoundLayout"]], "deepcave.layouts.not_found.NotFoundLayout": [[16, 2, 1, "", "__call__"]], "deepcave.layouts.sidebar": [[17, 1, 1, "", "SidebarLayout"]], "deepcave.layouts.sidebar.SidebarLayout": [[17, 2, 1, "", "__call__"], [17, 2, 1, "", "register_callbacks"]], "deepcave.plugins": [[18, 1, 1, "", "Plugin"], [19, 0, 0, "-", "budget"], [20, 0, 0, "-", "dynamic"], [21, 0, 0, "-", "hyperparameter"], [28, 0, 0, "-", "objective"], [29, 0, 0, "-", "static"], [30, 0, 0, "-", "summary"]], "deepcave.plugins.Plugin": [[18, 2, 1, "", "__call__"], [18, 4, 1, "", "all_runs"], [18, 2, 1, "", "check_run_compatibility"], [18, 2, 1, "", "check_runs_compatibility"], [18, 2, 1, "", "generate_inputs"], [18, 2, 1, "", "generate_outputs"], [18, 2, 1, "", "get_base_url"], [18, 2, 1, "", "get_filter_layout"], [18, 2, 1, "", "get_input_layout"], [18, 2, 1, "", "get_internal_id"], [18, 2, 1, "", "get_internal_input_id"], [18, 2, 1, "", "get_internal_output_id"], [18, 2, 1, "", "get_output_layout"], [18, 2, 1, "", "get_run_input_layout"], [18, 2, 1, "", "get_selected_runs"], [18, 4, 1, "", "groups"], [18, 2, 1, "", "load_dependency_inputs"], [18, 2, 1, "", "load_inputs"], [18, 2, 1, "", "load_outputs"], [18, 2, 1, "", "load_run_inputs"], [18, 2, 1, "", "process"], [18, 2, 1, "", "register_callbacks"], [18, 2, 1, "", "register_input"], [18, 2, 1, "", "register_output"], [18, 4, 1, "", "runs"]], "deepcave.plugins.dynamic": [[20, 1, 1, "", "DynamicPlugin"]], "deepcave.plugins.dynamic.DynamicPlugin": [[20, 2, 1, "", "__call__"], [20, 2, 1, "", "register_callbacks"]], "deepcave.plugins.hyperparameter": [[22, 0, 0, "-", "ablation_paths"], [23, 0, 0, "-", "configuration_cube"], [24, 0, 0, "-", "importances"], [25, 0, 0, "-", "parallel_coordinates"], [26, 0, 0, "-", "pdp"], [27, 0, 0, "-", "symbolic_explanations"]], "deepcave.plugins.hyperparameter.ablation_paths": [[22, 1, 1, "", "AblationPaths"]], "deepcave.plugins.hyperparameter.ablation_paths.AblationPaths": [[22, 2, 1, "", "get_filter_layout"], [22, 2, 1, "", "get_input_layout"], [22, 2, 1, "", "get_output_layout"], [22, 2, 1, "", "load_dependency_inputs"], [22, 2, 1, "", "load_inputs"], [22, 2, 1, "", "load_outputs"], [22, 2, 1, "", "load_outputs_mo"], [22, 2, 1, "", "process"]], "deepcave.plugins.hyperparameter.configuration_cube": [[23, 1, 1, "", "ConfigurationCube"]], "deepcave.plugins.hyperparameter.configuration_cube.ConfigurationCube": [[23, 2, 1, "", "get_filter_layout"], [23, 2, 1, "", "get_input_layout"], [23, 2, 1, "", "get_output_layout"], [23, 2, 1, "", "load_dependency_inputs"], [23, 2, 1, "", "load_inputs"], [23, 2, 1, "", "load_outputs"], [23, 2, 1, "", "process"]], "deepcave.plugins.hyperparameter.importances": [[24, 1, 1, "", "Importances"]], "deepcave.plugins.hyperparameter.importances.Importances": [[24, 2, 1, "", "get_filter_layout"], [24, 2, 1, "", "get_input_layout"], [24, 2, 1, "", "get_output_layout"], [24, 2, 1, "", "load_dependency_inputs"], [24, 2, 1, "", "load_inputs"], [24, 2, 1, "", "load_ouputs_mo_fanova"], [24, 2, 1, "", "load_outputs"], [24, 2, 1, "", "process"]], "deepcave.plugins.hyperparameter.parallel_coordinates": [[25, 1, 1, "", "ParallelCoordinates"]], "deepcave.plugins.hyperparameter.parallel_coordinates.ParallelCoordinates": [[25, 2, 1, "", "get_filter_layout"], [25, 2, 1, "", "get_input_layout"], [25, 2, 1, "", "get_output_layout"], [25, 2, 1, "", "load_dependency_inputs"], [25, 2, 1, "", "load_inputs"], [25, 2, 1, "", "load_outputs"], [25, 2, 1, "", "process"]], "deepcave.plugins.hyperparameter.pdp": [[26, 1, 1, "", "PartialDependencies"]], "deepcave.plugins.hyperparameter.pdp.PartialDependencies": [[26, 2, 1, "", "get_filter_layout"], [26, 2, 1, "", "get_input_layout"], [26, 2, 1, "", "get_output_layout"], [26, 2, 1, "", "get_pdp_figure"], [26, 2, 1, "", "load_dependency_inputs"], [26, 2, 1, "", "load_inputs"], [26, 2, 1, "", "load_outputs"], [26, 2, 1, "", "process"]], "deepcave.plugins.hyperparameter.symbolic_explanations": [[27, 1, 1, "", "SymbolicExplanations"]], "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations": [[27, 2, 1, "", "get_input_layout"], [27, 2, 1, "", "get_output_layout"], [27, 2, 1, "", "load_dependency_inputs"], [27, 2, 1, "", "load_inputs"], [27, 2, 1, "", "load_outputs"], [27, 2, 1, "", "process"]], "deepcave.plugins.static": [[29, 1, 1, "", "PluginState"], [29, 1, 1, "", "StaticPlugin"]], "deepcave.plugins.static.StaticPlugin": [[29, 2, 1, "", "__call__"], [29, 2, 1, "", "register_callbacks"]], "deepcave.plugins.summary": [[31, 0, 0, "-", "configurations"], [32, 0, 0, "-", "footprint"], [33, 0, 0, "-", "overview"]], "deepcave.plugins.summary.configurations": [[31, 1, 1, "", "Configurations"]], "deepcave.plugins.summary.configurations.Configurations": [[31, 2, 1, "", "get_input_layout"], [31, 2, 1, "", "get_link"], [31, 2, 1, "", "get_output_layout"], [31, 2, 1, "", "load_dependency_inputs"], [31, 2, 1, "", "load_inputs"], [31, 2, 1, "", "load_outputs"], [31, 2, 1, "", "process"]], "deepcave.plugins.summary.footprint": [[32, 1, 1, "", "FootPrint"]], "deepcave.plugins.summary.footprint.FootPrint": [[32, 2, 1, "", "get_filter_layout"], [32, 2, 1, "", "get_input_layout"], [32, 2, 1, "", "get_output_layout"], [32, 2, 1, "", "load_dependency_inputs"], [32, 2, 1, "", "load_inputs"], [32, 2, 1, "", "load_outputs"], [32, 2, 1, "", "process"]], "deepcave.plugins.summary.overview": [[33, 1, 1, "", "Overview"]], "deepcave.plugins.summary.overview.Overview": [[33, 2, 1, "", "get_output_layout"], [33, 2, 1, "", "load_outputs"]], "deepcave.runs": [[34, 1, 1, "", "AbstractRun"], [34, 3, 1, "", "check_equality"], [35, 0, 0, "-", "converters"], [44, 0, 0, "-", "exceptions"], [45, 0, 0, "-", "group"], [46, 0, 0, "-", "handler"], [47, 0, 0, "-", "objective"], [48, 0, 0, "-", "recorder"], [49, 0, 0, "-", "run"], [50, 0, 0, "-", "status"], [51, 0, 0, "-", "trial"]], "deepcave.runs.AbstractRun": [[34, 2, 1, "", "empty"], [34, 2, 1, "", "encode_config"], [34, 2, 1, "", "encode_configs"], [34, 2, 1, "", "get_all_costs"], [34, 2, 1, "", "get_avg_costs"], [34, 2, 1, "", "get_budget"], [34, 2, 1, "", "get_budget_ids"], [34, 2, 1, "", "get_budgets"], [34, 2, 1, "", "get_config"], [34, 2, 1, "", "get_config_id"], [34, 2, 1, "", "get_configs"], [34, 2, 1, "", "get_encoded_data"], [34, 2, 1, "", "get_highest_budget"], [34, 2, 1, "", "get_incumbent"], [34, 2, 1, "", "get_meta"], [34, 2, 1, "", "get_model"], [34, 2, 1, "", "get_num_configs"], [34, 2, 1, "", "get_objective"], [34, 2, 1, "", "get_objective_id"], [34, 2, 1, "", "get_objective_ids"], [34, 2, 1, "", "get_objective_name"], [34, 2, 1, "", "get_objective_names"], [34, 2, 1, "", "get_objectives"], [34, 2, 1, "", "get_origin"], [34, 2, 1, "", "get_seeds"], [34, 2, 1, "", "get_status"], [34, 2, 1, "", "get_trajectory"], [34, 2, 1, "", "get_trial"], [34, 2, 1, "", "get_trial_key"], [34, 2, 1, "", "get_trials"], [34, 4, 1, "", "hash"], [34, 4, 1, "", "id"], [34, 4, 1, "", "latest_change"], [34, 2, 1, "", "merge_costs"], [34, 2, 1, "", "reset"]], "deepcave.runs.converters": [[36, 0, 0, "-", "amltk"], [37, 0, 0, "-", "bohb"], [38, 0, 0, "-", "dataframe"], [39, 0, 0, "-", "deepcave"], [40, 0, 0, "-", "optuna"], [41, 0, 0, "-", "raytune"], [42, 0, 0, "-", "smac3v1"], [43, 0, 0, "-", "smac3v2"]], "deepcave.runs.converters.amltk": [[36, 1, 1, "", "AMLTKRun"]], "deepcave.runs.converters.amltk.AMLTKRun": [[36, 2, 1, "", "from_path"], [36, 4, 1, "", "hash"], [36, 2, 1, "", "is_valid_run"], [36, 4, 1, "", "latest_change"]], "deepcave.runs.converters.bohb": [[37, 1, 1, "", "BOHBRun"]], "deepcave.runs.converters.bohb.BOHBRun": [[37, 2, 1, "", "from_path"], [37, 4, 1, "", "hash"], [37, 2, 1, "", "is_valid_run"], [37, 4, 1, "", "latest_change"]], "deepcave.runs.converters.dataframe": [[38, 1, 1, "", "DataFrameRun"]], "deepcave.runs.converters.dataframe.DataFrameRun": [[38, 2, 1, "", "from_path"], [38, 4, 1, "", "hash"], [38, 2, 1, "", "is_valid_run"], [38, 4, 1, "", "latest_change"], [38, 2, 1, "", "load_configspace"], [38, 2, 1, "", "load_objectives"], [38, 2, 1, "", "load_trials"]], "deepcave.runs.converters.deepcave": [[39, 1, 1, "", "DeepCAVERun"]], "deepcave.runs.converters.deepcave.DeepCAVERun": [[39, 2, 1, "", "from_path"], [39, 4, 1, "", "hash"], [39, 2, 1, "", "is_valid_run"], [39, 4, 1, "", "latest_change"]], "deepcave.runs.converters.optuna": [[40, 1, 1, "", "OptunaRun"]], "deepcave.runs.converters.optuna.OptunaRun": [[40, 2, 1, "", "from_path"], [40, 4, 1, "", "hash"], [40, 2, 1, "", "is_valid_run"], [40, 4, 1, "", "latest_change"]], "deepcave.runs.converters.raytune": [[41, 1, 1, "", "RayTuneRun"]], "deepcave.runs.converters.raytune.RayTuneRun": [[41, 2, 1, "", "from_path"], [41, 4, 1, "", "hash"], [41, 2, 1, "", "is_valid_run"], [41, 4, 1, "", "latest_change"]], "deepcave.runs.converters.smac3v1": [[42, 1, 1, "", "SMAC3v1Run"]], "deepcave.runs.converters.smac3v1.SMAC3v1Run": [[42, 2, 1, "", "from_path"], [42, 4, 1, "", "hash"], [42, 2, 1, "", "is_valid_run"], [42, 4, 1, "", "latest_change"]], "deepcave.runs.converters.smac3v2": [[43, 1, 1, "", "SMAC3v2Run"]], "deepcave.runs.converters.smac3v2.SMAC3v2Run": [[43, 2, 1, "", "from_path"], [43, 4, 1, "", "hash"], [43, 2, 1, "", "is_valid_run"], [43, 4, 1, "", "latest_change"]], "deepcave.runs.exceptions": [[44, 5, 1, "", "NotMergeableError"], [44, 5, 1, "", "NotValidRunError"], [44, 1, 1, "", "RunInequality"]], "deepcave.runs.group": [[45, 1, 1, "", "Group"]], "deepcave.runs.group.Group": [[45, 2, 1, "", "__iter__"], [45, 2, 1, "", "get_model"], [45, 2, 1, "", "get_new_config_id"], [45, 2, 1, "", "get_original_config_id"], [45, 2, 1, "", "get_original_run"], [45, 2, 1, "", "get_runs"], [45, 2, 1, "", "get_trajectory"], [45, 4, 1, "", "hash"], [45, 4, 1, "", "id"], [45, 4, 1, "", "latest_change"], [45, 4, 1, "", "run_names"], [45, 4, 1, "", "run_paths"]], "deepcave.runs.handler": [[46, 1, 1, "", "RunHandler"]], "deepcave.runs.handler.RunHandler": [[46, 2, 1, "", "add_run"], [46, 2, 1, "", "get_available_run_paths"], [46, 2, 1, "", "get_groups"], [46, 2, 1, "", "get_run"], [46, 2, 1, "", "get_run_name"], [46, 2, 1, "", "get_runs"], [46, 2, 1, "", "get_selected_groups"], [46, 2, 1, "", "get_selected_run_names"], [46, 2, 1, "", "get_selected_run_paths"], [46, 2, 1, "", "get_working_directory"], [46, 2, 1, "", "is_run"], [46, 2, 1, "", "remove_run"], [46, 2, 1, "", "set_working_directory"], [46, 2, 1, "", "update"], [46, 2, 1, "", "update_groups"], [46, 2, 1, "", "update_run"], [46, 2, 1, "", "update_runs"]], "deepcave.runs.objective": [[47, 1, 1, "", "Objective"]], "deepcave.runs.objective.Objective": [[47, 2, 1, "", "__eq__"], [47, 2, 1, "", "__post_init__"], [47, 2, 1, "", "from_json"], [47, 2, 1, "", "get_worst_value"], [47, 2, 1, "", "merge"], [47, 2, 1, "", "to_json"]], "deepcave.runs.recorder": [[48, 1, 1, "", "Recorder"]], "deepcave.runs.recorder.Recorder": [[48, 2, 1, "", "end"], [48, 2, 1, "", "start"]], "deepcave.runs.run": [[49, 1, 1, "", "Run"]], "deepcave.runs.run.Run": [[49, 2, 1, "", "add"], [49, 2, 1, "", "exists"], [49, 2, 1, "", "from_path"], [49, 4, 1, "", "id"], [49, 2, 1, "", "is_valid_run"], [49, 2, 1, "", "load"], [49, 4, 1, "", "path"], [49, 2, 1, "", "save"]], "deepcave.runs.status": [[50, 1, 1, "", "Status"]], "deepcave.runs.status.Status": [[50, 2, 1, "", "to_text"]], "deepcave.runs.trial": [[51, 1, 1, "", "Trial"]], "deepcave.runs.trial.Trial": [[51, 2, 1, "", "__post_init__"], [51, 2, 1, "", "get_key"], [51, 2, 1, "", "to_json"]], "deepcave.utils": [[53, 0, 0, "-", "cache"], [54, 0, 0, "-", "cast"], [55, 0, 0, "-", "compression"], [56, 0, 0, "-", "configs"], [57, 0, 0, "-", "configspace"], [58, 0, 0, "-", "converters"], [59, 0, 0, "-", "dash"], [60, 0, 0, "-", "data_structures"], [61, 0, 0, "-", "docs"], [62, 0, 0, "-", "files"], [63, 0, 0, "-", "hash"], [64, 0, 0, "-", "layout"], [65, 0, 0, "-", "logs"], [66, 0, 0, "-", "multi_objective_importance"], [67, 0, 0, "-", "notification"], [68, 0, 0, "-", "run_caches"], [69, 0, 0, "-", "styled_plotty"], [70, 0, 0, "-", "symbolic_regression"], [71, 0, 0, "-", "url"], [72, 0, 0, "-", "util"]], "deepcave.utils.cache": [[53, 1, 1, "", "Cache"]], "deepcave.utils.cache.Cache": [[53, 2, 1, "", "clear"], [53, 2, 1, "", "get"], [53, 2, 1, "", "has"], [53, 2, 1, "", "read"], [53, 2, 1, "", "set"], [53, 2, 1, "", "set_dict"], [53, 2, 1, "", "write"]], "deepcave.utils.cast": [[54, 3, 1, "", "optional_int"]], "deepcave.utils.compression": [[55, 1, 1, "", "Encoder"], [55, 3, 1, "", "deserialize"], [55, 3, 1, "", "serialize"]], "deepcave.utils.compression.Encoder": [[55, 2, 1, "", "default"]], "deepcave.utils.configs": [[56, 3, 1, "", "parse_config"]], "deepcave.utils.configspace": [[57, 3, 1, "", "sample_border_config"], [57, 3, 1, "", "sample_random_config"]], "deepcave.utils.converters": [[58, 3, 1, "", "extract_config"], [58, 3, 1, "", "extract_costs"], [58, 3, 1, "", "extract_value"]], "deepcave.utils.dash": [[59, 3, 1, "", "alert"], [59, 3, 1, "", "flash"]], "deepcave.utils.data_structures": [[60, 3, 1, "", "update_dict"]], "deepcave.utils.docs": [[61, 3, 1, "", "rst_to_md"]], "deepcave.utils.files": [[62, 3, 1, "", "make_dirs"]], "deepcave.utils.hash": [[63, 3, 1, "", "file_to_hash"], [63, 3, 1, "", "string_to_hash"]], "deepcave.utils.layout": [[64, 3, 1, "", "create_table"], [64, 3, 1, "", "get_checklist_options"], [64, 3, 1, "", "get_radio_options"], [64, 3, 1, "", "get_select_options"], [64, 3, 1, "", "get_slider_marks"], [64, 3, 1, "", "help_button"]], "deepcave.utils.logs": [[65, 3, 1, "", "get_logger"]], "deepcave.utils.multi_objective_importance": [[66, 3, 1, "", "get_weightings"], [66, 3, 1, "", "is_pareto_efficient"]], "deepcave.utils.notification": [[67, 1, 1, "", "Notification"]], "deepcave.utils.notification.Notification": [[67, 2, 1, "", "get_latest"], [67, 2, 1, "", "reset"], [67, 2, 1, "", "update"]], "deepcave.utils.run_caches": [[68, 1, 1, "", "RunCaches"]], "deepcave.utils.run_caches.RunCaches": [[68, 2, 1, "", "clear"], [68, 2, 1, "", "clear_run"], [68, 2, 1, "", "get"], [68, 2, 1, "", "set"], [68, 2, 1, "", "update"]], "deepcave.utils.styled_plotty": [[69, 3, 1, "", "generate_config_code"], [69, 3, 1, "", "get_color"], [69, 3, 1, "", "get_discrete_heatmap"], [69, 3, 1, "", "get_hovertext_from_config"], [69, 3, 1, "", "get_hyperparameter_ticks"], [69, 3, 1, "", "get_hyperparameter_ticks_from_values"], [69, 3, 1, "", "hex_to_rgb"], [69, 3, 1, "", "prettify_label"], [69, 3, 1, "", "save_image"]], "deepcave.utils.symbolic_regression": [[70, 3, 1, "", "convert_symb"], [70, 3, 1, "", "exp"], [70, 3, 1, "", "get_function_set"]], "deepcave.utils.url": [[71, 3, 1, "", "create_url"], [71, 3, 1, "", "parse_url"]], "deepcave.utils.util": [[72, 3, 1, "", "config_to_tuple"], [72, 3, 1, "", "custom_round"], [72, 3, 1, "", "get_latest_change"], [72, 3, 1, "", "get_random_string"], [72, 3, 1, "", "print_progress_bar"], [72, 3, 1, "", "short_string"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:exception"}, "terms": {"": [2, 8, 11, 12, 18, 34, 46, 68, 79, 92, 95, 98, 99, 101, 102, 103, 104, 107, 110, 113, 114], "0": [4, 5, 8, 9, 10, 12, 13, 43, 49, 72, 76, 78, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 102, 116], "00": [87, 93, 94, 116], "000": [87, 93, 94, 116], "000000": 69, "0001": [89, 92], "0001145199593038774": 76, "0005027533412617669": 76, "00295471450409257": 76, "006273080002552674": 76, "01": [9, 76, 102], "03493": 99, "05": [76, 92], "06": 76, "07654259389007832": 76, "08": [4, 5, 76], "1": [4, 5, 8, 42, 48, 69, 72, 73, 76, 81, 82, 83, 85, 86, 89, 91, 92, 96, 101, 102, 108, 112, 113, 114], "10": [4, 9, 10, 13, 64, 69, 72, 76, 83, 89, 92, 99], "100": [12, 72, 82, 89, 91, 92], "1000": 92, "100000": 70, "1048576": [4, 5], "115": 76, "1307": 92, "16": [5, 6, 8, 92], "19": 102, "1d": [9, 103], "1e": [4, 5, 76, 92], "2": [4, 5, 43, 72, 76, 81, 82, 83, 85, 92, 100, 101, 102, 108, 112, 113, 114, 115], "20": [89, 91, 102], "20000": 92, "2017937219730942": 76, "2022": 99, "2152466367713004": 76, "21973094170403584": 76, "22": 99, "2206": 99, "256": [76, 92], "28": 92, "29": 102, "2d": [9, 103, 104], "3": [5, 9, 69, 72, 76, 83, 85, 92, 93, 100], "30": [72, 89, 102], "3081": 92, "32": [76, 92], "3646716470095907e": 76, "39": 102, "3d": 103, "4": [42, 53, 57, 69, 76, 78, 81, 87, 92, 115], "40": [91, 102], "40000": 92, "42": 89, "48550": 99, "5": [9, 69, 76, 89, 92, 110], "50": 76, "500": [10, 13], "6": [69, 100, 115], "60": 91, "64": [4, 92], "69": 102, "7": [69, 92, 102, 116], "70": 102, "8": 92, "8333333333333334": 5, "9": [92, 100], "90": 89, "A": [2, 4, 5, 10, 11, 13, 14, 17, 18, 20, 22, 23, 24, 26, 27, 31, 32, 33, 34, 42, 45, 46, 47, 48, 50, 51, 64, 66, 69, 71, 72, 78, 94, 97, 98, 106, 112], "As": [81, 106, 108], "By": [2, 8, 9, 10, 11, 12, 13, 18, 34, 49, 56, 57, 69, 75, 104, 106, 107, 111], "For": [11, 18, 57, 69, 73, 75, 76, 80, 81, 96, 97, 101, 102, 104, 106, 107, 108, 109, 111, 112, 113, 114], "If": [2, 5, 7, 8, 9, 10, 11, 12, 13, 18, 20, 22, 24, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 53, 54, 56, 64, 68, 69, 70, 72, 75, 78, 79, 80, 84, 88, 96, 98, 99, 100, 101, 102, 106, 107, 109, 110, 115], "In": [18, 34, 45, 48, 49, 75, 78, 88, 90, 96, 97, 103, 105, 106, 107, 109, 110, 113, 114], "It": [4, 8, 9, 12, 15, 18, 23, 29, 33, 34, 46, 47, 72, 80, 95, 97, 104, 108, 109, 110, 113, 114], "No": [92, 102], "Not": [26, 27, 31, 32, 49], "On": [96, 110], "One": [18, 102, 103, 106], "The": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 18, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 79, 80, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "Then": [76, 102], "There": [79, 80, 102, 104, 109], "These": 110, "To": [2, 64, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 88, 90, 95, 98, 100, 101, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114], "Will": 69, "With": [69, 106], "_": [22, 23, 24, 25, 33], "__call__": [14, 15, 16, 17, 18, 20, 29], "__eq__": 47, "__init__": [75, 92, 107], "__iter__": 45, "__main__": [82, 83, 85, 86, 89, 92], "__name__": [82, 83, 85, 86, 89, 92], "__post_init__": [47, 51], "_clean_input": [22, 23, 24, 25, 26, 27, 31, 32, 33], "_dict_as_kei": 68, "_function": 70, "_train": 5, "ab": 99, "abc": [14, 18, 20, 29, 34, 49], "abl": [73, 74, 77, 79, 80, 81, 96], "ablat": [1, 11, 21, 22, 84, 87, 88, 116], "ablation_path": [21, 82, 87, 116], "ablation_paths_improv": 82, "ablation_paths_perform": 82, "ablationpath": [22, 82], "abort": [50, 76], "about": [46, 50, 64, 69, 101, 104, 105, 110, 114], "abov": 106, "absolut": [56, 96], "abstract": [8, 14, 18, 34, 49], "abstractrun": [2, 8, 9, 10, 11, 13, 18, 22, 23, 24, 25, 31, 34, 45, 46, 49, 68, 69, 107], "acceler": [92, 100], "accept": [18, 96], "access": [78, 99, 100, 105, 115], "access_al": 64, "accord": [52, 71, 98, 110, 111], "accur": [102, 104], "accuraci": [79, 89, 91, 92, 97, 113, 114], "accuracy_": 92, "achiev": [102, 104, 106, 111], "across": [4, 18, 104, 105, 106, 108, 110], "act": 109, "action": 96, "activ": [18, 89, 92, 100, 111], "activate_run_select": [18, 107], "actual": 104, "ad": [9, 46, 47, 49, 50, 60, 96, 98, 100, 115], "adam": [89, 92], "add": [37, 46, 48, 49, 73, 75, 78, 80, 89, 91, 92, 96, 98, 100, 107, 109, 111], "add_run": 46, "addit": [18, 48, 49, 51, 69, 75, 76, 88, 90, 96, 98, 107, 109], "addition": [47, 75, 99, 107, 112, 114], "additional_valu": 69, "adjust": [103, 104, 106, 114], "admin": [100, 115], "advanc": [89, 92], "affect": [97, 113], "after": [13, 18, 22, 23, 24, 25, 26, 27, 31, 32, 34, 72, 73, 75, 96, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113], "afterward": 5, "again": [68, 111], "against": 18, "aid": 99, "aim": [102, 104, 113], "ajust": 80, "al": 64, "alert": [52, 59], "algorithm": [1, 8, 12, 35, 42, 43, 97, 104, 113], "all": [2, 4, 5, 8, 9, 10, 11, 12, 13, 17, 18, 20, 29, 34, 46, 53, 64, 68, 69, 75, 88, 98, 102, 103, 104, 106, 111, 112, 113, 114, 116], "all_midpoint": 4, "all_run": 18, "all_siz": 4, "alloc": [97, 110], "allow": [45, 78, 81, 99, 101, 103, 105, 108, 110, 111, 114], "allow_nan": 55, "along": [103, 105, 111, 113, 114], "alpha": [69, 76, 86, 91], "alreadi": [46, 49, 82, 83, 85, 86, 109], "also": [5, 7, 9, 18, 24, 46, 47, 72, 80, 81, 96, 101, 104, 106, 110, 112], "altern": [73, 99], "alwai": [34, 36, 37, 38, 39, 40, 41, 42, 43], "amltk": [35, 78, 99], "amltkrun": 36, "among": 106, "amount": 110, "an": [1, 2, 8, 11, 12, 13, 18, 29, 30, 33, 34, 35, 36, 40, 41, 46, 47, 50, 52, 54, 57, 59, 64, 66, 69, 71, 74, 79, 84, 88, 89, 90, 97, 99, 102, 104, 108, 109, 110, 114], "anaconda": 100, "analys": 109, "analysi": [5, 101, 103, 104, 105, 106, 108, 109, 111, 112, 113], "analyz": [2, 4, 11, 77, 88, 90, 96, 99, 101, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114], "andr\u00e9": 99, "ani": [2, 4, 10, 11, 13, 18, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 45, 47, 48, 49, 51, 52, 53, 54, 55, 64, 68, 69, 71, 72, 75, 78, 96, 99, 107, 108, 109], "anoth": [2, 52, 60, 75], "anova": 108, "answer": [101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114], "anyth": 11, "api": [18, 82, 83, 85, 86, 87, 107, 116], "appli": [5, 101, 103, 104, 106, 108, 111, 112, 113, 114], "applic": [99, 105], "appreci": 98, "approach": [108, 110], "approxim": 104, "apt": [100, 115], "ar": [2, 8, 9, 10, 11, 12, 13, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 36, 38, 40, 42, 43, 44, 46, 47, 49, 51, 56, 57, 64, 68, 69, 73, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 92, 96, 97, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113], "arbitrari": [12, 13, 102], "area": [9, 32, 104], "arg": 45, "argmax": 92, "argument": [18, 57, 96], "aris": [79, 100], "around": 104, "arrai": [5, 9, 34, 66, 69], "arrang": 111, "arxiv": 99, "aspect": 109, "assembli": 34, "assertionerror": [46, 48, 68], "assess": [1, 8, 12, 102, 104, 105, 106, 108], "assign": 92, "assist": 75, "associ": [34, 78, 105, 110, 111], "assum": [73, 82, 83, 85, 86], "asynchron": 99, "attribut": [17, 18, 34, 45, 47, 49, 51], "author": 99, "auto": 81, "autoextract": 80, "autom": 99, "automat": [46, 69, 75, 96, 99], "automl": [35, 36, 77, 88, 90, 96, 99, 100, 101, 106, 108, 109], "avail": [18, 34, 46, 71, 75, 100, 102, 104, 106, 107, 111, 115], "available_run_class": 46, "available_run_yf": 46, "averag": [34, 113], "avoid": [70, 96], "awesom": 107, "ax": [104, 111], "axi": [69, 101, 103, 106, 110, 111, 113, 114], "b": [53, 60, 106, 112], "back": [18, 20, 73], "background": [69, 104], "balanc": [97, 110, 112], "bandit": [35, 37], "bar": [72, 89, 107, 108, 109, 110, 112], "barplot": 110, "base": [2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 64, 67, 68, 97, 98, 101, 106, 108, 110, 113], "bash": 100, "bash_profil": 100, "bashrc": [100, 115], "basic": [18, 20, 29, 75, 103, 107], "batch": [92, 97], "batch_idx": 92, "batch_siz": [76, 89, 92], "bayesian": [35, 37, 97], "becaus": [5, 18, 68, 79, 105, 112], "been": [2, 96, 104, 105, 110], "befor": [9, 18, 72, 73, 95, 97, 98, 108, 109], "beforehand": 18, "behavior": [69, 97], "being": [97, 100, 110], "belong": [36, 37, 38, 39, 40, 41, 42, 43, 46, 49, 75, 107], "benefit": 99, "bergman": 99, "best": [97, 104, 106, 110, 112], "beta": [7, 76, 86, 91], "better": [34, 75, 79, 98, 99, 107, 111, 113], "between": [9, 72, 102, 104, 114], "biedenkapp": 99, "binari": 64, "binary_rss_forest": 5, "block": [18, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 107, 109], "bo": 97, "bohb": [35, 78, 99, 100], "bohbrun": 37, "bool": [5, 8, 9, 12, 18, 20, 29, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 49, 53, 62, 64, 68, 69, 75], "boolean": [18, 66, 69], "bootstrap": [4, 5, 64], "border": [9, 52, 57, 104], "both": [18, 56, 64, 69, 76, 78, 96, 104, 106, 108, 109, 112], "bound": [3, 4, 5, 7, 47, 76, 80, 110], "branch": 98, "break": 108, "brew": [100, 115], "brief": 110, "briefli": 104, "broad": 104, "browser": 96, "bucket": 73, "budget": [2, 8, 9, 10, 11, 12, 13, 18, 34, 45, 48, 49, 51, 69, 76, 78, 80, 89, 91, 92, 97, 99, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114], "budget_correl": 19, "budget_id": [82, 83, 85, 86], "bug": 98, "build": 98, "built": 99, "button": [18, 29, 64, 96, 99, 109], "button_capt": [18, 29], "bypass": 99, "c": [2, 5, 8, 9, 10, 11, 13, 46, 53, 91, 92, 100], "cach": [18, 20, 22, 23, 24, 25, 26, 27, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 52, 68, 69, 99, 109], "cache_dir": 68, "calc_one_weight": 13, "calcul": [1, 2, 8, 9, 10, 11, 12, 13, 18, 29, 34, 45, 66, 68, 70, 72, 95, 101, 103, 104, 106, 108, 109, 111, 112, 113], "calculate_ablation_path": 11, "call": [5, 9, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 31, 32, 73, 80, 89, 107], "callabl": [18, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 69, 107], "callback": [15, 17, 18, 20, 29], "can": [3, 4, 5, 6, 8, 9, 12, 18, 25, 34, 45, 46, 48, 52, 57, 60, 67, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "cannot": [79, 100, 108], "capabl": [101, 102, 104, 105, 106, 108, 110, 113, 114], "caption": [18, 29], "captur": 114, "case": [11, 12, 13, 18, 22, 24, 27, 34, 48, 49, 50, 76, 95, 96, 98, 103, 112, 113, 114], "cast": [18, 52], "categor": [17, 69, 76, 111], "categori": [9, 17, 59, 89, 107], "categoricaldistribut": 79, "categoricalhyperparamet": [89, 92], "categorized_plugin": 17, "caus": [108, 111], "cave": 108, "cd": [100, 115], "certain": [34, 101, 105, 108, 110, 111], "cfg": 11, "chain": 53, "challeng": 102, "chanc": 92, "chang": [2, 11, 18, 20, 22, 23, 24, 25, 26, 27, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 53, 68, 75, 96, 98, 99, 101, 105, 106, 107, 108, 109, 110, 111, 113, 114], "changelog": 98, "channel": 92, "charact": [69, 72, 89], "characterist": [30, 31], "chart": 107, "check": [18, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 53, 75, 80, 98, 100, 109, 110, 115], "check_circular": 55, "check_equ": 34, "check_run_compat": 18, "check_runs_compat": [18, 107], "checklist": 64, "choic": [64, 89, 92, 97, 113], "choos": [2, 11, 99, 101, 103, 106, 107, 108, 112], "chose": 9, "chosen": [8, 10, 12, 13, 34, 46, 69, 101, 105], "circl": 95, "cite": 99, "cl": [18, 75], "class": [2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 67, 68, 69, 88, 90, 92, 96], "class_hint": 46, "classmethod": [18, 36, 37, 38, 39, 40, 41, 42, 43, 49, 75], "clean": [18, 22, 23, 24, 25, 26, 27, 31, 32, 33, 109], "clear": [34, 36, 37, 38, 39, 40, 41, 42, 43, 53, 68], "clear_run": 68, "clearer": 106, "clf": 89, "click": [18, 20, 96, 111, 112], "clone": [96, 100], "closer": 111, "cluster": 104, "cnn": 92, "code": [53, 69, 75, 76, 82, 83, 85, 86, 88, 89, 91, 92, 99, 107], "codebas": 98, "coeffici": 114, "collect": [78, 99, 114], "color": [9, 67, 69, 103, 113, 114], "colorscal": 69, "colour": [104, 110], "column": [34, 38, 73, 76, 110], "com": [96, 100], "combin": [8, 34, 49, 96, 99, 103, 104, 105, 106, 111, 112, 113, 114], "combined_cost": 34, "come": [96, 105], "command": [79, 82, 83, 85, 86, 88, 90, 96, 98, 100], "common": 18, "commun": 98, "compar": [18, 22, 23, 24, 25, 26, 27, 31, 32, 33, 47, 102, 103, 106, 108, 111, 112], "comparison": [27, 106], "compat": [18, 34, 44, 51, 100], "compet": 114, "complet": [89, 109, 111], "complex": 114, "compon": [5, 14, 16, 17, 18, 20, 29, 64, 69], "compos": 92, "comprehens": [104, 108], "compress": 52, "comput": [97, 104, 107, 112, 113], "compute_margin": 4, "concern": [35, 37, 44, 104], "conda": 100, "condit": [76, 79, 108, 113], "conduct": 102, "confid": [26, 101, 113], "config": [5, 9, 18, 20, 34, 45, 46, 48, 49, 52, 68, 72, 75, 89, 91, 92, 95, 96, 107], "config_i": 89, "config_id": [9, 31, 34, 45, 51, 69, 76], "config_id_map": 34, "config_spac": 7, "config_to_tupl": 72, "configru": 21, "configs_fn": 49, "configspac": [4, 5, 6, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 49, 52, 58, 73, 74, 75, 76, 80, 81, 83, 85, 89, 91, 92], "configspace_fn": 49, "configur": [2, 5, 7, 8, 9, 10, 11, 12, 13, 23, 30, 32, 34, 35, 38, 42, 43, 45, 47, 48, 49, 51, 52, 56, 57, 58, 65, 69, 72, 73, 74, 78, 81, 96, 97, 100, 101, 102, 106, 108, 109, 111, 112, 113, 114], "configuration_cub": 21, "configurationcub": 23, "configurationspac": [2, 5, 7, 8, 9, 10, 11, 13, 34, 38, 45, 49, 57, 58, 89, 91, 92], "configure_optim": 92, "connect": 92, "consid": [2, 8, 9, 10, 11, 12, 13, 34, 73, 79, 80, 82, 83, 85, 86, 100, 102, 103, 104, 106, 110, 111, 112, 113, 114, 115], "consist": [34, 101, 104], "constant": [5, 26, 27, 50, 53, 55, 91, 108], "constraint": 97, "constructor": 5, "consum": 29, "contact": 107, "contain": [2, 4, 10, 11, 13, 31, 32, 34, 45, 46, 47, 48, 49, 56, 58, 64, 66, 69, 71, 72, 75, 76, 77, 80, 108], "content": [18, 22, 23, 24, 25, 26, 27, 31, 32, 53, 80, 95, 107], "context": [97, 102, 108], "continous_neighbor": [10, 13], "continu": [10, 13, 102], "continue_abl": 11, "continuous_neighbor": [10, 13], "contrast": [34, 45, 106, 109], "contribut": [100, 101, 108], "control": 104, "conv1": 92, "conv2": 92, "conv2d": 92, "converg": [102, 106], "convergencewarn": 89, "convers": 102, "convert": [34, 46, 47, 50, 51, 52, 54, 55, 61, 63, 69, 70, 72, 76, 79, 81, 82, 83, 85, 86, 99], "convert_symb": 70, "coordin": [21, 25, 84, 87, 88, 100, 104, 116], "copi": 34, "copyright": 99, "core": [55, 70], "correct": 98, "correctli": [48, 74, 77, 81, 100], "correl": 19, "correspond": [6, 8, 11, 12, 13, 17, 31, 34, 49, 64, 65, 69, 75, 78, 82, 83, 85, 86, 104, 107, 109, 113], "cost": [11, 28, 34, 45, 48, 49, 51, 58, 66, 69, 89, 91, 92, 104, 109, 112], "cost_over_tim": 28, "costs_mean": [34, 45], "costs_std": [34, 45], "could": [16, 18, 46, 56, 95, 110], "count": 34, "cover": [102, 104], "cpu": [49, 51, 92], "cpu_tim": [49, 51], "crash": [50, 76, 92, 105, 110, 111], "creat": [1, 3, 4, 9, 14, 18, 21, 23, 26, 28, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 49, 52, 53, 62, 64, 67, 68, 71, 76, 81, 89, 96, 100, 103], "create_t": 64, "create_url": 71, "crowd": 111, "crucial": [101, 108], "csv": [38, 76], "cube": [21, 23], "current": [18, 22, 23, 24, 25, 26, 27, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 48, 69, 72, 76, 78, 97, 100, 109], "curv": [26, 113], "custom": [16, 17, 52, 55, 64, 69, 96, 111], "custom_round": 72, "cut": [34, 72], "cutoff": 4, "d": [47, 53, 57, 98], "danger": 67, "dash": [18, 52, 64, 69, 99], "dashboard": [96, 99], "data": [4, 5, 6, 8, 10, 11, 12, 13, 18, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 37, 41, 46, 47, 49, 55, 58, 60, 61, 64, 66, 68, 69, 73, 75, 78, 82, 83, 85, 86, 89, 92, 96, 97, 99, 107, 110, 113, 114], "data_dir": 92, "data_structur": 52, "datafram": [11, 34, 52, 55, 66, 73, 78, 99], "dataframerun": 38, "dataload": 92, "dataset": [89, 92, 113], "dbc": [22, 23, 26, 27, 32, 59, 64], "dcc": [22, 23, 24, 25, 26, 27], "debug": [20, 53, 99], "decid": 53, "decim": [70, 72, 89], "decis": 109, "decompos": 108, "decreas": [101, 102, 113, 114], "deem": 112, "deepcav": [73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 99, 100, 107, 109, 115], "deepcaverun": [39, 48, 82, 83, 85, 86], "deeper": 99, "def": [75, 89, 92, 107], "def_cost": 11, "default": [2, 4, 7, 8, 9, 10, 11, 12, 13, 18, 34, 46, 48, 49, 53, 55, 56, 57, 59, 62, 64, 67, 69, 72, 76, 80, 101, 110, 111], "default_config": [2, 11], "defin": [15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 35, 36, 38, 39, 40, 41, 42, 43, 47, 48, 52, 55, 64, 68, 72, 73, 75, 89, 92, 107], "definit": 102, "demonstr": [75, 107], "depend": [18, 20, 21, 26, 27, 34, 84, 87, 88, 101, 102, 114, 116], "depict": [107, 111], "deploy": 105, "depth": [4, 8, 76, 99, 105, 111], "describ": [98, 109, 114], "descript": [75, 98, 107], "deseri": [52, 55], "desir": 34, "destin": 98, "detail": [9, 27, 101, 104, 105, 108, 109, 110, 112], "detect": 99, "determin": [102, 104, 106, 108], "determinist": [48, 92, 104, 106, 112], "dev": 100, "deviat": [5, 6, 34, 45, 106], "devic": 92, "df": [11, 34, 66, 73], "dialog": [18, 20], "dict": [2, 4, 5, 8, 10, 11, 12, 13, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 34, 45, 46, 47, 48, 49, 51, 53, 55, 60, 64, 68, 71, 72, 92, 107], "dictionari": [2, 8, 11, 12, 13, 17, 18, 20, 22, 23, 24, 25, 26, 27, 31, 32, 34, 45, 46, 47, 48, 51, 52, 53, 60, 64, 71, 72, 107], "did": [75, 110, 111], "differ": [15, 18, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 44, 52, 68, 69, 72, 96, 100, 101, 105, 108, 110, 112], "digit": 89, "digits_sklearn": [89, 93, 116], "dim": 92, "dimens": [8, 103], "dimension": [103, 104, 109, 113], "direct": [76, 105], "directli": [77, 84, 88, 90, 99, 100, 107, 109], "directori": [34, 44, 46, 49, 52, 62, 68, 75, 78, 79, 96, 99, 107, 109], "disabl": [64, 112], "disable_spr": 100, "discov": 98, "discret": [9, 57, 69], "disk": 78, "displai": [16, 18, 20, 23, 59, 64, 69, 79, 96, 101, 103, 104, 106, 108, 110, 111, 112, 113, 114], "disregard": 113, "distanc": [9, 104], "distribut": 76, "distribution_alpha": 76, "distribution_beta": 76, "distribution_mu": 76, "distribution_sigma": 76, "div": [23, 24, 31], "do": [2, 11, 46, 64, 88, 90, 95, 96, 100, 105, 107, 109, 111, 115], "doc": [52, 70, 75, 98, 107], "document": [18, 99], "doe": [11, 49, 68, 79, 101, 102, 103, 104, 106, 108, 109, 111, 112, 113, 114], "doi": 99, "domin": [101, 108], "don": 69, "done": [34, 57, 96, 100, 109], "download": [82, 83, 85, 86, 88, 89, 91, 92, 100, 115], "drag": 111, "draw": 111, "drawn": 57, "dropdown": 18, "dropout": 92, "dropout_r": 92, "dtype": 55, "due": [100, 105], "dump": 79, "dure": [73, 97, 101, 104, 110, 113, 114], "dynam": [31, 33, 79, 107, 109], "dynamicplugin": [20, 23, 31, 33, 107], "e": [5, 9, 18, 33, 34, 53, 69, 74, 75, 79, 80, 89, 95, 96, 98, 105, 106, 111, 113, 114], "each": [2, 11, 64, 66, 68, 78, 101, 104, 107, 108, 110, 113, 114], "easi": 109, "easier": [53, 112], "easili": [99, 106], "eddi": 99, "edg": 104, "effect": [97, 106, 108, 112, 114], "effici": [66, 99, 101, 108, 112], "effortlessli": 99, "either": [18, 34, 56, 72, 106, 107, 111, 112], "elapsed_tim": 92, "element": [18, 20, 29], "elif": 92, "els": [27, 47, 92], "empti": [34, 47, 64], "enabl": [76, 99, 100, 105, 111, 112], "enclos": 96, "encod": [8, 11, 12, 34, 55, 66, 69], "encode_config": 34, "encompass": 78, "encount": 100, "end": [34, 48, 49, 51, 72, 73, 75, 82, 83, 85, 86, 89, 91, 92, 107], "end_tim": [48, 49, 51, 76, 92], "enforc": 69, "enough": 102, "ensur": [34, 36, 37, 38, 39, 40, 41, 42, 43, 68, 73, 82, 83, 85, 86, 100, 102], "ensure_ascii": 55, "entir": [108, 110], "enum": [29, 44, 50], "enumer": 89, "environ": 100, "epm": 34, "epoch": [48, 92, 97], "eps_pur": [4, 5], "equal": [34, 47, 101, 106], "equalscondit": 92, "error": [18, 44, 46, 98, 110, 112], "especi": [105, 108], "essenti": 105, "estim": [101, 113], "eval": 70, "evalu": [24, 34, 96, 97, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114], "everi": 34, "everyth": 98, "evolv": [103, 106, 114], "exactli": [79, 80], "examin": 106, "exampl": [34, 57, 73, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 100, 107, 109, 110, 111, 113, 114, 116], "examples_jupyt": 88, "examples_python": 88, "except": [11, 46, 89], "exclud": [9, 34], "exclude_config": 9, "exclus": 99, "execut": [87, 93, 94, 99, 107, 116], "exhibit": 111, "exist": [34, 49, 68, 98], "exit": 110, "exp": 70, "expand": [100, 115], "expect": [38, 49, 76, 100, 104, 110, 113], "expedit": 102, "expens": 97, "experi": [80, 99], "experiment": 97, "explain": [27, 96], "explan": [21, 27, 105], "explicit": [80, 114], "exploit": 97, "explor": [96, 97, 99, 104, 110], "exponenti": 70, "export": [100, 115], "express": [70, 108], "extend": 99, "extens": [69, 99], "extern": 97, "extract": [38, 58, 71], "extract_config": 58, "extract_cost": 58, "extract_valu": 58, "f": [79, 89, 92], "fa": 107, "face": 110, "facilit": 105, "fail": [50, 75, 76], "failur": 100, "fair": 102, "fals": [5, 9, 18, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 53, 55, 64, 76, 82, 85, 86, 92, 111], "fanova": [1, 3, 4, 10, 12, 13, 24, 34, 108, 111], "fanova_forest": 3, "fanovaforest": 4, "fashion": [82, 83, 85, 86], "fastest": 95, "favor": [104, 112], "featur": [4, 5, 7, 18, 98, 106, 111], "feedback": 98, "feel": [75, 96], "few": [73, 79, 80], "ff00ff": 69, "fidel": [48, 76, 101, 103, 104, 106, 108, 110, 111, 112, 113, 114], "field": 58, "figur": [22, 23, 24, 25, 26, 27, 32, 69, 82, 83, 85, 86, 107, 109], "figure1": [22, 82], "figure2": [22, 82], "file": [18, 34, 38, 46, 49, 52, 53, 56, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 93, 94, 95, 96, 98, 100, 107, 115, 116], "file_to_hash": 63, "filenam": [52, 53, 56, 61, 62, 63, 100, 115], "filenotfounderror": [18, 46], "fill": [18, 22, 23, 24, 25, 26, 27, 31, 32, 72, 89], "filter": [18, 22, 23, 24, 25, 26, 27, 31, 32, 82, 83, 85, 86, 101, 103, 104, 106, 107, 108, 109, 111, 112, 113], "filterwarn": 89, "final": [82, 83, 85, 86, 102, 105, 109, 111], "find": [34, 66, 70, 78, 97, 102, 104, 105, 110, 111], "finish": [73, 78, 95], "first": [18, 22, 23, 24, 25, 26, 27, 31, 32, 34, 75, 100, 102, 104, 107, 111, 113, 114, 115], "fit": [6, 11, 70, 89, 92, 114], "fix": [64, 98], "flash": [52, 59], "flask": 59, "flask_cach": 53, "flatten": 92, "flexibl": 18, "float": [2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 51, 57, 58, 69, 70, 72, 75, 76], "floatdistribut": 79, "flop": 79, "focu": [99, 103, 111], "focus": [104, 108], "folder": [76, 82, 83, 85, 86, 100, 115], "follow": [18, 20, 34, 49, 53, 73, 75, 76, 78, 79, 88, 90, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115], "font": 107, "fontsiz": 26, "footprint": [1, 30, 100], "forbidden": [76, 108], "forc": 69, "forest": [2, 3, 4, 5, 6, 8, 10, 12, 13, 101, 108, 113], "fork": 98, "form": [8, 34, 101, 108], "format": [38, 47, 50, 55, 61, 69, 73, 76, 77, 88, 89, 90, 98, 99, 100], "formula": [27, 114], "forward": 92, "found": [18, 24, 34, 46, 49, 92, 98, 100, 104, 115], "foundat": 14, "four": [57, 105], "fraction": [4, 108], "frame": 55, "framework": [81, 99], "frank": 99, "free": 75, "friendli": 47, "from": [2, 8, 9, 10, 11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 31, 32, 34, 37, 38, 39, 41, 45, 46, 47, 49, 52, 53, 55, 56, 57, 58, 62, 64, 68, 69, 72, 73, 75, 76, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116], "from_json": 47, "from_path": [36, 37, 38, 39, 40, 41, 42, 43, 49, 75, 82, 83, 85, 86], "front": [28, 66, 101, 108], "full": [82, 83, 85, 86, 89, 91, 92, 98, 102, 110], "fulli": [92, 99, 107], "function": [2, 7, 11, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 75, 89, 92, 97, 100, 101, 102, 103, 104, 106, 108, 112, 113, 114], "fundament": 78, "further": [8, 12, 34, 75, 96, 102, 110], "furthermor": [79, 114], "g": [5, 18, 33, 53, 69, 74, 75, 79, 80, 89, 95, 96, 98, 105], "gain": [99, 104], "galleri": 116, "gener": [8, 18, 21, 26, 27, 51, 52, 57, 64, 69, 72, 98, 99, 100, 103, 108, 109, 114], "generate_config_cod": 69, "generate_input": [18, 82, 83, 85, 86], "generate_output": [18, 82, 83, 85, 86], "get": [2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 53, 57, 64, 65, 68, 69, 70, 72, 84, 88, 89, 90, 100, 102, 110, 115], "get_ablation_improv": 2, "get_ablation_perform": 2, "get_all_cost": 34, "get_available_run_path": 46, "get_avg_cost": 34, "get_base_url": 18, "get_budget": 34, "get_budget_id": [34, 82, 83, 85, 86], "get_checklist_opt": 64, "get_color": 69, "get_config": 34, "get_config_id": 34, "get_configspac": [89, 92], "get_dataset": 89, "get_discrete_heatmap": 69, "get_encoded_data": 34, "get_filter_layout": [18, 22, 23, 24, 25, 26, 31, 32, 107], "get_function_set": 70, "get_group": 46, "get_highest_budget": 34, "get_hovertext_from_config": 69, "get_hyperparameter_tick": 69, "get_hyperparameter_ticks_from_valu": 69, "get_import": [8, 10, 11], "get_importances_": [12, 13], "get_incumb": 34, "get_input_layout": [18, 22, 23, 24, 25, 26, 27, 31, 32, 107], "get_internal_id": 18, "get_internal_input_id": 18, "get_internal_output_id": 18, "get_kei": 51, "get_latest": 67, "get_latest_chang": 72, "get_leaf_valu": 5, "get_link": 31, "get_logg": 65, "get_meta": 34, "get_model": [34, 45], "get_new_config_id": 45, "get_num_config": 34, "get_object": 34, "get_objective_id": [34, 82, 83, 85, 86], "get_objective_nam": 34, "get_origin": 34, "get_original_config_id": 45, "get_original_run": 45, "get_output_layout": [18, 22, 23, 24, 25, 26, 27, 31, 32, 33, 107], "get_pdp_figur": 26, "get_point": 9, "get_radio_opt": 64, "get_random_str": 72, "get_run": [45, 46], "get_run_input_layout": 18, "get_run_nam": 46, "get_se": 34, "get_select_opt": 64, "get_selected_group": 46, "get_selected_run": 18, "get_selected_run_nam": 46, "get_selected_run_path": 46, "get_slider_mark": 64, "get_statu": 34, "get_surfac": 9, "get_trajectori": [34, 45], "get_trial": 34, "get_trial_kei": 34, "get_typ": 7, "get_weight": 66, "get_working_directori": 46, "get_worst_valu": 47, "getcwd": 92, "git": [96, 98, 100], "github": [96, 98, 100], "give": [102, 109, 115], "given": [5, 6, 10, 13, 34, 37, 39, 41, 45, 49, 56, 64, 68, 69, 70, 71, 72, 75, 80, 97, 104, 106, 112], "global": [18, 34, 45, 83, 108], "go": [23, 24, 25, 26, 27, 69, 82, 83, 85, 86, 89, 91, 92, 107], "goal": [80, 102, 106, 109], "goe": 91, "good": [98, 102, 106], "govern": 97, "gplearn": 70, "gradient_clip": 76, "graph": [22, 23, 24, 25, 26, 27, 105, 106], "graphic": 99, "greatest": 108, "greatli": 98, "green": 104, "grid": [103, 104], "grid_points_per_axi": [26, 27], "group": [18, 34, 46, 96, 99, 105, 106, 110, 111, 112], "groupedrun": 46, "gui": 96, "guid": [75, 107], "guidelin": 102, "gz": [100, 115], "ha": [9, 13, 34, 36, 37, 38, 39, 40, 41, 42, 43, 53, 57, 64, 68, 73, 79, 80, 92, 96, 102, 103, 104, 113], "handi": [5, 110], "handl": [15, 17, 18, 20, 29, 34, 39, 46, 51, 52, 53], "happi": 109, "hash": [34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 52, 68, 75], "have": [2, 5, 11, 18, 22, 23, 24, 25, 26, 27, 31, 32, 64, 69, 73, 75, 76, 78, 82, 83, 84, 85, 86, 88, 90, 95, 96, 98, 100, 101, 104, 105, 107, 108, 109, 110, 115], "head": [11, 64], "headerlayout": 15, "heatmap": [9, 69, 110, 113], "height": 92, "help": [18, 64, 75, 95, 98, 99, 103, 104, 106, 107, 108, 111, 112], "help_button": 64, "here": [18, 20, 29, 82, 83, 85, 86, 91, 98, 102, 104, 108, 110, 111], "hesit": 107, "hex": 69, "hex_str": 69, "hex_to_rgb": 69, "hidden_layer_s": 89, "hide_hp": 85, "high": [91, 102, 103, 104, 106, 110, 111, 112], "higher": [8, 95, 102, 114], "highest": [8, 10, 12, 13, 34, 69, 102, 103, 104, 106, 110, 111, 112, 113, 114], "highli": 113, "highlight": [70, 104, 112], "hint": 46, "histori": [34, 45, 48, 49, 73, 75, 76, 77, 81], "history_df": 73, "history_fn": 49, "hit": 96, "hold": [33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 48, 52, 68, 76], "hopefulli": 107, "hover": [64, 69, 104], "hovertext": 69, "how": [8, 9, 10, 12, 13, 72, 75, 78, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115], "howev": [96, 106, 110], "hp": [2, 8, 9, 10, 11, 13, 34, 69], "hp1": 34, "hp2": 34, "hp_id": 4, "hp_it": 11, "hp_name": [2, 8, 10, 11, 12, 13, 70], "hpbandster": 74, "hpn": 34, "hpo": [96, 99, 109], "html": [23, 24, 27, 31, 64, 69, 70, 98], "http": [70, 96, 99, 100, 115], "human": 34, "hutter": 99, "hyperparamet": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 34, 35, 37, 57, 69, 76, 78, 79, 81, 82, 83, 85, 86, 89, 91, 92, 97, 99, 101, 103, 104, 105, 108, 109, 110, 111, 113, 114], "hyperparameter_nam": [83, 85], "hyperparameter_name_1": 86, "hyperparameter_name_2": 86, "i": [2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 18, 20, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 59, 62, 64, 66, 67, 68, 69, 70, 72, 74, 76, 79, 80, 89, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115], "ic": [26, 113], "icml": 99, "icon": 64, "id": [18, 20, 29, 34, 45, 46, 48, 49, 51, 68, 69, 105, 107, 110], "id_": 69, "idea": [88, 90, 98], "ideal": [102, 110], "identif": [34, 45, 51], "identifi": [18, 20, 34, 75, 97, 104, 111], "ignor": [69, 76, 89, 92], "imag": [69, 96], "immedi": [107, 109], "imp_var_dict": 13, "impact": [97, 101, 102, 108], "implement": [34, 108, 109], "import": [1, 2, 4, 8, 10, 11, 12, 13, 18, 21, 33, 66, 75, 79, 82, 84, 85, 86, 87, 88, 89, 91, 92, 98, 100, 101, 105, 106, 107, 109, 110, 111, 112, 116], "improv": [2, 11, 99, 101, 104], "in_channel": 92, "inact": 7, "includ": [4, 9, 18, 22, 24, 26, 27, 33, 34, 45, 46, 53, 64, 68, 69, 80, 96, 97, 98, 99, 101, 108, 110], "include_combin": 34, "include_combined_cost": 34, "include_config_id": 34, "include_group": 46, "include_nan": 69, "incorpor": [77, 88, 90, 92], "increas": [95, 101, 104, 105, 113, 114], "incumb": [2, 9, 10, 11, 13, 34, 97, 101, 104, 108], "incumbent_arrai": [10, 13], "incumbent_config": 11, "indent": 55, "independ": 69, "index": [72, 75, 107], "indic": [4, 64, 66, 102, 104, 110, 111, 113], "individu": [4, 8, 105, 106, 108, 112, 113], "inf": [4, 47, 48, 49], "infer": [102, 104], "influenc": [103, 108, 109], "info": 59, "inform": [4, 18, 20, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 46, 48, 49, 50, 51, 52, 64, 69, 71, 104, 105, 107, 109, 112, 115], "inherit": [56, 96], "initi": [34, 89], "inplac": [52, 60], "input": [5, 6, 11, 18, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 52, 68, 69, 70, 71, 82, 83, 85, 86, 107, 109], "inputs_kei": 68, "insid": [46, 75, 96, 100, 115], "insight": [99, 104, 108, 109, 111], "inspect": 103, "instal": [74, 75, 79, 80, 88, 90, 95, 96, 98, 107], "instanc": [5, 7, 36, 40, 42, 43, 46, 47, 69, 73, 79, 81, 102, 111, 112], "instance_featur": [4, 5, 7], "instanti": [46, 82, 83, 85, 86], "int": [2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 26, 27, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 54, 57, 64, 69, 70, 72, 89, 92], "intdistribut": 79, "integ": [9, 34, 57, 76], "integr": [99, 105, 107], "intens": 99, "intenum": 50, "interact": [84, 88, 96, 100, 108, 111, 115], "interest": [9, 18, 20, 108], "interfac": [82, 83, 85, 86, 109], "intermedi": 62, "intern": [9, 10, 13, 18, 46, 49], "interpret": [78, 96], "interv": 4, "invalid": [34, 69], "invest": 104, "investig": 103, "involv": [34, 97], "io": [100, 115], "ip": 96, "ipynb": [82, 83, 85, 86, 89, 91, 92], "is_effici": 66, "is_pareto_effici": 66, "is_run": 46, "is_valid_run": [36, 37, 38, 39, 40, 41, 42, 43, 49, 75], "issu": [95, 98, 100], "item": [64, 89, 111], "item_0": 76, "item_1": 76, "iter": [2, 11, 34, 45, 57, 72, 89, 97, 101], "its": [15, 18, 22, 23, 24, 25, 26, 27, 31, 32, 34, 49, 52, 68, 69, 71, 78, 80, 97, 100, 104, 105, 108, 109], "itself": [34, 45, 51, 102, 104], "job": 96, "join": 92, "json": [18, 22, 23, 24, 25, 26, 27, 31, 32, 47, 51, 53, 55, 73, 74, 75, 80, 81], "json_default_separ": 55, "json_dense_separ": 55, "jsonencod": 55, "jsonl": 77, "jupyt": [82, 83, 85, 86, 88, 89, 91, 92], "just": [2, 75, 80, 92, 107], "keep": 5, "kei": [18, 34, 45, 46, 48, 51, 53, 68, 83, 85], "kernel_s": 92, "keyword": 18, "kind": [104, 109], "know": [73, 105, 110], "known": 104, "kwarg": [18, 45, 92], "label": [64, 69], "largest": [2, 11, 101], "last": [34, 48, 110, 111], "last_trial_id": 48, "lastli": 110, "later": 92, "latest": [34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 67, 70, 75, 110], "latest_chang": [34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 75], "latter": 100, "layer": [88, 90, 93, 97, 116], "layout": [18, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 52], "lead": [2, 11, 101, 113], "leaf": 5, "learn": [97, 99, 101, 113, 114], "learning_r": [89, 92], "learning_rate_init": [76, 89], "least": [77, 102], "left": [96, 111], "len": 89, "length": [34, 64, 72, 89], "let": [104, 110], "level": 110, "leverag": [27, 79, 104, 108], "li": 41, "librari": 107, "licens": 99, "lightningmodul": 92, "like": [22, 23, 24, 25, 26, 27, 31, 32, 78, 98, 100, 102, 104, 107, 109, 115], "limit": [79, 97, 101, 108, 111], "lindauer": 99, "line": [72, 73, 89, 106, 107, 110, 111], "linear": [92, 110], "link": [31, 69, 100, 105, 110], "linspac": 92, "linux": [100, 115], "list": [2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 45, 46, 49, 51, 55, 58, 64, 66, 69, 70, 75, 83, 85, 105, 107], "ll": 110, "load": [18, 22, 23, 24, 25, 26, 27, 31, 32, 38, 46, 49, 53, 56, 68, 73, 74, 76, 77, 79, 80, 81, 82, 83, 85, 86, 96, 99, 100, 107], "load_configspac": 38, "load_dependency_input": [18, 22, 23, 24, 25, 26, 27, 31, 32, 33, 107], "load_digit": 89, "load_input": [18, 22, 23, 24, 25, 26, 27, 31, 32, 33, 107], "load_object": 38, "load_ouputs_mo_fanova": 24, "load_output": [18, 22, 23, 24, 25, 26, 27, 31, 32, 33, 82, 83, 85, 86, 107], "load_outputs_mo": 22, "load_run_input": 18, "load_trial": 38, "local": [1, 10, 13, 24, 96, 108], "locat": [22, 23, 24, 25, 26, 27, 31, 32, 33, 56, 69, 82, 83, 85, 86, 104], "lock": 47, "lock_low": 47, "lock_upp": 47, "log": [48, 52, 76, 78, 82, 83, 85, 86, 88, 89, 90, 91, 92, 96], "log_i": 5, "log_softmax": 92, "logarithm": [5, 106, 110], "logger": [14, 20, 29, 34, 46, 65, 68], "logger_nam": 65, "logist": 89, "logit": 92, "long": [75, 106], "longer": [8, 69, 102, 109, 111], "look": [11, 34, 46, 76, 78, 84, 88, 96, 98, 107, 109], "loop": 89, "loss": [92, 97], "loss_": 92, "lot": 18, "low": [91, 102, 109, 110, 111, 112], "lower": [34, 38, 47, 50, 76, 89, 91, 92, 102, 104], "lowest": [34, 102], "lpi": [1, 13, 24, 108], "lr": 92, "m": 98, "m1": 100, "mac": 115, "machin": [95, 99, 113], "maco": 100, "made": [29, 45], "mai": [100, 102, 103, 104, 107, 111], "main": [96, 98, 109], "maintain": 98, "make": [34, 84, 88, 95, 96, 98, 100, 112, 115], "make_dir": 62, "manag": [35, 37, 45, 111], "mani": [8, 9, 10, 12, 13, 92, 99, 103, 109, 110, 111], "manipul": 73, "manual": [73, 107], "map": [18, 34, 103, 104], "margin": [4, 5, 8, 12, 64], "mariu": 99, "mark": [64, 104], "markdown": [52, 61], "match": [5, 48, 49], "mathemat": 70, "matplotlib": 24, "matter": 101, "max": 9, "max_decim": 72, "max_depth": [4, 5], "max_epoch": 92, "max_hp": 11, "max_hp_perform": 11, "max_hp_std": 11, "max_it": 89, "max_nod": [4, 5], "max_sampl": [26, 27], "max_shown_sampl": [26, 27], "maxim": [38, 76, 97], "maximum": [70, 72, 99, 104, 106], "maxpool2d": 92, "mb": [64, 87, 93, 94, 116], "md": [9, 52, 61, 98, 104], "mean": [5, 6, 8, 10, 11, 45, 75, 102, 106], "measur": 102, "mem": [87, 93, 94, 116], "memoryout": [50, 76, 92], "mention": [82, 83, 85, 86, 104, 106], "menu": 96, "merg": [18, 22, 23, 24, 25, 26, 27, 31, 32, 34, 46, 47, 98], "merge_cost": 34, "mergeabl": [44, 47], "meshgrid": 9, "messag": [59, 67], "meta": [33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 75, 114], "meta_fn": 49, "metadata": 38, "method": [2, 11, 18, 22, 23, 24, 25, 26, 27, 31, 32, 33, 38, 69, 83, 101], "metric": [38, 69, 76, 79, 97, 105, 114], "mid": 102, "midpoint": [4, 8, 12], "might": [8, 69, 75, 95, 101, 105, 107, 109, 111, 112], "min_decim": 72, "min_epoch": 92, "min_samples_leaf": [4, 5], "min_samples_split": [4, 5], "minim": [76, 82, 83, 85, 86, 88, 90, 93, 97, 116], "minimum": [72, 97, 104], "minmaxscal": 5, "misc": 99, "miss": [18, 105], "mistak": 98, "mkdir": [100, 115], "mlp": 92, "mlpclassifi": 89, "mnist": 92, "mnist_ful": 92, "mnist_pytorch": [88, 90, 92, 93, 96, 116], "mnist_test": 92, "mnist_train": 92, "mnist_val": 92, "mnistmodel": 92, "mo": 11, "moablat": 11, "mode": [18, 72, 84, 88, 98, 99, 100, 115], "model": [2, 3, 4, 5, 6, 9, 10, 11, 13, 34, 35, 42, 43, 45, 48, 49, 92, 97, 101, 104, 108, 113, 114], "model_select": 89, "models_dir": [34, 49], "moder": 102, "modul": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "mofanova": 12, "molpi": 13, "moment": 107, "monitor": [78, 99], "more": [18, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 44, 76, 80, 89, 92, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "moreov": [18, 34], "most": [33, 97, 101, 104, 108, 110, 111], "mostli": 110, "much": [8, 108, 109], "multi": [11, 12, 13, 22, 24, 34, 48, 49, 66, 76, 82, 83, 88, 90, 93, 100, 103, 104, 106, 109, 110, 111, 112, 113, 114, 116], "multiclass": 92, "multidimension": 9, "multipl": [12, 18, 34, 51, 92, 102, 103, 104, 106, 111, 112, 113, 114], "multitud": 113, "must": [5, 18, 22, 23, 24, 25, 26, 27, 31, 32, 34, 56, 68, 69, 76, 79, 96, 112], "my": [95, 107], "my_first_convert": 75, "my_first_plugin": 107, "myfirstconvert": 75, "myfirstplugin": 107, "n": [89, 94, 100, 101, 108, 111], "n_cost": 66, "n_decim": 70, "n_epoch": 92, "n_featur": 5, "n_hp": [82, 83, 85], "n_object": 5, "n_param": [4, 5], "n_point": 66, "n_sampl": 5, "n_tree": [4, 5, 6, 8, 10, 12, 13, 82, 83], "n_worker": 96, "name": [2, 5, 8, 10, 11, 12, 13, 18, 29, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 56, 62, 65, 66, 69, 70, 71, 73, 75, 76, 79, 80, 89, 91, 92, 96, 107, 110, 112], "name_str": 58, "nan": 69, "nativ": [77, 78, 88, 90, 99], "natur": 103, "nav_point": 17, "navig": [18, 96, 110], "ndarrai": [4, 5, 6, 7, 10, 11, 13, 34, 55, 66, 70], "nearest": 72, "necessari": [18, 22, 23, 24, 25, 26, 27, 31, 32, 68, 72, 74, 75, 79, 80, 102, 105], "need": [5, 8, 12, 18, 53, 68, 73, 74, 75, 76, 77, 80, 81, 88, 90, 97, 98, 100, 106, 109], "neglig": 102, "neighbor": [10, 13], "nest": 69, "network": [97, 102], "neural": [97, 102], "neural_network": 89, "new": [9, 34, 36, 37, 38, 40, 42, 43, 45, 46, 49, 75, 78, 89, 98, 107, 109], "newer": [81, 107], "newli": 75, "next": [75, 80, 101, 109, 110], "nice": 110, "nll_loss": 92, "nn": [34, 49, 92], "noisi": 104, "non": [22, 24, 26, 48, 69, 99, 101, 104, 106, 108, 112], "none": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 20, 22, 26, 27, 29, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 60, 62, 64, 67, 68, 69, 70, 71, 72, 82, 83, 89, 92], "norm": 11, "normal": [7, 34, 66, 76, 92, 101], "not_evalu": [50, 76, 110], "notabl": 110, "note": [8, 34, 76, 82, 83, 85, 86, 98, 101, 104, 107], "notebook": [82, 83, 85, 86, 88, 89, 91, 92], "notfound": 16, "notfoundlayout": 16, "noth": 46, "notic": 103, "notif": 52, "notmergeableerror": [18, 34, 44, 46, 47], "notvalidrunerror": [44, 46], "now": [8, 12, 72, 92, 100, 115], "np": [5, 6, 7, 11, 34, 47, 48, 49, 55, 70, 91, 92], "num": 92, "num_class": 92, "num_config": [89, 92], "num_neuron": 92, "num_neurons_layer1": [89, 92], "num_neurons_layer2": [89, 92], "num_run": 92, "num_sanity_val_step": 92, "num_work": 92, "number": [4, 5, 8, 10, 13, 22, 24, 27, 34, 49, 64, 69, 70, 72, 80, 89, 96, 97, 101, 102, 103, 104, 106, 108, 114], "numer": [76, 80], "numpi": [10, 13, 34, 66, 69, 91, 92, 100], "o": 92, "obj": [34, 55], "obj1": 34, "obj2": 34, "objc_disable_initialize_fork_safeti": 100, "object": [2, 5, 8, 9, 10, 11, 12, 13, 18, 20, 22, 23, 24, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 51, 53, 55, 59, 63, 66, 67, 68, 69, 75, 76, 79, 80, 82, 83, 89, 91, 92, 97, 102, 103, 104, 106, 109, 111, 112, 113, 114], "objective_id": [34, 85, 86], "objective_id1": [82, 83], "objective_id2": [82, 83], "objectives_norm": [11, 66], "objm": 34, "observ": 78, "obtain": [27, 34, 114], "occur": [99, 112], "offer": [78, 99, 105, 109, 111, 112], "offici": 100, "often": [8, 97, 106], "older": 81, "omit": 76, "onc": [18, 102, 107], "one": [2, 11, 13, 18, 34, 46, 47, 52, 60, 79, 80, 95, 99, 101, 103, 104, 107, 108, 110, 113, 114], "ones": 97, "onli": [5, 8, 9, 12, 18, 22, 23, 24, 25, 26, 27, 31, 32, 34, 46, 57, 64, 68, 69, 101, 103, 104, 106, 108, 111, 112, 113, 114], "onward": 110, "open": [79, 96, 98, 109], "openbla": 100, "oppos": 100, "optim": [27, 34, 35, 37, 47, 76, 78, 81, 89, 91, 92, 96, 97, 100, 101, 102, 103, 104, 106, 110, 111, 112, 114], "option": [2, 7, 8, 9, 10, 11, 12, 13, 18, 34, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 62, 64, 67, 68, 69, 70, 71, 72, 79, 89], "optional_int": 54, "optuna": [35, 78, 99, 100], "optuna_studi": 79, "optunarun": 40, "orang": 104, "order": [8, 12, 76, 88, 90, 101, 103, 111], "org": [70, 99], "origin": [34, 45, 48, 49, 105], "original_config_id": 45, "origins_fn": 49, "other": [47, 82, 83, 85, 86, 89, 92, 96, 99, 101, 103, 104, 105, 106, 108, 112, 113], "otherwis": [18, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 49, 71, 106, 107], "our": [53, 78, 98, 99, 109], "out": [75, 92, 96, 110], "out_channel": 92, "outperform": 106, "output": [18, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 64, 68, 80, 82, 83, 85, 86, 92, 107, 109], "over": [2, 5, 11, 28, 34, 45, 47, 64, 103, 104, 109, 112], "overal": [10, 13, 33, 108], "overflow": 70, "overrid": [11, 12, 13], "overview": [30, 84, 88, 104], "overwrit": 48, "overwritten": 49, "own": [68, 78, 80, 98, 107, 109], "p": [100, 115], "packag": [6, 88, 90, 100], "pad": 92, "page": [16, 96, 109, 115], "palett": 69, "panda": [55, 58, 66, 73, 78, 99], "paper": [99, 101, 108, 114], "parallel": [21, 25, 84, 87, 88, 100, 116], "parallel_coordin": [21, 85, 87, 116], "parallelcoordin": [25, 85], "param": 89, "paramet": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 92, 97, 101, 104, 108, 114], "parent": 62, "pareto": [28, 66, 101, 108], "pareto_front": 28, "parquet": 73, "pars": [18, 52, 56, 71], "parse_config": 56, "parse_url": 71, "parser": 73, "parsimoni": 114, "part": [47, 107, 110], "partial": [21, 26, 27, 84, 87, 88, 114, 116], "partialdepend": [26, 86], "particular": [18, 20, 69, 99, 106], "particularli": [9, 34, 103, 104, 106], "pass": [2, 5, 8, 12, 13, 18, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 46, 48, 72, 75, 96, 98, 111], "past": [18, 20], "path": [1, 2, 11, 18, 21, 22, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 56, 61, 62, 63, 68, 71, 75, 79, 83, 84, 85, 86, 87, 88, 92, 96, 100, 107, 115, 116], "path_nam": [36, 37, 38, 39, 40, 41, 42, 43, 46, 49], "pathlib": [82, 83, 85, 86], "pathnam": [37, 71], "pattern": 111, "pca": 5, "pca_compon": [4, 5], "pd": [11, 34, 38, 55, 58], "pdp": [21, 27, 86, 87, 113, 116], "peak": 106, "penal": 114, "penalti": 114, "per": [10, 13, 104, 106, 107, 112], "percent": 89, "percentag": 72, "percentil": 4, "perceptron": [88, 90, 93, 116], "perfect": 104, "perfectli": 102, "perform": [2, 9, 11, 32, 97, 99, 101, 102, 106, 108, 109, 110, 111, 112, 113, 114], "perfrom": 2, "perpetu": 99, "pickl": 79, "pictur": 106, "pinpoint": 108, "pip": [74, 79, 80, 88, 90, 100], "pipelin": 73, "pkl": 79, "pl": 92, "place": [72, 80, 111], "placement": 64, "plai": [82, 83, 85, 86], "plane": 103, "platform": 100, "pleas": [22, 23, 24, 25, 26, 27, 31, 32, 33, 75, 76, 77, 78, 80, 82, 83, 85, 86, 96, 98, 99, 100, 101, 107, 108, 109, 114], "plot": [9, 21, 26, 27, 52, 69, 101, 103, 108, 110, 112, 113, 114], "plotli": [32, 52, 69], "plotti": 69, "plugin": [17, 46, 68, 69, 82, 83, 85, 86, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114], "plugin_id": 68, "pluginst": 29, "plugintyp": 107, "png": [82, 83, 85, 86], "point": [4, 5, 6, 9, 66, 73, 75, 78, 79, 80, 97, 101, 103, 104, 106, 108, 109], "popov": 64, "popul": 114, "port": 96, "posit": [18, 64, 89], "possibl": [18, 52, 54, 56, 57, 69, 71, 104, 106, 110], "possibli": 110, "potenti": 92, "power": [99, 107], "pre": [18, 22, 23, 24, 25, 26, 27, 31, 32, 96], "pred": 92, "predict": [2, 5, 6, 11, 34, 108], "predict_margin": 5, "prefer": [99, 103, 104, 111], "prefix": [45, 48, 49, 72, 89], "prepar": [10, 13, 18, 22, 23, 24, 25, 26, 27, 31, 32, 33], "prepare_data": 92, "present": [69, 82, 83, 85, 86, 105, 113], "preserv": 104, "prettifi": 69, "prettify_label": 69, "prevent": 18, "preventupd": 18, "previou": [2, 11, 18, 26, 27, 31, 32, 102], "previous_input": [18, 26, 27, 31, 32, 107], "princip": 5, "print": [72, 89], "print_end": 72, "print_progress_bar": [72, 89], "printend": 89, "prior": 101, "probabilist": 97, "problem": 100, "process": [18, 22, 23, 24, 25, 26, 27, 29, 31, 32, 34, 35, 37, 75, 78, 89, 97, 99, 100, 101, 104, 106, 107, 109], "profil": 73, "prog_bar": 92, "programmat": 105, "progress": [72, 89, 102, 110], "progress_bar": 89, "project": [98, 99], "properti": 75, "provid": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 75, 76, 78, 80, 103, 104, 105, 106, 108, 109, 110, 111, 114], "prune": [50, 76], "publish": 99, "pull": 109, "purpl": 104, "purpos": 2, "push": 98, "put": 76, "pwd": [100, 115], "py": [75, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 107, 116], "pypdp": 6, "pyrfr": [4, 5, 34, 108], "pyrfr_map": 5, "python": [56, 75, 82, 83, 85, 86, 88, 89, 91, 92, 98, 100, 105, 107], "pytorch": [81, 88, 90, 93, 116], "pytorch_lightn": 92, "qualiti": 113, "quantifi": 114, "question": [75, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114], "queue": [29, 95, 96, 109], "quick": 109, "quickli": 106, "quot": 96, "r": [10, 13, 89, 91, 92], "radio": 64, "rai": 80, "rais": [2, 7, 8, 9, 10, 11, 12, 13, 18, 22, 24, 26, 27, 34, 36, 40, 42, 43, 44, 46, 47, 48, 49, 53, 56, 64, 68, 69, 72, 92], "random": [2, 3, 5, 6, 8, 10, 12, 13, 52, 57, 72, 91, 92, 101, 104, 108, 113, 114], "random_forest": 3, "random_forest_surrog": 3, "random_split": 92, "random_st": 89, "randomforest": [3, 4, 5, 6, 10, 13], "randomforestsurrog": 6, "randomli": [101, 104], "randomst": [10, 13], "rang": [57, 79, 89, 92, 99, 102, 111], "rate": [9, 95, 96, 97, 113, 114], "ratio_featur": [4, 5], "raw": [18, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 68, 107], "raw_output": [18, 20, 29], "raytun": [35, 78], "raytunerun": 41, "rc": 46, "re": 111, "reach": [16, 75, 102, 106], "read": [18, 22, 23, 24, 25, 26, 27, 31, 32, 33, 38, 53], "readabl": 34, "readi": [46, 109], "real": 18, "realml": 99, "realml2022": 99, "reason": 98, "receiv": [109, 110], "recommend": [79, 100, 107], "record": [89, 92, 93, 99, 100, 116], "red": 104, "redi": 95, "redirect": [18, 20, 96, 112], "reduc": [57, 102], "reduct": 104, "refer": [46, 97, 98, 102, 107, 108], "refin": [101, 103, 104, 106, 108, 111, 112, 113], "reflect": 104, "refresh": [95, 96], "refresh_r": 95, "regard": [109, 110], "regardless": 101, "region": [104, 113], "regist": [15, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 69], "register_callback": [15, 17, 18, 20, 29], "register_input": [18, 22, 23, 24, 25, 26, 27, 31, 32, 33, 69], "register_output": [18, 23, 25, 32], "regress": [3, 5, 70, 114], "regressor": 70, "regsit": 25, "regularli": 78, "reject": 9, "rejection_r": 9, "rel": [56, 96, 106, 112], "relat": [4, 111, 114], "relationship": [102, 114], "releas": [100, 115], "relev": 111, "reli": [81, 108], "reliabl": 80, "relianc": 100, "relu": [89, 92], "remov": [46, 68, 108, 111], "remove_run": 46, "render": 18, "render_button": 18, "ren\u00e9": 99, "replac": [70, 79, 82, 83], "report": 98, "reposit": 111, "repositori": [96, 98], "repres": [34, 50, 51, 78, 97, 102, 103, 104, 113, 114], "represent": [10, 13, 38, 51, 102, 104], "request": [34, 109], "requir": [18, 69, 89, 115], "research": 99, "reserv": 96, "reset": [34, 52, 53, 67, 68], "resolut": 104, "resourc": [97, 99, 102, 104, 110], "respect": [2, 8, 11, 12, 100, 110, 113, 114], "respond": 34, "restrict": 23, "restructuredtext": [52, 61, 98], "result": [11, 18, 22, 23, 24, 25, 26, 27, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 47, 68, 77, 78, 80, 88, 90, 92, 99, 100, 101, 102, 106, 108, 109, 110, 113, 114], "retri": 9, "retriev": [34, 46, 53, 67, 69, 105], "return": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 89, 92, 107], "reveal": 98, "review": 98, "rgb": 69, "rgba": 69, "right": [8, 12, 46, 111, 112], "rm": [100, 115], "role": [82, 83, 85, 86], "root": [100, 115], "round": [70, 72, 92], "round_plac": 72, "row": [22, 23, 26, 27, 32, 64], "rst": [52, 61, 75, 107], "rst_to_md": 61, "run": [1, 2, 8, 9, 10, 11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 52, 68, 69, 70, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 88, 90, 92, 93, 96, 98, 99, 100, 102, 104, 105, 106, 109, 110, 112, 113, 115, 116], "run_1": 82, "run_2": [83, 85, 86], "run_cach": [46, 52], "run_id": [45, 46, 92], "run_nam": [36, 38, 40, 42, 43, 45], "run_path": [45, 46], "runcach": [46, 68], "runhandl": 46, "runhistori": 81, "runinequ": 44, "runtim": 18, "runtimeerror": [2, 8, 9, 10, 11, 12, 13, 18, 22, 24, 26, 27, 34, 36, 40, 42, 43, 46, 47, 49, 53, 56, 69, 92], "safe": 70, "same": [8, 18, 34, 64, 69, 76, 82, 83, 85, 86, 102, 103, 104, 106, 109, 111], "sampl": [4, 5, 52, 57, 104, 113], "sample_border_config": 57, "sample_configur": [89, 91, 92], "sample_random_config": 57, "samples_per_hp": [26, 27], "saniti": [92, 109, 110], "sass": 99, "save": [46, 49, 68, 69, 73, 74, 76, 77, 79, 81, 88, 90, 99, 109], "save_imag": 69, "save_path": [48, 89, 91, 92], "saw": 107, "sbin": [100, 115], "scalar": [101, 104, 108], "scale": [5, 9, 82, 83, 85, 103, 106, 110], "scaler": 5, "scatter": 104, "scenario": 110, "schema": 18, "scheme": [101, 108], "score": [8, 10, 11, 12, 13, 23, 73, 89, 101, 102, 103, 104, 106, 108, 111, 112, 113, 114], "script": 100, "search": [9, 76, 79, 102], "search_spac": 73, "second": [48, 101, 108, 113, 114], "section": [96, 98, 105, 110], "see": [18, 22, 23, 24, 25, 26, 27, 31, 32, 33, 70, 77, 88, 90, 96, 100, 101, 106, 107, 108, 110, 112, 114, 115], "seed": [4, 5, 6, 8, 10, 12, 13, 34, 48, 49, 51, 76, 78, 89, 91, 92, 104, 106, 110, 112, 114], "seed_everyth": 92, "seek": 112, "select": [4, 8, 10, 12, 13, 18, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 45, 46, 52, 64, 68, 75, 76, 96, 98, 99, 101, 102, 103, 104, 105, 106, 110, 111, 112, 113, 114], "selected_id": 34, "selected_run_path": 46, "self": [14, 15, 16, 17, 18, 46, 47, 75, 92, 99, 107], "separ": [18, 55], "sequenti": [35, 42, 43, 92], "seri": 58, "serial": [18, 22, 23, 24, 25, 26, 27, 31, 32, 49, 52, 55], "serializ": [18, 22, 23, 24, 25, 26, 27, 31, 32], "serv": [109, 110], "server": [18, 95, 96], "servic": 100, "set": [5, 9, 18, 34, 46, 47, 48, 51, 52, 53, 65, 68, 70, 79, 80, 95, 97, 101, 107, 108], "set_dict": 53, "set_metric_nam": 79, "set_working_directori": 46, "setup": [73, 92], "sgd": 89, "shall": 34, "shallow": 34, "shape": 5, "share": [103, 104, 111], "short": [75, 107], "short_str": 72, "shorten": [52, 69, 72], "should": [5, 8, 9, 10, 12, 13, 18, 31, 34, 45, 46, 47, 48, 62, 64, 68, 69, 70, 75, 76, 80, 96, 97, 98, 102, 104, 106, 107, 109, 112], "show": [9, 18, 26, 69, 82, 83, 85, 86, 89, 91, 92, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114], "show_confid": [26, 82, 86], "show_ic": [26, 86], "show_important_onli": 85, "show_unsuccess": 85, "shown": [18, 69, 104, 107, 109], "side": 109, "sidebarlayout": 17, "sigmoid": 92, "signific": 101, "significantli": [97, 102], "similar": 114, "simpl": [72, 75, 107], "simpler": [50, 114], "simpli": [100, 107, 115], "simplif": 5, "simplifi": 70, "sinc": [18, 48, 53, 68, 105, 109], "singl": [18, 101, 103, 108, 112], "situat": 102, "size": [4, 8, 12, 69, 97, 104, 114], "skipkei": 55, "sklearn": [81, 88, 90, 93, 116], "slice": 103, "slider": [64, 103], "slightli": 112, "slow": 95, "smac": [78, 99], "smac3v1": 35, "smac3v1run": 42, "smac3v2": [35, 41], "smac3v2run": 43, "small": 104, "smaller": [9, 27, 72], "smallest": 101, "so": [18, 23, 25, 31, 32, 68, 88, 90, 95, 103, 107], "solut": [97, 101, 108], "solver": 89, "some": [76, 88, 90, 92, 95, 96, 100, 109, 110, 111], "someth": [18, 100, 115], "somewhat": 102, "soon": [47, 109], "sort": [8, 12, 45], "sort_kei": 55, "sourc": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 83, 85, 86, 88, 89, 91, 92, 98, 109], "space": [2, 5, 7, 8, 9, 10, 11, 12, 13, 34, 38, 45, 49, 50, 57, 58, 73, 74, 76, 79, 81, 101, 102, 103, 104, 106, 108, 113], "span": [64, 110], "specif": [9, 26, 27, 29, 31, 32, 34, 53, 69, 72, 78, 92, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112], "specifi": [5, 8, 12, 18, 22, 24, 34, 49, 64, 80, 101, 108], "sphinx": 98, "split": [8, 12, 110], "spread": 106, "st_mtime": 72, "stack": [18, 20, 29], "stage": 92, "stand": 111, "standard": [2, 5, 6, 34, 45, 106], "start": [2, 4, 11, 18, 48, 49, 51, 73, 75, 78, 89, 91, 92, 95, 100, 101, 102, 107, 109], "start_tim": [48, 49, 51, 76, 92], "state": [10, 13, 29], "stati": [34, 92], "static": [18, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 38, 47, 79, 96, 107, 109], "staticmethod": 107, "staticplugin": [18, 22, 24, 25, 26, 27, 29, 32, 107], "statist": [33, 110], "statu": [34, 48, 49, 51, 76, 92, 105, 110], "status": [34, 92], "statuss": 92, "std": 34, "stem": 46, "step": [2, 9, 11, 64, 73, 79, 96, 98, 100, 101, 102], "still": [11, 73, 106], "stop": 104, "store": [4, 34, 68, 73, 78, 79], "str": [2, 5, 8, 9, 10, 11, 12, 13, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 89, 107], "stratifi": 89, "strength": 92, "stride": 92, "string": [18, 34, 46, 50, 52, 53, 55, 58, 63, 64, 66, 69, 72, 80, 89], "string_to_hash": 63, "stripe": 64, "strong": 102, "stronger": 102, "structur": [60, 64, 75, 97, 99], "studi": 79, "style": [52, 59, 69], "styled_plotti": 52, "sub": 92, "submit": 98, "subset": [4, 61, 97], "substitut": 107, "success": [48, 49, 50, 76, 92, 110], "sudo": [100, 115], "suffix": [72, 89], "suggest": [46, 102], "suit": [98, 106], "sum": [11, 101], "summari": [105, 110], "super": 92, "superclass": [22, 23, 24, 25, 26, 27, 31, 32, 33], "superior": 112, "support": [5, 7, 9, 34, 36, 40, 42, 43, 73, 76, 79, 81, 100, 104, 106], "support_discret": 9, "suppos": 109, "sure": [95, 96, 98, 100], "surfac": [9, 104], "surrog": [2, 3, 6, 101, 104, 108, 113], "surrogatemodel": 6, "swig": 100, "switch": [46, 104], "symb": 70, "symbol": [21, 27, 70], "symbolic_explan": 21, "symbolicexplan": 27, "symbolicregressor": 70, "sympi": 70, "sympifi": 70, "system": 78, "t": [9, 18, 48, 69, 92], "tab": [32, 110], "tabl": [31, 33, 64, 105], "take": [8, 69, 106, 109, 111], "tanh": [89, 92], "tar": [100, 115], "target": [5, 6, 89, 113], "task": [29, 92], "techniqu": [97, 104], "tell": 105, "tend": 102, "termin": 89, "test": [2, 92, 100], "test_dataload": 92, "test_step": 92, "text": [50, 64, 69], "than": [8, 9, 27, 69, 106, 107, 112, 113], "thei": [8, 34, 76, 99, 103, 105, 106, 110], "them": [18, 23, 25, 31, 32, 33, 34, 69, 76, 88, 90, 96, 98, 99, 104, 111], "therefor": [18, 22, 23, 24, 25, 26, 27, 31, 32, 33, 47, 78, 109], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 79, 82, 83, 84, 85, 86, 88, 89, 91, 92, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "think": 98, "thoroughli": 104, "though": 104, "three": [23, 103, 109], "threshold": 102, "through": [34, 75, 99, 102, 103, 107, 110, 111], "throughout": [34, 45, 105], "thrown": [18, 46], "thu": [70, 108], "tick": 69, "ticktext": 69, "tickval": 69, "time": [2, 9, 11, 18, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 45, 48, 49, 51, 72, 73, 75, 89, 91, 92, 97, 99, 101, 103, 104, 107, 109], "timeout": [50, 76, 92], "timestamp": [36, 37, 38, 39, 40, 41, 42, 43, 72, 75], "titl": [18, 26, 99], "to_json": [47, 51], "to_serialized_dict": 73, "to_text": 50, "too": 95, "tool": [1, 8, 12, 76, 77, 81, 88, 90], "toolkit": [35, 36], "top": [64, 101, 107, 108], "torch": [34, 49, 92], "torchmetr": 92, "torchvis": 92, "total": [4, 8, 72, 87, 89, 93, 94, 108, 116], "totensor": 92, "toward": [2, 11], "trace": 102, "traceback": [49, 110], "track": [73, 106], "train": [3, 5, 6, 8, 9, 10, 12, 13, 27, 89, 92, 97, 102, 109, 113], "train_dataload": 92, "train_test_split": 89, "trainer": 92, "training_step": 92, "trajectori": [34, 45], "transform": [5, 46, 78, 92], "transit": 101, "treat": [5, 80], "tree": [4, 8, 10, 12, 13, 22, 24, 34, 101, 108, 109], "trees_total_vari": 4, "trees_variance_fract": 4, "trend": [106, 111], "tri": 110, "trial": [34, 36, 37, 38, 40, 42, 43, 45, 48, 49, 73, 75, 76, 78, 80, 102, 103, 104, 105, 106, 110, 111, 112, 113, 114], "trial_histori": 73, "trial_id": 34, "trial_kei": [34, 45], "triangl": 104, "trigger": 109, "trivial": 79, "true": [4, 5, 8, 9, 12, 18, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 49, 53, 55, 62, 64, 68, 69, 75, 76, 85, 86, 89, 92, 100, 102, 104, 107, 111], "try": [96, 100, 101, 110, 115], "tune": 80, "tupl": [4, 5, 6, 7, 8, 9, 10, 11, 13, 17, 18, 20, 23, 29, 34, 45, 48, 51, 55, 67, 69, 72], "turn": 54, "tutori": [75, 78, 107, 109], "two": [44, 47, 64, 96, 101, 103, 104, 108, 109, 112, 113, 114], "type": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 79, 92], "typeerror": [7, 34, 46], "typevar": 55, "typic": 102, "u": [76, 107], "uncertainti": [101, 113], "under": [75, 107, 110], "underperform": 106, "understand": [75, 79, 99, 104, 106, 108, 109], "uniform": [76, 80, 91, 92], "uniformfloathyperparamet": [89, 91, 92], "uniformintegerhyperparamet": [89, 92], "union": [2, 4, 8, 9, 10, 11, 12, 13, 14, 17, 18, 27, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 55, 62, 64, 69, 70], "uniqu": [18, 51, 75], "unit": 78, "unittest": 98, "unknown": [7, 18, 50, 72, 76], "unlik": 97, "unsanit": 70, "unsuccess": [110, 111], "until": 102, "up": [18, 20, 29, 34, 52, 65, 97], "updat": [46, 47, 52, 53, 60, 67, 68, 89, 95, 109, 110], "update_dict": 60, "update_group": 46, "update_run": 46, "upon": 109, "upper": [34, 38, 47, 76, 89, 91, 92], "url": [16, 18, 52, 99], "us": [2, 3, 4, 5, 8, 9, 12, 13, 18, 20, 25, 26, 27, 29, 31, 32, 34, 42, 43, 46, 48, 49, 52, 53, 56, 60, 64, 66, 68, 69, 70, 73, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114], "use_cach": 20, "user": [18, 22, 23, 24, 25, 26, 27, 31, 32, 100], "usr": [100, 115], "usual": [72, 98], "util": [1, 3, 4, 8, 9, 10, 12, 13, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 78, 89, 92, 99], "utilitii": 52, "v1": 78, "v2": 78, "v_u_individu": 4, "v_u_tot": 4, "val": 92, "val_acc": 92, "val_dataload": 92, "val_loss": 92, "valid": [9, 18, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 49, 75, 92, 104], "validation_step": 92, "valu": [4, 5, 6, 8, 9, 10, 11, 12, 13, 18, 22, 23, 24, 25, 26, 27, 29, 31, 32, 34, 44, 46, 47, 50, 52, 53, 54, 57, 58, 64, 68, 69, 70, 72, 78, 79, 80, 91, 95, 97, 98, 102, 103, 104, 105, 106, 110, 111, 113, 114], "valuabl": 104, "valueerror": [7, 18, 34, 47, 49, 64, 69, 72], "var": [5, 8, 10, 11], "vari": [101, 105, 108], "variabl": [18, 22, 23, 24, 25, 26, 27, 31, 32, 69, 75, 82, 83, 85, 86, 106, 107], "varianc": [4, 5, 8, 10, 11, 12, 13, 108], "variant": 68, "varieti": 99, "variou": [97, 99, 104, 106, 108, 111, 112], "ve": 75, "vector": [10, 13], "vendor": [100, 115], "veri": [102, 103, 109], "verifi": 102, "version": [5, 24, 42, 43, 69, 76, 81, 107], "very_small_numb": 5, "via": [73, 74, 79, 80, 88, 90, 93, 96, 98, 100, 101, 116], "view": [18, 96, 101, 103, 104, 105, 108, 110, 111, 112], "viewabl": 109, "visit": 31, "visual": [15, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 79, 99, 103, 104, 105, 106, 108, 109, 111, 113], "wa": [9, 27, 34, 46, 48, 68, 95, 100, 103, 104, 106, 110, 111, 112, 113, 114, 115], "wai": [84, 88, 100, 102, 107, 109], "want": [34, 69, 79, 80, 84, 88, 96, 100, 107], "warn": [70, 89], "wasn": 9, "wb": 79, "we": [75, 76, 81, 82, 83, 85, 86, 92, 98, 100, 104, 107, 108, 109, 110, 111], "weak": 102, "webbrows": 99, "webserv": 100, "weigh": 34, "weight": [11, 12, 13, 66, 76, 92, 97, 101, 108], "well": [3, 7, 34, 44, 45, 46, 52, 53, 57, 69, 75, 80, 81, 102, 104], "were": [34, 44, 49, 102, 103, 105, 110], "weren": 9, "wget": [100, 115], "what": [46, 80, 95, 96, 102, 105, 106, 110, 111, 113, 114], "when": [64, 73, 79, 80, 95, 96, 98, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112], "where": [41, 49, 76, 79, 103, 104, 105, 107, 112], "wherea": 97, "wheter": 34, "whether": [5, 8, 9, 12, 18, 20, 26, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 49, 53, 62, 64, 66, 69, 98, 101, 102, 104, 106, 108, 110, 113], "which": [6, 18, 31, 34, 46, 49, 57, 68, 69, 73, 75, 79, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112], "while": [100, 104, 105, 109, 110, 114], "whole": 4, "why": [44, 105, 110], "wide": 99, "width": 92, "window": 100, "wise": 4, "wish": [101, 102, 103, 104, 106, 108, 111, 112, 113, 114], "within": [30, 31, 99, 106, 111], "without": 5, "work": [5, 22, 23, 24, 25, 26, 27, 31, 32, 46, 98, 99, 100, 107, 113, 115], "workaround": 108, "worker": [96, 100], "working_dir": [36, 38, 40, 42, 43], "working_directori": 46, "workshop": 99, "wors": 113, "worst": 47, "would": [78, 98, 109, 110], "wrap": 64, "wrapper": [4, 5, 34], "write": [53, 73, 78], "write_fil": 53, "write_imag": [82, 83, 85, 86], "written": 98, "wrong": 95, "wrote": 107, "wrt": [8, 12], "x": [5, 6, 9, 69, 70, 89, 92, 104, 106, 110, 111, 113, 114], "x0": 70, "x1": 70, "x_test": 89, "x_train": 89, "xzvf": [100, 115], "y": [4, 5, 6, 9, 69, 89, 92, 101, 106, 110, 113, 114], "y_test": 89, "y_train": 89, "ye": [100, 111], "year": 99, "yet": 48, "yield": [57, 89], "you": [18, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "your": [73, 76, 77, 78, 79, 80, 88, 90, 91, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115], "z": 9, "zero": 8, "zip": [82, 83, 85, 86, 88, 89, 91, 92]}, "titles": ["API References", "deepcave.evaluators", "deepcave.evaluators.ablation", "deepcave.evaluators.epm", "deepcave.evaluators.epm.fanova_forest", "deepcave.evaluators.epm.random_forest", "deepcave.evaluators.epm.random_forest_surrogate", "deepcave.evaluators.epm.utils", "deepcave.evaluators.fanova", "deepcave.evaluators.footprint", "deepcave.evaluators.lpi", "deepcave.evaluators.mo_ablation", "deepcave.evaluators.mo_fanova", "deepcave.evaluators.mo_lpi", "deepcave.layouts", "deepcave.layouts.header", "deepcave.layouts.not_found", "deepcave.layouts.sidebar", "deepcave.plugins", "deepcave.plugins.budget", "deepcave.plugins.dynamic", "deepcave.plugins.hyperparameter", "deepcave.plugins.hyperparameter.ablation_paths", "deepcave.plugins.hyperparameter.configuration_cube", "deepcave.plugins.hyperparameter.importances", "deepcave.plugins.hyperparameter.parallel_coordinates", "deepcave.plugins.hyperparameter.pdp", "deepcave.plugins.hyperparameter.symbolic_explanations", "deepcave.plugins.objective", "deepcave.plugins.static", "deepcave.plugins.summary", "deepcave.plugins.summary.configurations", "deepcave.plugins.summary.footprint", "deepcave.plugins.summary.overview", "deepcave.runs", "deepcave.runs.converters", "deepcave.runs.converters.amltk", "deepcave.runs.converters.bohb", "deepcave.runs.converters.dataframe", "deepcave.runs.converters.deepcave", "deepcave.runs.converters.optuna", "deepcave.runs.converters.raytune", "deepcave.runs.converters.smac3v1", "deepcave.runs.converters.smac3v2", "deepcave.runs.exceptions", "deepcave.runs.group", "deepcave.runs.handler", "deepcave.runs.objective", "deepcave.runs.recorder", "deepcave.runs.run", "deepcave.runs.status", "deepcave.runs.trial", "deepcave.utils", "deepcave.utils.cache", "deepcave.utils.cast", "deepcave.utils.compression", "deepcave.utils.configs", "deepcave.utils.configspace", "deepcave.utils.converters", "deepcave.utils.dash", "deepcave.utils.data_structures", "deepcave.utils.docs", "deepcave.utils.files", "deepcave.utils.hash", "deepcave.utils.layout", "deepcave.utils.logs", "deepcave.utils.multi_objective_importance", "deepcave.utils.notification", "deepcave.utils.run_caches", "deepcave.utils.styled_plotty", "deepcave.utils.symbolic_regression", "deepcave.utils.url", "deepcave.utils.util", "AMLTK", "BOHB", "Adding a Converter", "Pandas DataFrame", "DeepCAVE", "Runs and Converters", "Optuna", "RayTune", "SMAC", "Ablation Paths", "Importances", "API", "Parallel Coordinates", "Partial Dependencies", "Computation times", "Examples", "Multi-Layer Perceptron via Sklearn", "Record", "Record Minimal Run", "Multi-Layer Perceptron via PyTorch", "Computation times", "Computation times", "Frequently Asked Questions", "Getting Started", "Glossary", "How to Contribute", "Home", "Installation", "Ablation Paths", "Budget Correlation", "Configuration Cube", "Configuration Footprint", "Configurations", "Cost Over Time", "Adding a Plugin", "Importances", "Displaying Data with Plugins", "Overview", "Parallel Coordinates", "Pareto Front", "Partial Dependencies", "Symbolic Explanations", "Install Redis Server", "Computation times"], "titleterms": {"1": [75, 107], "2": [75, 107], "3": [75, 107], "4": 107, "5": [75, 107], "6": 107, "7": 107, "The": 78, "ablat": [2, 82, 101], "ablation_path": 22, "activ": 107, "ad": [75, 78, 107, 109], "adjust": 107, "amltk": [36, 73], "analysi": 99, "api": [0, 84, 88, 99], "architectur": 99, "ask": 95, "bohb": [37, 74], "broad": 99, "budget": [19, 102], "cach": 53, "cast": 54, "citat": 99, "class": [75, 107], "code": 105, "commit": 98, "comprehens": 99, "compress": 55, "comput": [87, 93, 94, 116], "config": 56, "configspac": 57, "configur": [31, 103, 104, 105, 110], "configuration_cub": 23, "congratul": [75, 107], "contribut": 98, "convert": [35, 36, 37, 38, 39, 40, 41, 42, 43, 58, 75, 78], "coordin": [85, 111], "correl": 102, "cost": 106, "coverag": 104, "creat": [75, 98, 107], "cube": 103, "dash": 59, "data": 109, "data_structur": 60, "datafram": [38, 76], "decid": 107, "deepcav": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77], "depend": [86, 113], "develop": [98, 99], "displai": 109, "doc": 61, "document": [75, 98, 107], "dynam": 20, "epm": [3, 4, 5, 6, 7], "evalu": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "exampl": 88, "except": 44, "explan": 114, "extend": 98, "fanova": 8, "fanova_forest": 4, "featur": 99, "file": 62, "fit": 107, "flexibl": 99, "footprint": [9, 32, 104], "frequent": 95, "front": 112, "function": 107, "get": 96, "glossari": 97, "group": 45, "handler": 46, "hash": 63, "header": 15, "home": 99, "hook": 98, "how": 98, "hyperparamet": [21, 22, 23, 24, 25, 26, 27], "icon": 107, "implement": 75, "import": [24, 83, 108], "inform": 110, "instal": [100, 115], "interact": 99, "interfac": 99, "interpret": [102, 106], "introduct": [75, 107], "layer": [89, 92], "layout": [14, 15, 16, 17, 64, 107], "log": 65, "lpi": 10, "mac": 100, "meta": 110, "method": [75, 108], "minim": 91, "mo_abl": 11, "mo_fanova": 12, "mo_lpi": 13, "modul": [1, 3, 19, 21, 28, 30, 35, 52], "modular": 99, "more": 96, "multi": [89, 92, 101, 108], "multi_objective_import": 66, "need": 107, "not_found": 16, "notif": 67, "object": [28, 47, 78, 101, 105, 108, 110], "optim": 99, "option": [96, 101, 102, 103, 104, 106, 108, 111, 112, 113, 114], "optuna": [40, 79], "over": 106, "overview": [33, 105, 110], "panda": 76, "parallel": [85, 111], "parallel_coordin": 25, "pareto": 112, "partial": [86, 113], "path": [82, 101], "pdp": 26, "perceptron": [89, 92], "perform": 104, "plot": [104, 111], "plugin": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 107, 109], "pre": 98, "properti": [2, 4, 8, 9, 10, 11, 13, 14, 16, 17, 18, 20, 29, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 68], "pull": 98, "pytorch": 92, "question": 95, "quick": 110, "random_forest": 5, "random_forest_surrog": 6, "raytun": [41, 80], "record": [48, 88, 90, 91], "redi": [100, 115], "refer": 0, "regist": [75, 107], "relat": 100, "request": 98, "run": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 78, 91, 107], "run_cach": 68, "select": 107, "server": [100, 115], "setup": 98, "sidebar": 17, "sklearn": 89, "smac": 81, "smac3v1": 42, "smac3v2": 43, "space": 110, "start": 96, "static": 29, "statu": 50, "status": 110, "step": [75, 107], "structur": [107, 109], "styled_plotti": 69, "summari": [30, 31, 32, 33], "support": 99, "symbol": 114, "symbolic_explan": 27, "symbolic_regress": 70, "test": 98, "time": [87, 93, 94, 106, 116], "tool": 99, "trial": 51, "type": [107, 109], "understand": 107, "unit": 98, "updat": 98, "url": 71, "us": 111, "util": [7, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "via": [89, 92], "workflow": 98, "your": [75, 107], "yourself": [75, 107]}})